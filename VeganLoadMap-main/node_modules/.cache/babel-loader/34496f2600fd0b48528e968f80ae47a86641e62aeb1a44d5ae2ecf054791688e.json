{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"현재 시간: \" + _toDisplayString($options.formattedCurrentTime), 1 /* TEXT */)]), _createCommentVNode(\" data 객체 내용을 출력 \"), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createElementVNode(\"p\", null, \"Payment ID : \" + _toDisplayString($data.paymentData.paymentid), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_createElementVNode(\"p\", null, \"StoreName : \" + _toDisplayString($data.paymentData.storename), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_createElementVNode(\"p\", null, \"User ID : \" + _toDisplayString($data.paymentData.userid), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_createElementVNode(\"p\", null, \"Price : \" + _toDisplayString($data.paymentData.price), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_createElementVNode(\"p\", null, \"Status : \" + _toDisplayString($data.paymentData.status), 1 /* TEXT */)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_toDisplayString","$options","formattedCurrentTime","_createCommentVNode","$data","paymentData","paymentid","storename","userid","price","status"],"sources":["C:\\Ucamp\\VeganProject\\VeganLoadMap-main\\VeganLoadMap-main\\src\\components\\payment\\PaymentSuccess.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <p>현재 시간: {{ formattedCurrentTime }}</p>\r\n  </div>\r\n\r\n  <!-- data 객체 내용을 출력 -->\r\n  <ul>\r\n    <li><p>Payment ID : {{ paymentData.paymentid }}</p></li>\r\n    <li><p>StoreName : {{ paymentData.storename }}</p></li>\r\n    <li><p>User ID : {{ paymentData.userid }}</p></li>\r\n    <li><p>Price : {{ paymentData.price }}</p></li>\r\n    <li><p>Status : {{ paymentData.status }}</p></li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nimport router from \"@/scripts/router\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentTime: new Date(),\r\n      paymentid : null,\r\n      paymentData : {},\r\n\r\n    };\r\n  },\r\n  async mounted() {\r\n    this.paymentid = router.currentRoute.value.params.value;\r\n    console.log('Received Payment Data:', this.paymentid);\r\n\r\n    try {\r\n      const response = await axios.get(`/api/paymentSuccess/${this.paymentid}`, this.paymentid);\r\n\r\n\r\n      this.paymentData = response.data;\r\n\r\n      console.log(this.paymentData.paymentid);\r\n      console.log(this.paymentData.storename);\r\n      console.log(this.paymentData.userid);\r\n      console.log(this.paymentData.price);\r\n      console.log(this.paymentData.status);\r\n      console.log(this.paymentData.created_at);\r\n    } catch (error) {\r\n      console.error('Error while fetching data:', error);\r\n    }\r\n  },\r\n  computed: {\r\n    // yyMMdd_HHmmss 변환 후 merchant_uid에 붙임 ex)231031_224258\r\n    formattedCurrentTime() {\r\n      const date = this.currentTime;\r\n      const year = String(date.getFullYear()).slice(-2);\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      const hours = String(date.getHours()).padStart(2, '0');\r\n      const minutes = String(date.getMinutes()).padStart(2, '0');\r\n      const seconds = String(date.getSeconds()).padStart(2, '0');\r\n\r\n      return `${year}${month}${day}_${hours}${minutes}${seconds}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;6DACEA,mBAAA,CAEM,cADJA,mBAAA,CAAwC,WAArC,SAAO,GAAAC,gBAAA,CAAGC,QAAA,CAAAC,oBAAoB,iB,GAGnCC,mBAAA,oBAAuB,EACvBJ,mBAAA,CAMK,aALHA,mBAAA,CAAwD,aAApDA,mBAAA,CAA+C,WAA5C,eAAa,GAAAC,gBAAA,CAAGI,KAAA,CAAAC,WAAW,CAACC,SAAS,iB,GAC5CP,mBAAA,CAAuD,aAAnDA,mBAAA,CAA8C,WAA3C,cAAY,GAAAC,gBAAA,CAAGI,KAAA,CAAAC,WAAW,CAACE,SAAS,iB,GAC3CR,mBAAA,CAAkD,aAA9CA,mBAAA,CAAyC,WAAtC,YAAU,GAAAC,gBAAA,CAAGI,KAAA,CAAAC,WAAW,CAACG,MAAM,iB,GACtCT,mBAAA,CAA+C,aAA3CA,mBAAA,CAAsC,WAAnC,UAAQ,GAAAC,gBAAA,CAAGI,KAAA,CAAAC,WAAW,CAACI,KAAK,iB,GACnCV,mBAAA,CAAiD,aAA7CA,mBAAA,CAAwC,WAArC,WAAS,GAAAC,gBAAA,CAAGI,KAAA,CAAAC,WAAW,CAACK,MAAM,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}