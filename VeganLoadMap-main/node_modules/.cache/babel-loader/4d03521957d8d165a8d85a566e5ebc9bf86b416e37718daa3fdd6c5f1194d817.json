{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3bea2b39\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"wrap\\\" data-v-3bea2b39><div class=\\\"greenContainer\\\" data-v-3bea2b39><div class=\\\"name\\\" data-v-3bea2b39>회원 정보</div></div><div class=\\\"shippingStatusContainer\\\" data-v-3bea2b39><div class=\\\"title\\\" data-v-3bea2b39> 회원 정보 </div></div></div><div class=\\\"member\\\" data-v-3bea2b39><div class=\\\"field\\\" data-v-3bea2b39><b data-v-3bea2b39>아이디</b><span class=\\\"placehold-text\\\" data-v-3bea2b39><input type=\\\"text\\\" data-v-3bea2b39></span></div><div class=\\\"field\\\" data-v-3bea2b39><b data-v-3bea2b39>비밀번호</b><input class=\\\"userpw\\\" type=\\\"password\\\" data-v-3bea2b39></div><!--    &lt;div class=&quot;field&quot;&gt;--><!--      &lt;b&gt;비밀번호 재확인&lt;/b&gt;--><!--      &lt;input class=&quot;userpw-confirm&quot; type=&quot;password&quot;&gt;--><!--    &lt;/div&gt;--><div class=\\\"field\\\" data-v-3bea2b39><b data-v-3bea2b39>이름</b><input type=\\\"text\\\" data-v-3bea2b39></div><div class=\\\"field\\\" data-v-3bea2b39><b data-v-3bea2b39>이메일</b><input type=\\\"email\\\" placeholder=\\\"example@naver.com\\\" data-v-3bea2b39></div><div class=\\\"field tel-number\\\" data-v-3bea2b39><b data-v-3bea2b39>휴대전화</b><select data-v-3bea2b39><option value=\\\"\\\" data-v-3bea2b39>대한민국 +82</option></select><div data-v-3bea2b39><input type=\\\"tel\\\" placeholder=\\\"전화번호 입력\\\" data-v-3bea2b39></div></div><input type=\\\"submit\\\" value=\\\"가입하기\\\" data-v-3bea2b39></div>\", 2);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\"    <div class=\\\"listContainer\\\">\"), _createCommentVNode(\"      <div class=\\\"col\\\" v-for=\\\"(user, idx) in state.items\\\" :key=\\\"idx\\\">\"), _createCommentVNode(\"        ID <div class=\\\"field\\\">\"), _createCommentVNode(\"        {{user.id}}</div>\"), _createCommentVNode(\"      </div>\"), _createCommentVNode(\"    </div>\"), _createCommentVNode(\"  </div>\")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_hoisted_1","_createCommentVNode"],"sources":["/Users/soohykim/Desktop/backup/src/components/MypageInfo.vue"],"sourcesContent":["<template>\n  <div class=\"wrap\">\n    <div class=\"greenContainer\">\n      <div class=\"name\">회원 정보</div>\n    </div>\n    <div class=\"shippingStatusContainer\">\n      <div class=\"title\">\n        회원 정보\n      </div>\n    </div>\n  </div>\n  <div class=\"member\">\n    <div class=\"field\">\n      <b>아이디</b>\n      <span class=\"placehold-text\"><input type=\"text\"></span>\n    </div>\n    <div class=\"field\">\n      <b>비밀번호</b>\n      <input class=\"userpw\" type=\"password\">\n    </div>\n    <!--    <div class=\"field\">-->\n    <!--      <b>비밀번호 재확인</b>-->\n    <!--      <input class=\"userpw-confirm\" type=\"password\">-->\n    <!--    </div>-->\n    <div class=\"field\">\n      <b>이름</b>\n      <input type=\"text\">\n    </div>\n    <div class=\"field\">\n      <b>이메일</b>\n      <input type=\"email\" placeholder=\"example@naver.com\">\n    </div>\n    <div class=\"field tel-number\">\n      <b>휴대전화</b>\n      <select>\n        <option value=\"\">대한민국 +82</option>\n      </select>\n      <div>\n        <input type=\"tel\" placeholder=\"전화번호 입력\">\n      </div>\n    </div>\n\n    <input type=\"submit\" value=\"가입하기\">\n  </div>\n\n<!--    <div class=\"listContainer\">-->\n<!--      <div class=\"col\" v-for=\"(user, idx) in state.items\" :key=\"idx\">-->\n<!--        ID <div class=\"field\">-->\n<!--        {{user.id}}</div>-->\n<!--      </div>-->\n<!--    </div>-->\n<!--  </div>-->\n</template>\n\n<script>\n\nimport {reactive} from \"vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"Mypage\",\n  setup() {\n    const state = reactive({\n      items: []\n    })\n\n    const load = () => {\n      axios.get(\"/api/mypage\").then(({data}) => {\n        state.items = data;\n      })\n    };\n\n    load();\n    return {state};\n  }\n}\n\n</script>\n\n<style scoped>\nbody{\n  padding: 0;\n  margin: 0;\n}\ndiv{\n  box-sizing: border-box;\n}\n\n/* 텍스트 */\n.summaryContainer .item > div:nth-child(2){\n  font-size: 13px;\n}\n\n.shippingStatusContainer{\n  padding: 21px 16px;\n  background-color: white;\n  margin-bottom: 10px;\n}\n\n/* 주문/배송조회 타이틀 */\n.shippingStatusContainer .title{\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n\n/* 장바구니 결제완료 배송중 구매확정 [로우] */\n.shippingStatusContainer .status{\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 21px;\n}\n/* 장바구니 결제완료 배송중 구매확정 [아이템]  */\n.shippingStatusContainer .item{\n  display: flex;\n}\n\n.shippingStatusContainer .number{\n  font-size: 31px;\n  font-weight: 500;\n  text-align: center;\n}\n.shippingStatusContainer .text{\n  font-size: 12px;\n  font-weight: normal;\n  color: #c2c2c2;\n  text-align: center;\n}\n.shippingStatusContainer .icon{\n  display: flex;\n  align-items: center;\n  padding: 20px;\n  width: 16px;\n  height: 16px;\n}\n\n*{\n  box-sizing: border-box; /*전체에 박스사이징*/\n  outline: none; /*focus 했을때 테두리 나오게 */\n}\n\nbody{\n  font-family: 'Noto Sans KR', sans-serif;\n  font-size:14px;\n  background-color: #f5f6f7;\n  line-height: 1.5em;\n  color : #222;\n  margin: 0;\n}\n\na{\n  text-decoration: none;\n  color: #222;\n}\n\n/*member sign in*/\n.member{\n  width: 400px;\n  /* border: 1px solid #000; */\n  margin: auto; /*중앙 정렬*/\n  padding: 0 20px;\n  margin-bottom: 20px;\n}\n\n.member .logo{\n  /*로고는 이미지라 인라인 블록이니까 마진 오토 안됨 블록요소만 됨 */\n  display: block;\n  margin :50px auto;\n}\n\n.member .field{\n  margin :5px 0; /*상하로 좀 띄워주기*/\n}\n\n.member b{\n  /* border: 1px solid #000; */\n  display: block; /*수직 정렬하기 */\n  margin-bottom: 5px;\n}\n\n/*input 중 radio 는 width 가 100%면 안되니까 */\n.member input:not(input[type=radio]),.member select{\n  border: 1px solid #dadada;\n  padding: 15px;\n  width: 100%;\n  margin-bottom: 5px;\n}\n\n.member input[type=button],\n.member input[type=submit]{\n  background-color: #2db400;\n  color:#fff\n}\n\n.member input:focus, .member select:focus{\n  border: 1px solid #2db400;\n}\n\n.field.birth div{ /*field 이면서 birth*/\n  display: flex;\n  gap:10px; /*간격 벌려줄때 공식처럼 사용핟나 */\n}\n\n/* .field.birth div > * {  gap 사용한거랑 같은 효과를 줌\n    flex:1;\n} */\n\n.field.tel-number div {\n  display: flex;\n}\n\n.field.tel-number div input:nth-child(1){\n  flex:2;\n}\n\n.field.tel-number div input:nth-child(2){\n  flex:1;\n}\n\n.field.gender div{\n  border: 1px solid #dadada;\n  padding: 15px 5px;\n  background-color: #fff;\n}\n\n.placehold-text{\n  display: block; /*span 으로 감싸서 크기영역을 블록요소로 만들어ㅜ저야한다*/\n  position:relative;\n  /* border: 1px solid #000; */\n}\n\n.placehold-text:before{\n  content : \"@naver.com\";\n  position:absolute; /*before은 inline 요소이기 때문에 span으로 감싸줌 */\n  right : 20px;\n  top:13px;\n  pointer-events: none; /*자체가 가지고 있는 pointer event 를 없애준다 */\n}\n\n.userpw{\n  background:url(./images/images2/icon-01.png) no-repeat center right 15px;\n  background-size: 20px;\n  background-color: #fff;\n}\n\n.userpw-confirm{\n  background:url(./images/images2/icon-02.png) no-repeat center right 15px;\n  background-size: 20px;\n  background-color: #fff;\n}\n\n.member-footer {\n  text-align: center;\n  font-size: 12px;\n  margin-top: 20px;\n}\n\n.member-footer div a:hover{\n  text-decoration: underline;\n  color:#2db400\n}\n\n.member-footer div a:after{\n  content:'|';\n  font-size: 10px;\n  color:#bbb;\n  margin-right: 5px;\n  margin-left: 7px;\n  /*살짝 내려가 있기 때문에 위로 올려주기 위해 transform 사용하기*/\n  display: inline-block;\n  transform: translateY(-1px);\n\n}\n\n.member-footer div a:last-child:after{\n  display: none;\n}\n\n@media (max-width:768px) {\n  .member{\n    width: 100%;\n  }\n}\n</style>"],"mappings":";;;;6DACEA,UASM,EAmCRC,mBAAA,qCAAsC,EACtCA,mBAAA,+EAA4E,EAC5EA,mBAAA,oCAAqC,EACrCA,mBAAA,6BAAgC,EAChCA,mBAAA,gBAAmB,EACnBA,mBAAA,cAAiB,EACjBA,mBAAA,YAAe,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}