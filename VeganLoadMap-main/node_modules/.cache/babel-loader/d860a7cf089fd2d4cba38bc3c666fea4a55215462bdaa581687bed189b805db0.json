{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { PGS } from '../constants';\nexport default {\n  data() {\n    return {\n      formLayout: 'horizontal',\n      form: this.$form.createForm(this, {\n        name: 'payment'\n      }),\n      initialMerchantUid: `mid_${new Date().getTime()}`,\n      pgs: PGS,\n      methods: Utils.getMethodsByPg(),\n      quotas: Utils.getQuotaByPg(),\n      initialMethod: 'card',\n      vbankDueVisible: false,\n      bizNumVisible: false,\n      quotaVisible: true\n    };\n  },\n  methods: {\n    handleSubmit(e) {\n      e.preventDefault();\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          const {\n            pg,\n            payMethod,\n            escrow,\n            vbankDue,\n            bizNum,\n            quota,\n            merchantUid,\n            name,\n            amount,\n            buyerName,\n            buyerTel,\n            buyerEmail,\n            buyerAddr,\n            buyerPostcode\n          } = values;\n          const {\n            IMP\n          } = window;\n          IMP.init(Utils.getUserCodeByPg(pg));\n          const data = {\n            pg,\n            pay_method: payMethod,\n            escrow,\n            merchant_uid: merchantUid,\n            name,\n            amount,\n            buyer_name: buyerName,\n            buyer_tel: buyerTel,\n            buyer_email: buyerEmail,\n            buyer_addr: buyerAddr,\n            buyer_postcode: buyerPostcode,\n            niceMobileV2: true\n          };\n          if (payMethod === 'vbank') {\n            data.vbank_due = vbankDue;\n            if (pg === 'danal_tpay') {\n              data.biz_num = bizNum;\n            }\n          }\n          if (payMethod === 'card') {\n            data.display = {\n              card_quota: quota\n            };\n          }\n          IMP.request_pay(data, this.callback);\n        }\n      });\n    },\n    handlePg(pg) {\n      const newMethods = Utils.getMethodsByPg(pg);\n      const [{\n        value\n      }] = newMethods;\n      this.methods = Utils.getMethodsByPg(pg);\n      this.form.setFieldsValue({\n        payMethod: value\n      });\n      this.setVisible(pg, value);\n    },\n    handleMethod(method) {\n      const pg = this.form.getFieldValue('pg');\n      this.setVisible(pg, method);\n    },\n    setVisible(pg, method) {\n      // 가상계좌 입금기한 렌더링 여부\n      const vbankDueVisible = method === 'vbank';\n      this.vbankDueVisible = vbankDueVisible;\n\n      // 사업자 번호 렌더링 여부\n      this.bizNumVisible = pg === 'danal_tpay' && vbankDueVisible;\n\n      // 할부개월수 렌더링 여부\n      this.quotaVisible = method === 'card';\n    },\n    handleGoBack() {\n      this.$router.push('/');\n    },\n    callback(response) {\n      // 본인인증 종료 후 result 페이지로 이동\n      const query = {\n        ...response,\n        type: 'payment'\n      };\n      this.$router.push({\n        path: '/result',\n        query\n      });\n    }\n  }\n};","map":{"version":3,"names":["PGS","data","formLayout","form","$form","createForm","name","initialMerchantUid","Date","getTime","pgs","methods","Utils","getMethodsByPg","quotas","getQuotaByPg","initialMethod","vbankDueVisible","bizNumVisible","quotaVisible","handleSubmit","e","preventDefault","validateFields","err","values","pg","payMethod","escrow","vbankDue","bizNum","quota","merchantUid","amount","buyerName","buyerTel","buyerEmail","buyerAddr","buyerPostcode","IMP","window","init","getUserCodeByPg","pay_method","merchant_uid","buyer_name","buyer_tel","buyer_email","buyer_addr","buyer_postcode","niceMobileV2","vbank_due","biz_num","display","card_quota","request_pay","callback","handlePg","newMethods","value","setFieldsValue","setVisible","handleMethod","method","getFieldValue","handleGoBack","$router","push","response","query","type","path"],"sources":["C:\\Ucamp\\VeganProject\\VeganLoadMap-main\\VeganLoadMap-main\\src\\components\\payment\\Payment.vue"],"sourcesContent":["<template>\r\n  <div class=\"imp-container\">\r\n    <h1>아임포트 결제</h1>\r\n    <a-form\r\n        :form=\"form\"\r\n        :label-col=\"{ span: 6 }\"\r\n        :wrapper-col=\"{ span: 18 }\"\r\n        :colon=\"false\"\r\n        labelAlign=\"left\"\r\n        @submit=\"handleSubmit\"\r\n    >\r\n      <a-form-item label=\"PG사\">\r\n        <a-select\r\n            v-decorator=\"['pg', { initialValue: 'html5_inicis' }]\"\r\n            size=\"large\"\r\n            @change=\"handlePg\"\r\n        >\r\n          <a-select-option\r\n              v-bind:key=\"pg.value\"\r\n              v-for=\"pg in pgs\"\r\n              :value=\"pg.value\"\r\n          >\r\n            {{ pg.label }}\r\n          </a-select-option>\r\n        </a-select>\r\n      </a-form-item>\r\n      <a-form-item label=\"결제수단\">\r\n        <a-select\r\n            v-decorator=\"['payMethod', { initialValue: 'card' }]\"\r\n            size=\"large\"\r\n            @change=\"handleMethod\"\r\n        >\r\n          <a-select-option\r\n              v-bind:key=\"method.value\"\r\n              v-for=\"method in methods\"\r\n              :value=\"method.value\"\r\n          >\r\n            {{ method.label }}\r\n          </a-select-option>\r\n        </a-select>\r\n      </a-form-item>\r\n      <a-form-item label=\"에스크로 결제여부\" class=\"imp-payment-escrow\">\r\n        <a-switch v-decorator=\"['escrow', { valuePropName: 'checked' }]\" />\r\n      </a-form-item>\r\n      <a-form-item label=\"입금기한\" v-if=\"vbankDueVisible\">\r\n        <a-input\r\n            v-decorator=\"[\r\n            'vbankDue',\r\n            {\r\n              rules: [{ required: true, message: '가상계좌 입금기한은 필수입력입니다' }],\r\n            }\r\n          ]\"\r\n            placeholder=\"YYYYMMDDhhmm\"\r\n            size=\"large\"\r\n            type=\"number\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item label=\"사업자번호\" v-if=\"bizNumVisible\">\r\n        <a-input\r\n            v-decorator=\"[\r\n            'bizNum',\r\n            {\r\n              rules: [{ required: true, message: '사업자번호는 필수입력입니다' }],\r\n            }\r\n          ]\"\r\n            size=\"large\"\r\n            type=\"number\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item label=\"할부개월수\" v-if=\"quotaVisible\">\r\n        <a-select\r\n            v-decorator=\"['quota', { initialValue: '0' }]\"\r\n            size=\"large\"\r\n        >\r\n          <a-select-option\r\n              v-bind:key=\"quota\"\r\n              v-for=\"quota in quotas\"\r\n              :value=\"quota\"\r\n          >\r\n            {{ quota === '0' ? 'PG사 기본제공' : quota === '1' ? '일시불' : `${quota}개월` }}\r\n          </a-select-option>\r\n        </a-select>\r\n      </a-form-item>\r\n      <a-form-item label=\"주문번호\">\r\n        <a-input\r\n            v-decorator=\"[\r\n            'merchantUid',\r\n            { initialValue: initialMerchantUid },\r\n          ]\"\r\n            size=\"large\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item label=\"주문명\">\r\n        <a-input\r\n            v-decorator=\"['name', { initialValue: '아임포트 VueJS 테스트 결제' }]\"\r\n            size=\"large\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item label=\"결제금액\">\r\n        <a-input\r\n            v-decorator=\"['amount', { initialValue: '1000' }]\"\r\n            size=\"large\"\r\n            type=\"number\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item label=\"이름\">\r\n        <a-input\r\n            v-decorator=\"['buyerName', { initialValue: '홍길동' }]\"\r\n            size=\"large\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item label=\"연락처\">\r\n        <a-input\r\n            v-decorator=\"['buyerPhone', { initialValue: '01012341234' }]\"\r\n            size=\"large\"\r\n            type=\"number\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item label=\"이메일\">\r\n        <a-input\r\n            v-decorator=\"['buyerEmail', { initialValue: 'example@example.com' }]\"\r\n            size=\"large\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item label=\"주소\">\r\n        <a-input\r\n            v-decorator=\"['buyerAddr', { initialValue: '서울시 강남구 신사동 661-16' }]\"\r\n            size=\"large\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item label=\"우편번호\">\r\n        <a-input\r\n            v-decorator=\"['buyerPostcode', { initialValue: '06010' }]\"\r\n            size=\"large\"\r\n            type=\"number\"\r\n        />\r\n      </a-form-item>\r\n      <a-button size=\"large\" @click=\"handleGoBack\">\r\n        뒤로가기\r\n      </a-button>\r\n      <a-button type=\"primary\" html-type=\"submit\" size=\"large\">\r\n        결제하기\r\n      </a-button>\r\n    </a-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { PGS } from '../constants';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      formLayout: 'horizontal',\r\n      form: this.$form.createForm(this, { name: 'payment' }),\r\n      initialMerchantUid: `mid_${new Date().getTime()}`,\r\n      pgs: PGS,\r\n      methods: Utils.getMethodsByPg(),\r\n      quotas: Utils.getQuotaByPg(),\r\n      initialMethod: 'card',\r\n      vbankDueVisible: false,\r\n      bizNumVisible: false,\r\n      quotaVisible: true,\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      this.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          const {\r\n            pg,\r\n            payMethod,\r\n            escrow,\r\n            vbankDue,\r\n            bizNum,\r\n            quota,\r\n            merchantUid,\r\n            name,\r\n            amount,\r\n            buyerName,\r\n            buyerTel,\r\n            buyerEmail,\r\n            buyerAddr,\r\n            buyerPostcode,\r\n          } = values;\r\n          const { IMP } = window;\r\n          IMP.init(Utils.getUserCodeByPg(pg));\r\n          const data = {\r\n            pg,\r\n            pay_method: payMethod,\r\n            escrow,\r\n            merchant_uid: merchantUid,\r\n            name,\r\n            amount,\r\n            buyer_name: buyerName,\r\n            buyer_tel: buyerTel,\r\n            buyer_email: buyerEmail,\r\n            buyer_addr: buyerAddr,\r\n            buyer_postcode: buyerPostcode,\r\n            niceMobileV2: true,\r\n          };\r\n\r\n          if (payMethod === 'vbank') {\r\n            data.vbank_due = vbankDue;\r\n            if (pg === 'danal_tpay') {\r\n              data.biz_num = bizNum;\r\n            }\r\n          }\r\n          if (payMethod === 'card') {\r\n            data.display = {\r\n              card_quota: quota,\r\n            };\r\n          }\r\n          IMP.request_pay(data, this.callback);\r\n        }\r\n      });\r\n    },\r\n    handlePg(pg) {\r\n      const newMethods = Utils.getMethodsByPg(pg);\r\n      const [{ value }] = newMethods;\r\n\r\n      this.methods = Utils.getMethodsByPg(pg);\r\n      this.form.setFieldsValue({\r\n        payMethod: value,\r\n      });\r\n\r\n      this.setVisible(pg, value);\r\n    },\r\n    handleMethod(method) {\r\n      const pg = this.form.getFieldValue('pg');\r\n      this.setVisible(pg, method);\r\n    },\r\n    setVisible(pg, method) {\r\n      // 가상계좌 입금기한 렌더링 여부\r\n      const vbankDueVisible = method === 'vbank';\r\n      this.vbankDueVisible = vbankDueVisible;\r\n\r\n      // 사업자 번호 렌더링 여부\r\n      this.bizNumVisible = pg === 'danal_tpay' && vbankDueVisible;\r\n\r\n      // 할부개월수 렌더링 여부\r\n      this.quotaVisible = method === 'card';\r\n    },\r\n    handleGoBack() {\r\n      this.$router.push('/');\r\n    },\r\n    callback(response) {\r\n      // 본인인증 종료 후 result 페이지로 이동\r\n      const query = {\r\n        ...response,\r\n        type: 'payment',\r\n      };\r\n      this.$router.push({ path: '/result', query });\r\n    },\r\n  },\r\n};\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}