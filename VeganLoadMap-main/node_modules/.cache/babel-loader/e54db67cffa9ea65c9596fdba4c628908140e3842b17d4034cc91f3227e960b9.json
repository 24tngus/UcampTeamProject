{"ast":null,"code":"import router from \"@/scripts/router\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      currentTime: new Date(),\n      paymentid: null,\n      paymentData: {},\n      createdAt: ''\n    };\n  },\n  async mounted() {\n    this.paymentid = router.currentRoute.value.params.value;\n    console.log('Received Payment Data:', this.paymentid);\n    try {\n      const response = await axios.get(`/api/paymentSuccess/${this.paymentid}`, this.paymentid);\n      this.paymentData = response.data;\n      let combined_date = '';\n      console.log(this.paymentData.paymentid);\n      console.log(this.paymentData.storename);\n      console.log(this.paymentData.userid);\n      console.log(this.paymentData.price);\n      console.log(this.paymentData.status);\n      console.log(this.paymentData.created_at);\n      for (let i = 0; i < this.paymentData.created_at.length; i++) {\n        combined_date += this.paymentData.created_at[i];\n      }\n      console.log(\"combined => \" + combined_date);\n      this.createdAt = combined_date;\n    } catch (error) {\n      console.error('Error while fetching data:', error);\n    }\n  },\n  computed: {\n    // yyMMdd_HHmmss 변환 후 merchant_uid에 붙임 ex)231031_224258\n    formattedCurrentTime() {\n      const date = this.currentTime;\n      const year = String(date.getFullYear()).slice(-2);\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      const hours = String(date.getHours()).padStart(2, '0');\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      const seconds = String(date.getSeconds()).padStart(2, '0');\n      return `${year}${month}${day}_${hours}${minutes}${seconds}`;\n    }\n  },\n  methods: {}\n};","map":{"version":3,"names":["router","axios","data","currentTime","Date","paymentid","paymentData","createdAt","mounted","currentRoute","value","params","console","log","response","get","combined_date","storename","userid","price","status","created_at","i","length","error","computed","formattedCurrentTime","date","year","String","getFullYear","slice","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","methods"],"sources":["C:\\Ucamp\\VeganProject\\VeganLoadMap-main\\VeganLoadMap-main\\src\\components\\payment\\PaymentSuccess.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <p>현재 시간: {{ formattedCurrentTime }}</p>\r\n  </div>\r\n\r\n  <!-- data 객체 내용을 출력 -->\r\n  <ul>\r\n    <li><p>Payment ID : {{ paymentData.paymentid }}</p></li>\r\n    <li><p>StoreName : {{ paymentData.storename }}</p></li>\r\n    <li><p>User ID : {{ paymentData.userid }}</p></li>\r\n    <li><p>Price : {{ paymentData.price }}</p></li>\r\n    <li><p>Status : {{ paymentData.status }}</p></li>\r\n    <li><p>Created At: {{ formatTimestamp(paymentData.created_at) }}</p></li>\r\n    <li><p>time : {{ createdAt }}</p></li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nimport router from \"@/scripts/router\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentTime: new Date(),\r\n      paymentid : null,\r\n      paymentData : {},\r\n      createdAt : '',\r\n\r\n    };\r\n  },\r\n  async mounted() {\r\n    this.paymentid = router.currentRoute.value.params.value;\r\n    console.log('Received Payment Data:', this.paymentid);\r\n\r\n    try {\r\n      const response = await axios.get(`/api/paymentSuccess/${this.paymentid}`, this.paymentid);\r\n\r\n\r\n      this.paymentData = response.data;\r\n\r\n      let combined_date = '';\r\n\r\n      console.log(this.paymentData.paymentid);\r\n      console.log(this.paymentData.storename);\r\n      console.log(this.paymentData.userid);\r\n      console.log(this.paymentData.price);\r\n      console.log(this.paymentData.status);\r\n      console.log(this.paymentData.created_at);\r\n      for(let i=0; i<this.paymentData.created_at.length; i++) {\r\n        combined_date += this.paymentData.created_at[i];\r\n      }\r\n      console.log(\"combined => \" + combined_date);\r\n      this.createdAt = combined_date;\r\n\r\n    } catch (error) {\r\n      console.error('Error while fetching data:', error);\r\n    }\r\n  },\r\n  computed: {\r\n    // yyMMdd_HHmmss 변환 후 merchant_uid에 붙임 ex)231031_224258\r\n    formattedCurrentTime() {\r\n      const date = this.currentTime;\r\n      const year = String(date.getFullYear()).slice(-2);\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      const hours = String(date.getHours()).padStart(2, '0');\r\n      const minutes = String(date.getMinutes()).padStart(2, '0');\r\n      const seconds = String(date.getSeconds()).padStart(2, '0');\r\n\r\n      return `${year}${month}${day}_${hours}${minutes}${seconds}`;\r\n    },\r\n  },\r\n  methods: {\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}