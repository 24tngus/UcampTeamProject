{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0067a0dc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"예약 세팅 고유 번호(삭제예정)\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"최대 테이블 개수\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"최대 인원 수\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"b\", null, \"예약 날짜\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header2 = _resolveComponent(\"Header2\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header2), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, [_hoisted_1, _createTextVNode(\" \" + _toDisplayString($data.selectedReserve.seq), 1 /* TEXT */), _hoisted_2, _hoisted_3, _createTextVNode(), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedReserve.team = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedReserve.team]]), _createTextVNode(_toDisplayString($data.selectedReserve.team), 1 /* TEXT */), _hoisted_4, _hoisted_5, _createTextVNode(), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedReserve.people = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedReserve.people]]), _createTextVNode(_toDisplayString($data.selectedReserve.people), 1 /* TEXT */), _hoisted_6, _hoisted_7, _createTextVNode(), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedReserve.date = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedReserve.date]]), _hoisted_8, _hoisted_9, _createTextVNode(\" 08:00 ~ 10:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.toggleTime($data.selectedReserve, 'time0810'))\n  }, _toDisplayString($data.selectedReserve.time0810 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.selectedReserve.time0810), 1 /* TEXT */), _hoisted_10, _createTextVNode(\" 10:00 ~ 12:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $options.toggleTime($data.selectedReserve, 'time1012'))\n  }, _toDisplayString($data.selectedReserve.time1012 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.selectedReserve.time1012), 1 /* TEXT */), _hoisted_11, _createTextVNode(\" 12:00 ~ 14:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.toggleTime($data.selectedReserve, 'time1214'))\n  }, _toDisplayString($data.selectedReserve.time1214 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.selectedReserve.time1214), 1 /* TEXT */), _hoisted_12, _createTextVNode(\" 14:00 ~ 16:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.toggleTime($data.selectedReserve, 'time1416'))\n  }, _toDisplayString($data.selectedReserve.time1416 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.selectedReserve.time1416), 1 /* TEXT */), _hoisted_13, _createTextVNode(\" 16:00 ~ 18:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = $event => $options.toggleTime($data.selectedReserve, 'time1618'))\n  }, _toDisplayString($data.selectedReserve.time1618 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.selectedReserve.time1618), 1 /* TEXT */), _hoisted_14, _createTextVNode(\" 18:00 ~ 20:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = $event => $options.toggleTime($data.selectedReserve, 'time1820'))\n  }, _toDisplayString($data.selectedReserve.time1820 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.selectedReserve.time1820), 1 /* TEXT */), _hoisted_15, _createTextVNode(\" 20:00 ~ 22:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = $event => $options.toggleTime($data.selectedReserve, 'time2022'))\n  }, _toDisplayString($data.selectedReserve.time2022 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.selectedReserve.time2022), 1 /* TEXT */), _hoisted_16, _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = $event => $options.updateReserve($data.selectedReserve))\n  }, \"수정하기\")])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createVNode","_component_Header2","_hoisted_1","_toDisplayString","$data","selectedReserve","seq","_hoisted_2","_hoisted_3","type","team","$event","_hoisted_4","_hoisted_5","people","_hoisted_6","_hoisted_7","date","_hoisted_8","_hoisted_9","onClick","_cache","$options","toggleTime","time0810","_hoisted_10","time1012","_hoisted_11","time1214","_hoisted_12","time1416","_hoisted_13","time1618","_hoisted_14","time1820","_hoisted_15","time2022","_hoisted_16","updateReserve"],"sources":["C:\\Users\\seokhyeon\\Desktop\\asd\\VeganLoadMap-main\\src\\components\\reserve\\ReserveUpdate.vue"],"sourcesContent":["<template>\n  <Header2 />\n  <div>\n    <div>\n      <b>예약 세팅 고유 번호(삭제예정)</b> {{selectedReserve.seq}}<br>\n      <b>최대 테이블 개수</b> <input type=\"number\" v-model=\"selectedReserve.team\">{{selectedReserve.team}}<br>\n      <b>최대 인원 수</b> <input type=\"number\" v-model=\"selectedReserve.people\">{{selectedReserve.people}}<br>\n      <b>예약 날짜</b> <input type=\"date\" v-model=\"selectedReserve.date\"><br><br>\n      08:00 ~ 10:00 <button @click=\"toggleTime(selectedReserve, 'time0810')\">{{ selectedReserve.time0810 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time0810 }}<br>\n      10:00 ~ 12:00 <button @click=\"toggleTime(selectedReserve, 'time1012')\">{{ selectedReserve.time1012 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time1012 }}<br>\n      12:00 ~ 14:00 <button @click=\"toggleTime(selectedReserve, 'time1214')\">{{ selectedReserve.time1214 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time1214 }}<br>\n      14:00 ~ 16:00 <button @click=\"toggleTime(selectedReserve, 'time1416')\">{{ selectedReserve.time1416 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time1416 }}<br>\n      16:00 ~ 18:00 <button @click=\"toggleTime(selectedReserve, 'time1618')\">{{ selectedReserve.time1618 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time1618 }}<br>\n      18:00 ~ 20:00 <button @click=\"toggleTime(selectedReserve, 'time1820')\">{{ selectedReserve.time1820 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time1820 }}<br>\n      20:00 ~ 22:00 <button @click=\"toggleTime(selectedReserve, 'time2022')\">{{ selectedReserve.time2022 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time2022 }}<br>\n      <button @click=\"updateReserve(selectedReserve)\">수정하기</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Header2 from \"@/components/header/Header2.vue\";\n\nexport default {\n  components: { Header2 },\n  data() {\n    return {\n      reserves: [],\n      selectedReserve: {\n        seq: null,\n        team: 0,\n        people: 0,\n        date: '',\n        time0810: 0,\n        time1012: 0,\n        time1214: 0,\n        time1416: 0,\n        time1618: 0,\n        time1820: 0,\n        time2022: 0\n      }\n    };\n  },\n  created() {\n    this.fetchReserves();\n  },\n  methods: {\n    formatDate(date) {\n      const formattedDate = new Date(date).toISOString().split('T')[0];\n      return formattedDate;\n    },\n    toggleTime(reserve, time) {\n      if (reserve[time] === 1) {\n        reserve[time] = 0;\n      } else {\n        for (let key in reserve) {\n          if (key.includes('time') && key !== time) {\n            reserve[key] = 0;\n          }\n        }\n        reserve[time] = 1;\n\n        // 업데이트된 예약 정보를 서버에 전송\n        this.updateReserve(reserve);\n      }\n    },\n    updateReserve(reserve) {\n      axios\n          .put(`/api/reserve/set/update/${reserve.seq}`, reserve)\n          .then((response) => {\n            console.log(\"Reserve updated successfully\", response.data);\n          })\n          .catch((error) => {\n            console.error(\"Error updating reserve\", error);\n          });\n    },\n    fetchReserves() {\n      axios\n          .get(\"/api/reservecheck\")\n          .then((response) => {\n            this.reserves = response.data;\n            if (this.reserves.length > 0) {\n              this.selectedReserve = this.reserves[0];\n              this.selectedReserve.date = this.formatDate(this.selectedReserve.date);\n            }\n          })\n          .catch((error) => {\n            console.error(\"Error fetching reserves\", error);\n          });\n    }\n  },\n  watch: {\n    'selectedReserve.date': function() {\n      console.log('New Date Selected:', this.selectedReserve.date);\n\n      // 데이터를 가져오는 API 호출을 수정하여 서버로부터 올바른 데이터를 가져오도록 함\n      axios\n          .post(\"/api/reservecheck\", this.selectedReserve)\n          .then((response) => {\n            console.log('API Response:', response.data);\n            this.selectedReserve.team = response.data.team;\n            this.selectedReserve.people = response.data.people;\n          })\n          .catch((error) => {\n            console.error(\"Error fetching reserve data\", error);\n          });\n    }\n  }\n};\n</script>\n이렇게 하면 콘솔에 데이터와 API 응답이 제대로 표시됩니다. 그러면 어떤 문제가 있는지 파악할 수 있을 것입니다.\n\n\n\n\n\n\n\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css?family=Nanum+Gothic:700,800&subset=korean');\n\n*,html,body{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  color: #333;\n  font-size: 13px;\n  font-family: 'Nanum Gothic', sans-serif, '굴림', 'gulim'\n}\n\n#wrapper {\n  background: #f1f1f1;\n}\n#container{\n  position: relative;\n  max-width: 90%;\n  min-width: 60%;\n  margin: 0 0 0 10%;\n}\n\n.form-group {\n  display: flex;\n  align-items: center; /* 세로 중앙 정렬 */\n}\n\n.input-button-container {\n  display: flex;\n  width: 100%;\n  align-items: center; /* 세로 중앙 정렬 */\n}\n\n.double {\n  background-color: darkolivegreen;\n  color: white;\n  padding: 15px;\n  width: 30%;\n  margin-left: 10px;\n  margin-bottom: 5px;\n  border-radius: 6px;\n  font-weight: 700;\n  font-size: 15px;\n  border : 1px solid white;\n}\n\n.datepicker-container {\n  width: 40%;\n  padding: 30px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.datepicker {\n  padding : 20px 5px;\n}\n\n.formatDate {\n  margin-top: 10px;\n}\n.fieldbook div{\n  display: flex;\n  gap:10px;\n}\n.field{\n  gap:10px;\n}\n.utime {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n}\n\n.time {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.time button {\n  margin: 0;\n}\n#timebtn{\n  padding : 10px;\n  border-radius: 8px;\n  border : 3px solid lightgray;\n}\n.memberform input:not(input[type=radio]){\n  border: 1px solid #dadada;\n  padding: 15px;\n  width: 100%;\n  margin-bottom: 5px;\n  border-radius: 6px;\n}\n.memberform{\n  padding : 0 30px 30px 30px;\n}\n.bookbtn{\n  background-color: darkolivegreen;\n  color: white;\n  padding: 15px;\n  width: 100%;\n  margin-bottom: 5px;\n  border-radius: 6px;\n  font-weight: 700;\n  font-size: 15px;\n  border : 1px solid white;\n}\n#cat{\n  width : 60%;\n  height : auto;\n  margin : auto;\n  text-align: left;\n}\n.cattitle{\n  padding : 20px;\n  font-weight: 700;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}