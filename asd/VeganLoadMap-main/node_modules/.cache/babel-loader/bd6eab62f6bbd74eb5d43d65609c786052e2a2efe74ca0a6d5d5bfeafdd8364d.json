{"ast":null,"code":"import axios from \"axios\";\nimport Header2 from \"@/components/header/Header2.vue\";\nexport default {\n  components: {\n    Header2\n  },\n  data() {\n    return {\n      reserves: [],\n      reserve: {\n        seq: 0,\n        team: \"\",\n        people: \"\",\n        date: \"\",\n        time0810: 0,\n        time1012: 0,\n        time1214: 0,\n        time1416: 0,\n        time1618: 0,\n        time1820: 0,\n        time2022: 0\n      },\n      selectedTeam: 0,\n      selectedPeople: 0\n    };\n  },\n  created() {\n    this.fetchReserves(this.reserve.date);\n  },\n  methods: {\n    formatDate(date) {\n      const formattedDate = new Date(date).toISOString().split(\"T\")[0];\n      return formattedDate;\n    },\n    checkOtherTime(reserve, time) {\n      for (let key in reserve) {\n        if (key.includes(\"time\") && key !== time && reserve[key] === 1) {\n          return true;\n        }\n      }\n      return false;\n    },\n    toggleTime(reserve, time) {\n      if (reserve[time] === 1) {\n        reserve[time] = 0;\n      } else {\n        for (let key in reserve) {\n          if (key.includes(\"time\") && key !== time) {\n            reserve[key] = 0;\n          }\n        }\n        reserve[time] = 1;\n      }\n      const selectedReserve = this.reserves.find(r => r.seq === reserve.seq);\n      if (selectedReserve) {\n        this.selectedTeam = selectedReserve.team;\n        this.selectedPeople = selectedReserve.people;\n      }\n    },\n    updateReserve(reserve) {\n      axios.put(`/api/reserve/set/update/${reserve.seq}`, reserve).then(response => {\n        console.log(\"Reserve updated successfully\", response.data);\n        this.fetchReserves();\n      }).catch(error => {\n        console.error(\"Error updating reserve\", error);\n      });\n    },\n    fetchReserves(date) {\n      const checksetting = {\n        date: date,\n        time0810: this.reserve.time0810,\n        time1012: this.reserve.time1012,\n        time1214: this.reserve.time1214,\n        time1416: this.reserve.time1416,\n        time1618: this.reserve.time1618,\n        time1820: this.reserve.time1820,\n        time2022: this.reserve.time2022,\n        team: this.reserve.team,\n        people: this.reserve.people\n      };\n      console.log(checksetting);\n      axios.get(\"/api/reservecheck\", {\n        params: {\n          checksetting: JSON.stringify(checksetting)\n        }\n      }).then(response => {\n        this.reserves = response.data;\n        this.reserves = response.data.team;\n        this.reserves - response.data.people;\n      }).catch(error => {\n        console.error(\"Error fetching reserves\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Header2","components","data","reserves","reserve","seq","team","people","date","time0810","time1012","time1214","time1416","time1618","time1820","time2022","selectedTeam","selectedPeople","created","fetchReserves","methods","formatDate","formattedDate","Date","toISOString","split","checkOtherTime","time","key","includes","toggleTime","selectedReserve","find","r","updateReserve","put","then","response","console","log","catch","error","checksetting","get","params","JSON","stringify"],"sources":["C:\\Users\\seokhyeon\\Desktop\\asd\\VeganLoadMap-main\\src\\components\\reserve\\ReserveUpdate.vue"],"sourcesContent":["<template>\n  <Header2/>\n  <div>\n        예약 세팅 고유 번호 {{reserve.seq}}<br>\n        max 테이블 개수 <input type=\"number\" v-model=\"selectedTeam\"><br>\n        max 인원 수 <input type=\"number\" v-model=\"selectedPeople\"><br>\n        예약 날짜 <input type=\"date\" v-model=\"reserve.date\"><br><br>\n        08:00 ~ 10:00 <button @click=\"toggleTime(reserve, 'time0810')\">{{ reserve.time0810 === 1 ? '해제' : '선택' }}</button>{{ reserve.time0810 }}<br>\n        10:00 ~ 12:00 <button @click=\"toggleTime(reserve, 'time1012')\">{{ reserve.time1012 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1012 }}<br>\n        12:00 ~ 14:00 <button @click=\"toggleTime(reserve, 'time1214')\">{{ reserve.time1214 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1214 }}<br>\n        14:00 ~ 16:00 <button @click=\"toggleTime(reserve, 'time1416')\">{{ reserve.time1416 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1416 }}<br>\n        16:00 ~ 18:00 <button @click=\"toggleTime(reserve, 'time1618')\">{{ reserve.time1618 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1618 }}<br>\n        18:00 ~ 20:00 <button @click=\"toggleTime(reserve, 'time1820')\">{{ reserve.time1820 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1820 }}<br>\n        20:00 ~ 22:00 <button @click=\"toggleTime(reserve, 'time2022')\">{{ reserve.time2022 === 1 ? '해제' : '선택' }}</button>{{ reserve.time2022 }}<br>\n        <button @click=\"updateReserve(reserve)\">수정하기</button>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Header2 from \"@/components/header/Header2.vue\";\n\nexport default {\n  components: { Header2 },\n  data() {\n    return {\n      reserves: [],\n      reserve: {\n        seq: 0,\n        team: \"\",\n        people: \"\",\n        date: \"\",\n        time0810: 0,\n        time1012: 0,\n        time1214: 0,\n        time1416: 0,\n        time1618: 0,\n        time1820: 0,\n        time2022: 0,\n      },\n      selectedTeam: 0,\n      selectedPeople: 0,\n    };\n  },\n  created() {\n    this.fetchReserves(this.reserve.date);\n  },\n  methods: {\n    formatDate(date) {\n      const formattedDate = new Date(date).toISOString().split(\"T\")[0];\n      return formattedDate;\n    },\n    checkOtherTime(reserve, time) {\n      for (let key in reserve) {\n        if (key.includes(\"time\") && key !== time && reserve[key] === 1) {\n          return true;\n        }\n      }\n      return false;\n    },\n    toggleTime(reserve, time) {\n      if (reserve[time] === 1) {\n        reserve[time] = 0;\n      } else {\n        for (let key in reserve) {\n          if (key.includes(\"time\") && key !== time) {\n            reserve[key] = 0;\n          }\n        }\n        reserve[time] = 1;\n      }\n      const selectedReserve = this.reserves.find((r) => r.seq === reserve.seq);\n      if (selectedReserve) {\n        this.selectedTeam = selectedReserve.team;\n        this.selectedPeople = selectedReserve.people;\n      }\n    },\n    updateReserve(reserve) {\n      axios\n          .put(`/api/reserve/set/update/${reserve.seq}`, reserve)\n          .then((response) => {\n            console.log(\"Reserve updated successfully\", response.data);\n            this.fetchReserves();\n          })\n          .catch((error) => {\n            console.error(\"Error updating reserve\", error);\n          });\n    },\n    fetchReserves(date) {\n      const checksetting = {\n        date: date,\n        time0810: this.reserve.time0810,\n        time1012: this.reserve.time1012,\n        time1214: this.reserve.time1214,\n        time1416: this.reserve.time1416,\n        time1618: this.reserve.time1618,\n        time1820: this.reserve.time1820,\n        time2022: this.reserve.time2022,\n        team: this.reserve.team,\n        people: this.reserve.people\n      };\n      console.log(checksetting);\n\n      axios\n          .get(\"/api/reservecheck\", {\n            params: { checksetting: JSON.stringify(checksetting) },\n          })\n          .then((response) => {\n            this.reserves = response.data;\n            this.reserves = response.data.team;\n            this.reserves - response.data.people;\n          })\n          .catch((error) => {\n            console.error(\"Error fetching reserves\", error);\n          });\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css?family=Nanum+Gothic:700,800&subset=korean');\n\n*,html,body{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  color: #333;\n  font-size: 13px;\n  font-family: 'Nanum Gothic', sans-serif, '굴림', 'gulim'\n}\n\n#wrapper {\n  background: #f1f1f1;\n}\n#container{\n  position: relative;\n  max-width: 90%;\n  min-width: 60%;\n  margin: 0 0 0 10%;\n}\n\n.form-group {\n  display: flex;\n  align-items: center; /* 세로 중앙 정렬 */\n}\n\n.input-button-container {\n  display: flex;\n  width: 100%;\n  align-items: center; /* 세로 중앙 정렬 */\n}\n\n.double {\n  background-color: darkolivegreen;\n  color: white;\n  padding: 15px;\n  width: 30%;\n  margin-left: 10px;\n  margin-bottom: 5px;\n  border-radius: 6px;\n  font-weight: 700;\n  font-size: 15px;\n  border : 1px solid white;\n}\n\n.datepicker-container {\n  width: 40%;\n  padding: 30px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.datepicker {\n  padding : 20px 5px;\n}\n\n.formatDate {\n  margin-top: 10px;\n}\n.fieldbook div{\n  display: flex;\n  gap:10px;\n}\n.field{\n  gap:10px;\n}\n.utime {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n}\n\n.time {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.time button {\n  margin: 0;\n}\n#timebtn{\n  padding : 10px;\n  border-radius: 8px;\n  border : 3px solid lightgray;\n}\n.memberform input:not(input[type=radio]){\n  border: 1px solid #dadada;\n  padding: 15px;\n  width: 100%;\n  margin-bottom: 5px;\n  border-radius: 6px;\n}\n.memberform{\n  padding : 0 30px 30px 30px;\n}\n.bookbtn{\n  background-color: darkolivegreen;\n  color: white;\n  padding: 15px;\n  width: 100%;\n  margin-bottom: 5px;\n  border-radius: 6px;\n  font-weight: 700;\n  font-size: 15px;\n  border : 1px solid white;\n}\n#cat{\n  width : 60%;\n  height : auto;\n  margin : auto;\n  text-align: left;\n}\n.cattitle{\n  padding : 20px;\n  font-weight: 700;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}