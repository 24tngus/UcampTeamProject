{"ast":null,"code":"import axios from \"axios\";\nimport Header2 from \"@/components/header/Header2.vue\";\nexport default {\n  components: {\n    Header2\n  },\n  data() {\n    return {\n      reserves: [],\n      selectedReserve: {\n        seq: null,\n        team: 0,\n        people: 0,\n        date: '',\n        time0810: 0,\n        time1012: 0,\n        time1214: 0,\n        time1416: 0,\n        time1618: 0,\n        time1820: 0,\n        time2022: 0\n      }\n    };\n  },\n  created() {\n    this.fetchReserves();\n  },\n  methods: {\n    formatDate(date) {\n      const formattedDate = new Date(date).toISOString().split('T')[0];\n      return formattedDate;\n    },\n    toggleTime(reserve, time) {\n      if (reserve[time] === 1) {\n        reserve[time] = 0;\n      } else {\n        for (let key in reserve) {\n          if (key.includes('time') && key !== time) {\n            reserve[key] = 0;\n          }\n        }\n        reserve[time] = 1;\n      }\n    },\n    updateReserve(reserve) {\n      axios.put(`/api/reserve/set/update/${reserve.seq}`, reserve).then(response => {\n        console.log(\"Reserve updated successfully\", response.data);\n        this.fetchReserves();\n      }).catch(error => {\n        console.error(\"Error updating reserve\", error);\n      });\n    },\n    fetchReserves() {\n      axios.get(\"/api/reservecheck\", data).then(response => {\n        this.selectedReserve.team = response.data.team;\n        this.selectedReserve.people = response.data.people;\n        if (this.reserves.length > 0) {\n          this.selectedReserve = this.reserves[0];\n        }\n      }).catch(error => {\n        console.error(\"Error fetching reserves\", error);\n      });\n    }\n  },\n  watch: {\n    'selectedReserve.date'(newVal) {\n      this.fetchTableAndPeopleData(newVal);\n    }\n  }\n};","map":{"version":3,"names":["axios","Header2","components","data","reserves","selectedReserve","seq","team","people","date","time0810","time1012","time1214","time1416","time1618","time1820","time2022","created","fetchReserves","methods","formatDate","formattedDate","Date","toISOString","split","toggleTime","reserve","time","key","includes","updateReserve","put","then","response","console","log","catch","error","get","length","watch","selectedReserve.date","newVal","fetchTableAndPeopleData"],"sources":["C:\\Users\\seokhyeon\\Desktop\\asd\\VeganLoadMap-main\\src\\components\\reserve\\ReserveUpdate.vue"],"sourcesContent":["<template>\n  <Header2 />\n  <div>\n    <div>\n      <b>예약 세팅 고유 번호(삭제예정)</b> {{selectedReserve.seq}}<br>\n      <b>가게고유번호</b> {{ selectedReserve.shopseq }}<br>\n      <b>최대 테이블 개수</b> <input type=\"number\" v-model=\"reserves.team\">{{reserves.team}}<br>\n      <b>최대 인원 수</b> <input type=\"number\" v-model=\"reserves.people\">{{reserves.people}}<br>\n      <b>예약 날짜</b> <input type=\"date\" v-model=\"selectedReserve.date\"><br><br>\n      08:00 ~ 10:00 <button @click=\"toggleTime(selectedReserve, 'time0810')\">{{ selectedReserve.time0810 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time0810 }}<br>\n      10:00 ~ 12:00 <button @click=\"toggleTime(selectedReserve, 'time1012')\">{{ selectedReserve.time1012 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time1012 }}<br>\n      12:00 ~ 14:00 <button @click=\"toggleTime(selectedReserve, 'time1214')\">{{ selectedReserve.time1214 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time1214 }}<br>\n      14:00 ~ 16:00 <button @click=\"toggleTime(selectedReserve, 'time1416')\">{{ selectedReserve.time1416 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time1416 }}<br>\n      16:00 ~ 18:00 <button @click=\"toggleTime(selectedReserve, 'time1618')\">{{ selectedReserve.time1618 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time1618 }}<br>\n      18:00 ~ 20:00 <button @click=\"toggleTime(selectedReserve, 'time1820')\">{{ selectedReserve.time1820 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time1820 }}<br>\n      20:00 ~ 22:00 <button @click=\"toggleTime(selectedReserve, 'time2022')\">{{ selectedReserve.time2022 === 1 ? '해제' : '선택' }}</button>{{ selectedReserve.time2022 }}<br>\n      <button @click=\"updateReserve(selectedReserve)\">수정하기</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Header2 from \"@/components/header/Header2.vue\";\n\nexport default {\n  components: {Header2},\n  data() {\n    return {\n      reserves: [],\n      selectedReserve: {\n        seq: null,\n        team: 0,\n        people: 0,\n        date: '',\n        time0810: 0,\n        time1012: 0,\n        time1214: 0,\n        time1416: 0,\n        time1618: 0,\n        time1820: 0,\n        time2022: 0\n      }\n    };\n  },\n  created() {\n    this.fetchReserves();\n  },\n  methods: {\n    formatDate(date) {\n      const formattedDate = new Date(date).toISOString().split('T')[0];\n      return formattedDate;\n    },\n    toggleTime(reserve, time) {\n      if (reserve[time] === 1) {\n        reserve[time] = 0;\n      } else {\n        for (let key in reserve) {\n          if (key.includes('time') && key !== time) {\n            reserve[key] = 0;\n          }\n        }\n        reserve[time] = 1;\n      }\n    },\n    updateReserve(reserve) {\n      axios\n          .put(`/api/reserve/set/update/${reserve.seq}`, reserve)\n          .then((response) => {\n            console.log(\"Reserve updated successfully\", response.data);\n            this.fetchReserves();\n          })\n          .catch((error) => {\n            console.error(\"Error updating reserve\", error);\n          });\n    },\n    fetchReserves() {\n      axios\n          .get(\"/api/reservecheck\", data)\n          .then((response) => {\n            this.selectedReserve.team = response.data.team;\n            this.selectedReserve.people = response.data.people;\n            if (this.reserves.length > 0) {\n              this.selectedReserve = this.reserves[0];\n            }\n          })\n          .catch((error) => {\n            console.error(\"Error fetching reserves\", error);\n          });\n    }\n  },\n  watch: {\n    'selectedReserve.date'(newVal) {\n      this.fetchTableAndPeopleData(newVal);\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css?family=Nanum+Gothic:700,800&subset=korean');\n\n*,html,body{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  color: #333;\n  font-size: 13px;\n  font-family: 'Nanum Gothic', sans-serif, '굴림', 'gulim'\n}\n\n#wrapper {\n  background: #f1f1f1;\n}\n#container{\n  position: relative;\n  max-width: 90%;\n  min-width: 60%;\n  margin: 0 0 0 10%;\n}\n\n.form-group {\n  display: flex;\n  align-items: center; /* 세로 중앙 정렬 */\n}\n\n.input-button-container {\n  display: flex;\n  width: 100%;\n  align-items: center; /* 세로 중앙 정렬 */\n}\n\n.double {\n  background-color: darkolivegreen;\n  color: white;\n  padding: 15px;\n  width: 30%;\n  margin-left: 10px;\n  margin-bottom: 5px;\n  border-radius: 6px;\n  font-weight: 700;\n  font-size: 15px;\n  border : 1px solid white;\n}\n\n.datepicker-container {\n  width: 40%;\n  padding: 30px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.datepicker {\n  padding : 20px 5px;\n}\n\n.formatDate {\n  margin-top: 10px;\n}\n.fieldbook div{\n  display: flex;\n  gap:10px;\n}\n.field{\n  gap:10px;\n}\n.utime {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n}\n\n.time {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.time button {\n  margin: 0;\n}\n#timebtn{\n  padding : 10px;\n  border-radius: 8px;\n  border : 3px solid lightgray;\n}\n.memberform input:not(input[type=radio]){\n  border: 1px solid #dadada;\n  padding: 15px;\n  width: 100%;\n  margin-bottom: 5px;\n  border-radius: 6px;\n}\n.memberform{\n  padding : 0 30px 30px 30px;\n}\n.bookbtn{\n  background-color: darkolivegreen;\n  color: white;\n  padding: 15px;\n  width: 100%;\n  margin-bottom: 5px;\n  border-radius: 6px;\n  font-weight: 700;\n  font-size: 15px;\n  border : 1px solid white;\n}\n#cat{\n  width : 60%;\n  height : auto;\n  margin : auto;\n  text-align: left;\n}\n.cattitle{\n  padding : 20px;\n  font-weight: 700;\n}\n</style>"],"mappings":"AAsBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,OAAM,MAAO,iCAAiC;AAErD,eAAe;EACbC,UAAU,EAAE;IAACD;EAAO,CAAC;EACrBE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;QACfC,GAAG,EAAE,IAAI;QACTC,IAAI,EAAE,CAAC;QACPC,MAAM,EAAE,CAAC;QACTC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,CAAC;QACXC,QAAQ,EAAE,CAAC;QACXC,QAAQ,EAAE,CAAC;QACXC,QAAQ,EAAE,CAAC;QACXC,QAAQ,EAAE,CAAC;QACXC,QAAQ,EAAE,CAAC;QACXC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACX,IAAI,EAAE;MACf,MAAMY,aAAY,GAAI,IAAIC,IAAI,CAACb,IAAI,CAAC,CAACc,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAChE,OAAOH,aAAa;IACtB,CAAC;IACDI,UAAUA,CAACC,OAAO,EAAEC,IAAI,EAAE;MACxB,IAAID,OAAO,CAACC,IAAI,MAAM,CAAC,EAAE;QACvBD,OAAO,CAACC,IAAI,IAAI,CAAC;MACnB,OAAO;QACL,KAAK,IAAIC,GAAE,IAAKF,OAAO,EAAE;UACvB,IAAIE,GAAG,CAACC,QAAQ,CAAC,MAAM,KAAKD,GAAE,KAAMD,IAAI,EAAE;YACxCD,OAAO,CAACE,GAAG,IAAI,CAAC;UAClB;QACF;QACAF,OAAO,CAACC,IAAI,IAAI,CAAC;MACnB;IACF,CAAC;IACDG,aAAaA,CAACJ,OAAO,EAAE;MACrB1B,KAAI,CACC+B,GAAG,CAAE,2BAA0BL,OAAO,CAACpB,GAAI,EAAC,EAAEoB,OAAO,EACrDM,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC9B,IAAI,CAAC;QAC1D,IAAI,CAACe,aAAa,CAAC,CAAC;MACtB,CAAC,EACAkB,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACR,CAAC;IACDnB,aAAaA,CAAA,EAAG;MACdlB,KAAI,CACCsC,GAAG,CAAC,mBAAmB,EAAEnC,IAAI,EAC7B6B,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAAC5B,eAAe,CAACE,IAAG,GAAI0B,QAAQ,CAAC9B,IAAI,CAACI,IAAI;QAC9C,IAAI,CAACF,eAAe,CAACG,MAAK,GAAIyB,QAAQ,CAAC9B,IAAI,CAACK,MAAM;QAClD,IAAI,IAAI,CAACJ,QAAQ,CAACmC,MAAK,GAAI,CAAC,EAAE;UAC5B,IAAI,CAAClC,eAAc,GAAI,IAAI,CAACD,QAAQ,CAAC,CAAC,CAAC;QACzC;MACF,CAAC,EACAgC,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACR;EACF,CAAC;EACDG,KAAK,EAAE;IACL,sBAAsBC,CAACC,MAAM,EAAE;MAC7B,IAAI,CAACC,uBAAuB,CAACD,MAAM,CAAC;IACtC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}