{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Image Upload\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Image Download\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"fileInput\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileChange && $options.handleFileChange(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.uploadImage && $options.uploadImage(...args))\n  }, \"Upload\"), _hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.downloadImage && $options.downloadImage(...args))\n  }, \"Download\")]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","type","ref","onChange","_cache","args","$options","handleFileChange","onClick","uploadImage","_hoisted_2","downloadImage"],"sources":["/Users/soohykim/Desktop/front/src/components/user_store/ShopInsert.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Image Upload</h2>\n    <input type=\"file\" ref=\"fileInput\" @change=\"handleFileChange\" />\n    <button @click=\"uploadImage\">Upload</button>\n    <h2>Image Download</h2>\n    <button @click=\"downloadImage\">Download</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      imageId: 1, // Replace with the actual image ID you want to download\n    };\n  },\n  methods: {\n    handleFileChange(event) {\n      this.selectedFile = event.target.files[0];\n    },\n    uploadImage() {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n\n      axios.post('/api/images/upload', formData)\n          .then(response => {\n            console.log(response.data);\n          })\n          .catch(error => {\n            console.error(error);\n          });\n    },\n    downloadImage() {\n      axios.get(`/api/images/${this.imageId}`, {\n        responseType: 'arraybuffer',\n      })\n          .then(response => {\n            if (response.status === 200) {\n              const blob = new Blob([response.data]);\n              const imageUrl = URL.createObjectURL(blob);\n              window.open(imageUrl, '_blank');\n            } else {\n              console.error(\"Image not found\");\n            }\n          })\n          .catch(error => {\n            console.error(error);\n          });\n    },\n  },\n};\n</script>\n\n\n<!--<template>-->\n<!--  <Header2 />-->\n<!--  <div class=\"card shadow-sm\" id=\"cat\">-->\n<!--    <div class=\"card-body\" >-->\n<!--      <div><h2 class=\"cattitle\">가게 신규 등록</h2></div>-->\n<!--      <div>-->\n<!--        <ul>-->\n<!--          <hr>-->\n<!--          <div  class=\"memberform\">-->\n<!--            <b></b><br>-->\n<!--            <b>가게 이름</b><input type=\"text\" placeholder=\"상호명\" id=\"storename\" v-model=\"state.form.storename\" required/><br>-->\n<!--            <b>가게 정보</b><input type=\"text\" placeholder=\"가게 소개\" id=\"detailinfo\" v-model=\"state.form.detailinfo\" /><br>-->\n<!--            <b>카테고리</b><input type=\"text\" placeholder=\"한식/중식/양식/퓨전/카페\" id=\"category\" v-model=\"state.form.category\" /><br>-->\n<!--            <b>가게 위치</b><input type=\"text\" placeholder=\"주소\" id=\"location\" v-model=\"state.form.location\" /><br>-->\n<!--            <b>가게 전화번호</b><input type=\"text\" placeholder=\"가게 전화번호 (- 없이 입력)\" id=\"phonenumber\" v-model=\"state.form.phonenumber\" /><br>-->\n<!--            <b>가게 이미지</b><br>-->\n<!--            <hr>-->\n\n<!--            <hr>-->\n<!--            <button @click=\"insertShop\" class=\"bookbtn\">등록하기</button>-->\n<!--          </div>-->\n<!--        </ul>-->\n<!--      </div>-->\n<!--    </div>-->\n<!--  </div>-->\n<!--</template>-->\n\n<!--<script>-->\n\n<!--import {reactive} from \"vue\";-->\n<!--import axios from \"axios\";-->\n<!--import router from \"@/scripts/router\";-->\n<!--import Header2 from \"@/components/header/Header2.vue\";-->\n\n<!--export default {-->\n<!--  name: \"ShopInsert\",-->\n<!--  components: {Header2},-->\n<!--  methods: {-->\n<!--    onFileChange() {-->\n<!--      this.selectedFile = this.$refs.fileInput.files[0];-->\n<!--      // const name = this.selectedFile.name;-->\n<!--      const formData = new FormData();-->\n<!--      formData.append(\"file\", this.selectedFile);-->\n<!--      axios.post(\"/api/images/upload\", formData, {-->\n<!--        headers: {-->\n<!--          \"Content-Type\": \"multipart/form-data\",-->\n<!--        },-->\n<!--      });-->\n<!--      // window.open(`/api/images/download/${name}`);-->\n<!--    }-->\n<!--  },-->\n<!--  data() {-->\n<!--    return {-->\n<!--      selectedFile: null,-->\n<!--    };-->\n<!--  },-->\n\n<!--  setup() {-->\n<!--    const state = reactive({-->\n<!--      form :{-->\n<!--        id: \"\",-->\n<!--        password: \"\",-->\n<!--        name: \"\",-->\n<!--        email: \"\",-->\n<!--        tel: \"\",-->\n<!--        storename: \"\",-->\n<!--        storenumber: \"\"-->\n<!--      }-->\n<!--    })-->\n<!--    const join = () => {-->\n<!--      axios.post(\"/api/store/join\", state.form).then(()=> {-->\n<!--        window.alert(\"회원가입 되었습니다\");-->\n<!--        router.push({path: \"/login2\"});-->\n<!--      })-->\n<!--    }-->\n\n<!--    return {state, join}-->\n<!--  }-->\n<!--}-->\n\n<!--</script>-->\n\n<!--<style scoped>-->\n<!--.datepicker-container {-->\n<!--  width: 40%;-->\n<!--  padding: 30px 0;-->\n<!--  display: flex;-->\n<!--  flex-direction: column;-->\n<!--  align-items: center;-->\n<!--}-->\n\n<!--.datepicker {-->\n<!--  padding : 20px 5px;-->\n<!--}-->\n\n<!--.formatDate {-->\n<!--  margin-top: 10px;-->\n<!--}-->\n<!--.fieldbook div{-->\n<!--  display: flex;-->\n<!--  gap:10px;-->\n<!--}-->\n<!--.field{-->\n<!--  gap:10px;-->\n<!--}-->\n<!--.utime {-->\n<!--  display: flex;-->\n<!--  align-items: center;-->\n<!--  padding: 10px;-->\n<!--}-->\n\n<!--.time {-->\n<!--  display: flex;-->\n<!--  flex-wrap: wrap;-->\n<!--  gap: 10px;-->\n<!--}-->\n\n<!--.time button {-->\n<!--  margin: 0;-->\n<!--}-->\n<!--#timebtn{-->\n<!--  padding : 10px;-->\n<!--  border-radius: 8px;-->\n<!--  border : 3px solid lightgray;-->\n<!--}-->\n<!--.memberform input:not(input[type=radio]){-->\n<!--  border: 1px solid #dadada;-->\n<!--  padding: 15px;-->\n<!--  width: 100%;-->\n<!--  margin-bottom: 5px;-->\n<!--  border-radius: 6px;-->\n<!--}-->\n<!--.memberform{-->\n<!--  padding : 0 30px 30px 30px;-->\n<!--}-->\n<!--.bookbtn{-->\n<!--  background-color: darkolivegreen;-->\n<!--  color: white;-->\n<!--  padding: 15px;-->\n<!--  width: 100%;-->\n<!--  margin-bottom: 5px;-->\n<!--  border-radius: 6px;-->\n<!--  font-weight: 700;-->\n<!--  font-size: 15px;-->\n<!--  border : 1px solid white;-->\n<!--}-->\n<!--#cat{-->\n<!--  width : 60%;-->\n<!--  height : auto;-->\n<!--  margin : auto;-->\n<!--  text-align: left;-->\n<!--}-->\n<!--.cattitle{-->\n<!--  padding : 20px;-->\n<!--  font-weight: 700;-->\n<!--}-->\n<!--</style>-->"],"mappings":";gCAEIA,mBAAA,CAAqB,YAAjB,cAAY;gCAGhBA,mBAAA,CAAuB,YAAnB,gBAAc;;;uBAJpBC,mBAAA,CAMM,cALJC,UAAqB,EACrBF,mBAAA,CAAgE;IAAzDG,IAAI,EAAC,MAAM;IAACC,GAAG,EAAC,WAAW;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;kDAC5DP,mBAAA,CAA4C;IAAnCU,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,WAAA,IAAAH,QAAA,CAAAG,WAAA,IAAAJ,IAAA,CAAW;KAAE,QAAM,GACnCK,UAAuB,EACvBZ,mBAAA,CAAgD;IAAvCU,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAK,aAAA,IAAAL,QAAA,CAAAK,aAAA,IAAAN,IAAA,CAAa;KAAE,UAAQ,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}