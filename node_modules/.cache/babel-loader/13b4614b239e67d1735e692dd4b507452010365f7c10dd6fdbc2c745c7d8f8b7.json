{"ast":null,"code":"import Header from \"@/components/header/Header.vue\";\nexport default {\n  components: {\n    Header\n  },\n  name: \"test\",\n  mounted() {\n    this.loadGoogleSignInScript();\n  },\n  methods: {\n    loadGoogleSignInScript() {\n      const script = document.createElement(\"script\");\n      script.src = \"https://accounts.google.com/gsi/client\";\n      script.async = true;\n      script.defer = true;\n      script.onload = this.initializeGoogleSignIn;\n      document.head.appendChild(script);\n    },\n    initializeGoogleSignIn() {\n      window.gapi.load(\"auth2\", () => {\n        window.gapi.auth2.init({\n          client_id: \"YOUR_CLIENT_ID\" // 여기에 클라이언트 ID를 추가하세요\n        });\n      });\n    },\n\n    GoogleLoginBtn: function () {\n      const self = this;\n      window.gapi.signin2.render(\"my-signin2\", {\n        scope: \"profile email\",\n        width: 240,\n        height: 50,\n        longtitle: true,\n        theme: \"dark\",\n        onsuccess: this.GoogleLoginSuccess,\n        onfailure: this.GoogleLoginFailure\n      });\n      setTimeout(function () {\n        if (!self.googleLoginCheck) {\n          const auth = window.gapi.auth2.getAuthInstance();\n          auth.isSignedIn.get();\n          document.querySelector(\".abcRioButton\").click();\n        }\n      }, 1500);\n    },\n    async GoogleLoginSuccess(googleUser) {\n      const googleEmail = googleUser.getBasicProfile().getEmail();\n      if (googleEmail !== \"undefined\") {\n        console.log(googleEmail);\n      }\n    },\n    // 구글 로그인 콜백함수 (실패)\n    GoogleLoginFailure(error) {\n      console.log(error);\n    }\n  }\n};","map":{"version":3,"names":["Header","components","name","mounted","loadGoogleSignInScript","methods","script","document","createElement","src","async","defer","onload","initializeGoogleSignIn","head","appendChild","window","gapi","load","auth2","init","client_id","GoogleLoginBtn","self","signin2","render","scope","width","height","longtitle","theme","onsuccess","GoogleLoginSuccess","onfailure","GoogleLoginFailure","setTimeout","googleLoginCheck","auth","getAuthInstance","isSignedIn","get","querySelector","click","googleUser","googleEmail","getBasicProfile","getEmail","console","log","error"],"sources":["C:\\VeganLoadMap\\src\\pages\\User.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <Header />\r\n    <div class=\"form-signin w-100 m-auto\">\r\n      <button class=\"btn\" @click=\"$router.push('/login')\">사용자 로그인</button> &nbsp;\r\n      <button class=\"btn\" @click=\"$router.push('/login2')\">판매자 로그인</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"@/components/header/Header.vue\";\r\n\r\nexport default {\r\n  components: { Header },\r\n  name: \"test\",\r\n  mounted() {\r\n    this.loadGoogleSignInScript();\r\n  },\r\n  methods: {\r\n    loadGoogleSignInScript() {\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"https://accounts.google.com/gsi/client\";\r\n      script.async = true;\r\n      script.defer = true;\r\n      script.onload = this.initializeGoogleSignIn;\r\n      document.head.appendChild(script);\r\n    },\r\n    initializeGoogleSignIn() {\r\n      window.gapi.load(\"auth2\", () => {\r\n        window.gapi.auth2.init({\r\n          client_id: \"YOUR_CLIENT_ID\", // 여기에 클라이언트 ID를 추가하세요\r\n        });\r\n      });\r\n    },\r\n    GoogleLoginBtn: function () {\r\n      const self = this;\r\n\r\n      window.gapi.signin2.render(\"my-signin2\", {\r\n        scope: \"profile email\",\r\n        width: 240,\r\n        height: 50,\r\n        longtitle: true,\r\n        theme: \"dark\",\r\n        onsuccess: this.GoogleLoginSuccess,\r\n        onfailure: this.GoogleLoginFailure,\r\n      });\r\n\r\n      setTimeout(function () {\r\n        if (!self.googleLoginCheck) {\r\n          const auth = window.gapi.auth2.getAuthInstance();\r\n          auth.isSignedIn.get();\r\n          document.querySelector(\".abcRioButton\").click();\r\n        }\r\n      }, 1500);\r\n    },\r\n    async GoogleLoginSuccess(googleUser) {\r\n      const googleEmail = googleUser.getBasicProfile().getEmail();\r\n      if (googleEmail !== \"undefined\") {\r\n        console.log(googleEmail);\r\n      }\r\n    },\r\n    // 구글 로그인 콜백함수 (실패)\r\n    GoogleLoginFailure(error) {\r\n      console.log(error);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-signin {\r\n  max-width: 330px;\r\n  padding: 1rem;\r\n}\r\n\r\n.btn {\r\n  background-color: #24855b;\r\n  color: #ffffff;\r\n}\r\n\r\n.form-signin .form-floating:focus-within {\r\n  z-index: 2;\r\n}\r\n</style>\r\n"],"mappings":"AAWA,OAAOA,MAAK,MAAO,gCAAgC;AAEnD,eAAe;EACbC,UAAU,EAAE;IAAED;EAAO,CAAC;EACtBE,IAAI,EAAE,MAAM;EACZC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,sBAAsB,CAAC,CAAC;EAC/B,CAAC;EACDC,OAAO,EAAE;IACPD,sBAAsBA,CAAA,EAAG;MACvB,MAAME,MAAK,GAAIC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAE,GAAI,wCAAwC;MACrDH,MAAM,CAACI,KAAI,GAAI,IAAI;MACnBJ,MAAM,CAACK,KAAI,GAAI,IAAI;MACnBL,MAAM,CAACM,MAAK,GAAI,IAAI,CAACC,sBAAsB;MAC3CN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,MAAM,CAAC;IACnC,CAAC;IACDO,sBAAsBA,CAAA,EAAG;MACvBG,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE,MAAM;QAC9BF,MAAM,CAACC,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC;UACrBC,SAAS,EAAE,gBAAgB,CAAE;QAC/B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;;IACDC,cAAc,EAAE,SAAAA,CAAA,EAAY;MAC1B,MAAMC,IAAG,GAAI,IAAI;MAEjBP,MAAM,CAACC,IAAI,CAACO,OAAO,CAACC,MAAM,CAAC,YAAY,EAAE;QACvCC,KAAK,EAAE,eAAe;QACtBC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE,IAAI;QACfC,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE,IAAI,CAACC,kBAAkB;QAClCC,SAAS,EAAE,IAAI,CAACC;MAClB,CAAC,CAAC;MAEFC,UAAU,CAAC,YAAY;QACrB,IAAI,CAACZ,IAAI,CAACa,gBAAgB,EAAE;UAC1B,MAAMC,IAAG,GAAIrB,MAAM,CAACC,IAAI,CAACE,KAAK,CAACmB,eAAe,CAAC,CAAC;UAChDD,IAAI,CAACE,UAAU,CAACC,GAAG,CAAC,CAAC;UACrBjC,QAAQ,CAACkC,aAAa,CAAC,eAAe,CAAC,CAACC,KAAK,CAAC,CAAC;QACjD;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACD,MAAMV,kBAAkBA,CAACW,UAAU,EAAE;MACnC,MAAMC,WAAU,GAAID,UAAU,CAACE,eAAe,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAC3D,IAAIF,WAAU,KAAM,WAAW,EAAE;QAC/BG,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;MAC1B;IACF,CAAC;IACD;IACAV,kBAAkBA,CAACe,KAAK,EAAE;MACxBF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}