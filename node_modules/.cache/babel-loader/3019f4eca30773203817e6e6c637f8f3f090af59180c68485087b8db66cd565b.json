{"ast":null,"code":"import { defineComponent } from 'vue';\nimport { GoogleMap, Marker, MarkerCluster, InfoWindow } from 'vue3-google-map';\n// import {error} from \"@babel/eslint-parser/lib/convert\";\n\nexport default defineComponent({\n  components: {\n    GoogleMap,\n    Marker,\n    MarkerCluster,\n    InfoWindow\n  },\n  setup() {\n    const mapCenter = {\n      lat: 37.5593773,\n      lng: 126.832661\n    };\n    const locations = [{\n      lat: 37.5593773,\n      lng: 126.832661\n    }, {\n      lat: 37.55795,\n      lng: 126.8397055\n    }];\n    return {\n      mapCenter,\n      locations\n    };\n  },\n  // setup()\n  data: function () {\n    return {\n      center: null,\n      jsonData: null,\n      detailPlaceInfo: null\n    };\n  },\n  // data()\n  async mounted() {\n    let parseJsonData;\n    try {\n      this.center = await this.getUserLocation();\n    } catch (error) {\n      console.log(\"Error User Location : \" + error);\n    }\n    fetch('https://proxy.cors.sh/https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=37.561736,%20126.835419&rankby=distance&name=%EC%82%BC%EA%B2%B9%EC%82%B4&key=AIzaSyB21eMRg-uMRk-i7r27DPDkntXbR5_kvnk', {\n      headers: {\n        'x-cors-api-key': 'temp_924d232f48d59dabc25af9778ab72f25'\n      }\n    }).then(res => res.json()).then(res => {\n      parseJsonData = res;\n      this.jsonData = parseJsonData.results;\n      console.log(this.jsonData);\n      console.log(this.jsonData[1].name);\n    });\n  },\n  // mounted()\n  methods: {\n    showPlaceInfo: function () {\n      // place_id로 googleMap JSON Data를 Parsing\n      fetch('https://proxy.cors.sh/https://maps.googleapis.com/maps/api/place/details/json?placeid=ChIJP1CJmGGcfDUR7ffziy-8NZA&key=AIzaSyB21eMRg-uMRk-i7r27DPDkntXbR5_kvnk', {\n        headers: {\n          'x-cors-api-key': 'temp_924d232f48d59dabc25af9778ab72f25'\n        }\n      }).then(res => res.json()).then(res => {\n        this.detailPlaceInfo = res.result;\n        console.log(this.detailPlaceInfo.name);\n        console.log(this.detailPlaceInfo.place_id);\n        console.log(this.detailPlaceInfo.geometry.location.lat);\n        console.log(this.detailPlaceInfo.geometry.location.lng);\n      });\n    },\n    // showPlaceInfo\n    getUserLocation: function () {\n      // User의 현재 위치 가져오기\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(position => {\n          const location = {\n            enableHighAccuracy: true,\n            // 정확도 향상\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          resolve(location);\n        }, error => {\n          reject(error);\n        });\n      });\n    } // getUserLocation\n  } // method()\n});","map":{"version":3,"names":["defineComponent","GoogleMap","Marker","MarkerCluster","InfoWindow","components","setup","mapCenter","lat","lng","locations","data","center","jsonData","detailPlaceInfo","mounted","parseJsonData","getUserLocation","error","console","log","fetch","headers","then","res","json","results","name","methods","showPlaceInfo","result","place_id","geometry","location","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","enableHighAccuracy","coords","latitude","longitude"],"sources":["C:\\Users\\seokhyeon\\Desktop\\projecttttt\\aaa\\src\\components\\Map.vue"],"sourcesContent":["<template>\r\n  <div class=\"map\">\r\n    <div class=\"container\">\r\n      <GoogleMap\r\n          api-key=\"AIzaSyB21eMRg-uMRk-i7r27DPDkntXbR5_kvnk\"\r\n          style=\"width: 100%; height: 500px\"\r\n          :center=\"center\"\r\n          :zoom=\"15\"\r\n          language=\"kor\"\r\n      >\r\n        <MarkerCluster>\r\n          <Marker v-for=\"(location, i) in locations\" :options=\"{ position: location }\" :key=\"i\"\r\n                  @click=\"showPlaceInfo()\">\r\n            <InfoWindow>  <!-- Marker 클릭하면 나오는 부분 -->\r\n              <div id=\"contet\">\r\n                <div id=\"siteNotice\"></div>\r\n                <h1 id=\"firstHeading\" class=\"firstHeading\" v-if=\"detailPlaceInfo\">{{ this.detailPlaceInfo.name }}</h1> <!-- 가게 이름 -->\r\n                <div id=\"bodyContent\">\r\n                  <p v-if=\"detailPlaceInfo\">  <!-- 도로명 주소 -->\r\n                    {{ this.detailPlaceInfo.formatted_address }}\r\n                  </p>\r\n                  <p v-if=\"detailPlaceInfo\">  <!-- 도로명 주소 -->\r\n                    {{ this.detailPlaceInfo.rating }}\r\n                  </p>\r\n                  <!--              <div>-->\r\n                  <!--                <img src=\"../../public/img/bread.jpg\" style=\"width: 100px\">-->\r\n                  <!--              </div>-->\r\n\r\n                </div>\r\n              </div>\r\n            </InfoWindow>\r\n          </Marker>\r\n        </MarkerCluster>\r\n      </GoogleMap>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {defineComponent} from 'vue'\r\nimport {GoogleMap, Marker, MarkerCluster, InfoWindow} from 'vue3-google-map'\r\n// import {error} from \"@babel/eslint-parser/lib/convert\";\r\n\r\nexport default defineComponent({\r\n  components: {GoogleMap, Marker, MarkerCluster, InfoWindow},\r\n  setup() {\r\n    const mapCenter = {lat: 37.5593773, lng: 126.832661}\r\n\r\n    const locations = [\r\n      {lat: 37.5593773, lng: 126.832661},\r\n      {lat: 37.55795, lng: 126.8397055},\r\n    ]\r\n\r\n    return {mapCenter, locations}\r\n  },  // setup()\r\n  data: function() {\r\n    return {\r\n      center : null,\r\n      jsonData : null,\r\n      detailPlaceInfo : null,\r\n    };\r\n  },  // data()\r\n  async mounted() {\r\n    let parseJsonData;\r\n\r\n    try {\r\n      this.center = await this.getUserLocation();\r\n\r\n    } catch (error) {\r\n      console.log(\"Error User Location : \" + error);\r\n    }\r\n\r\n    fetch('https://proxy.cors.sh/https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=37.561736,%20126.835419&rankby=distance&name=%EC%82%BC%EA%B2%B9%EC%82%B4&key=AIzaSyB21eMRg-uMRk-i7r27DPDkntXbR5_kvnk', {\r\n      headers: {\r\n        'x-cors-api-key': 'temp_924d232f48d59dabc25af9778ab72f25'\r\n      }\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          parseJsonData = res;\r\n          this.jsonData = parseJsonData.results;\r\n          console.log(this.jsonData);\r\n          console.log(this.jsonData[1].name);\r\n        });\r\n  },  // mounted()\r\n  methods: {\r\n    showPlaceInfo: function () {  // place_id로 googleMap JSON Data를 Parsing\r\n      fetch('https://proxy.cors.sh/https://maps.googleapis.com/maps/api/place/details/json?placeid=ChIJP1CJmGGcfDUR7ffziy-8NZA&key=AIzaSyB21eMRg-uMRk-i7r27DPDkntXbR5_kvnk', {\r\n        headers: {\r\n          'x-cors-api-key': 'temp_924d232f48d59dabc25af9778ab72f25'\r\n        }\r\n      })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            this.detailPlaceInfo = res.result;\r\n            console.log(this.detailPlaceInfo.name);\r\n            console.log(this.detailPlaceInfo.place_id);\r\n            console.log(this.detailPlaceInfo.geometry.location.lat);\r\n            console.log(this.detailPlaceInfo.geometry.location.lng);\r\n          })\r\n    },  // showPlaceInfo\r\n    getUserLocation: function () {  // User의 현재 위치 가져오기\r\n      return new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n              const location = {\r\n                enableHighAccuracy: true, // 정확도 향상\r\n                lat: position.coords.latitude,\r\n                lng: position.coords.longitude,\r\n              };\r\n              resolve(location);\r\n            },\r\n            (error) => {\r\n              reject(error);\r\n            }\r\n        )\r\n      })\r\n    } // getUserLocation\r\n  },  // method()\r\n})\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}