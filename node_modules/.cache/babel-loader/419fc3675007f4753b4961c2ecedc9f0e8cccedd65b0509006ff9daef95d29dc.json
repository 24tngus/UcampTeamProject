{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-903d02a2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, \"Review\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  id: \"reviewContainer\",\n  class: \"container\",\n  style: {\n    \"margin-left\": \"-3px\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"등록\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = {\n  class: \"review-photo\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  class: \"review-box\"\n};\nconst _hoisted_10 = {\n  class: \"review-author\"\n};\nconst _hoisted_11 = {\n  class: \"review-comment\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  type: \"button\"\n};\nconst _hoisted_13 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.addReview && $options.addReview(...args), [\"prevent\"]))\n  }, [_hoisted_3, _withDirectives(_createElementVNode(\"textarea\", {\n    name: \"content\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newReview.content = $event),\n    placeholder: \"식당을 이용하신 후 자유롭게 의견을 나눠주세요. 음식의 맛, 서비스, 분위기 등을 자세히 기술해주시면 다른 이용자들에게 큰 도움이 됩니다.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newReview.content]]), _createCommentVNode(\"<button v-on:click=\\\"addReview()\\\">Send</button>\"), _createElementVNode(\"input\", {\n    ref: \"image\",\n    onChange: _cache[1] || (_cache[1] = $event => $options.uploadImg()),\n    type: \"file\",\n    id: \"chooseFile\",\n    name: \"chooseFile\",\n    accept: \"image/*\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), _hoisted_4], 32 /* HYDRATE_EVENTS */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.reviews, review => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: review.seq,\n      class: \"review\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"hidden\",\n      \"onUpdate:modelValue\": $event => review.seq = $event\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vModelText, review.seq]]), _withDirectives(_createElementVNode(\"input\", {\n      type: \"hidden\",\n      \"onUpdate:modelValue\": $event => review.storeid = $event\n    }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, review.storeid]]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n      src: review.image\n    }, null, 8 /* PROPS */, _hoisted_8)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(review.writer), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"p\", null, _toDisplayString(review.content), 1 /* TEXT */)])]), _createCommentVNode(\"      <button v-if=\\\"review.writer === nickname\\\" type=\\\"button\\\" @click=\\\"goToReviewUpdatePage(review)\\\">수정</button>\"), _createCommentVNode(\"      <router-link to=\\\"/review_update\\\"><button v-if=\\\"review.writer === nickname\\\" type=\\\"button\\\">수정</button></router-link>\"), _createVNode(_component_router_link, {\n      to: {\n        name: 'review_update',\n        params: {\n          value: review.seq\n        }\n      }\n    }, {\n      default: _withCtx(() => [review.writer === $data.nickname ? (_openBlock(), _createElementBlock(\"button\", _hoisted_12, \"수정\")) : _createCommentVNode(\"v-if\", true)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), review.writer === $data.nickname ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      type: \"button\",\n      onClick: $event => $options.deleteReview(review)\n    }, \"삭제\", 8 /* PROPS */, _hoisted_13)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","id","class","style","type","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","addReview","_hoisted_3","name","$data","newReview","content","$event","placeholder","_createCommentVNode","ref","onChange","uploadImg","accept","_hoisted_4","_createElementBlock","_Fragment","_renderList","reviews","review","key","seq","storeid","_hoisted_7","src","image","_hoisted_9","_hoisted_10","_toDisplayString","writer","_hoisted_11","_createVNode","_component_router_link","to","params","value","nickname","_hoisted_12","onClick","deleteReview","_hoisted_13"],"sources":["C:\\TeamProject\\VeganLoadMap\\src\\components\\review\\Review.vue"],"sourcesContent":["<template>\r\n  <header>Review</header>\r\n  <div id=\"reviewContainer\" class=\"container\" style=\"margin-left: -3px\">\r\n    <form @submit.prevent=\"addReview\">\r\n      <label></label>\r\n      <textarea name=\"content\" v-model=\"newReview.content\"\r\n                placeholder=\"식당을 이용하신 후 자유롭게 의견을 나눠주세요. 음식의 맛, 서비스, 분위기 등을 자세히 기술해주시면 다른 이용자들에게 큰 도움이 됩니다.\"></textarea>\r\n\r\n      <!--<button v-on:click=\"addReview()\">Send</button>-->\r\n      <input ref=\"image\" @change=\"uploadImg()\" type=\"file\" id=\"chooseFile\" name=\"chooseFile\" accept=\"image/*\">\r\n      <button type=\"submit\">등록</button>\r\n    </form>\r\n    <div v-for=\"review in reviews\" :key=\"review.seq\" class=\"review\">\r\n      <input type=\"hidden\" v-model=\"review.seq\"/>\r\n      <input type=\"hidden\" v-model=\"review.storeid\"/>\r\n\r\n      <div class=\"review-photo\">\r\n        <img v-bind:src=\"review.image\">\r\n      </div>\r\n\r\n      <div class=\"review-box\">\r\n\r\n        <div class=\"review-author\">\r\n          <p><strong>{{ review.writer }}</strong></p>\r\n        </div>\r\n        <div class=\"review-comment\">\r\n          <p>{{ review.content }}</p>\r\n        </div>\r\n      </div>\r\n      <!--      <button v-if=\"review.writer === nickname\" type=\"button\" @click=\"goToReviewUpdatePage(review)\">수정</button>-->\r\n      <!--      <router-link to=\"/review_update\"><button v-if=\"review.writer === nickname\" type=\"button\">수정</button></router-link>-->\r\n      <router-link :to=\"{ name: 'review_update', params: { value: review.seq } }\"><button v-if=\"review.writer === nickname\" type=\"button\">수정</button></router-link>\r\n\r\n      <button v-if=\"review.writer === nickname\" type=\"button\" @click=\"deleteReview(review)\">삭제</button>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      reviews: [],\r\n      nickname: '',\r\n      newReview: {\r\n        seq: '',\r\n        storeid: '',\r\n        content: '',\r\n        image: '',\r\n      },\r\n\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchReview();\r\n  },\r\n  methods: {\r\n    fetchReview() {\r\n      axios\r\n          .get(\"/api/review/list\")\r\n          .then((response) => {\r\n            this.reviews = response.data.reviewList;\r\n            this.nickname = response.data.nickname;\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching reviews\", error);\r\n          });\r\n    },uploadImg() {\r\n      var image = this.$refs['image'].files[0]\r\n      const url = URL.createObjectURL(image)\r\n      this.image = url\r\n      this.newReview.image = this.image;\r\n      console.log(url)\r\n      console.log(this.image)\r\n    },\r\n    addReview() {\r\n      axios\r\n          .post(\"/api/review/insert\", this.newReview)\r\n          .then((response) => {\r\n            console.log(\"Review added successfully\", response);\r\n            this.fetchReview(); // Fetch reviews again to get the updated list\r\n            this.newReview = {\r\n              storeid: '',\r\n              content: '',\r\n              image: '',\r\n            };\r\n            alert(\"리뷰가 등록되었습니다.\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error adding review\", error);\r\n          });\r\n    },\r\n    deleteReview(review) {\r\n      axios\r\n          .delete(`/api/review/delete/${review.seq}`) // Assuming seq is the identifier for the review\r\n          .then(() => {\r\n            this.fetchReview();\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error delete review\", error);\r\n          });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nheader {\r\n  width: 80%;\r\n  font-size: 2em;\r\n  text-align: center;\r\n  background: #2ecc71;\r\n  color: #fff;\r\n  margin: 0 auto;\r\n  padding: 0.5em;\r\n}\r\n\r\nbody {\r\n  max-width: 1024px;\r\n  margin: 20px auto;\r\n  font-size: 16px;\r\n  font-family: 'Poppins', sans-serif;\r\n}\r\n\r\nimg {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\n\r\np {\r\n  margin: 0;\r\n}\r\n\r\nlabel {\r\n  width: 15%;\r\n  margin: 10px 1% 0 0;\r\n  display: inline-block;\r\n  float: left;\r\n}\r\n\r\ninput[type=\"text\"] {\r\n  width: 84%;\r\n  margin: 10px 0;\r\n  height: 40px;\r\n  border: none;\r\n  background: #F6F6F6;\r\n  padding: 1em;\r\n}\r\n\r\ntextarea {\r\n  width: 84%;\r\n  border: none;\r\n  background: #F6F6F6;\r\n  margin: 10px auto;\r\n  height: 100px;\r\n  padding: 1em;\r\n  border-radius: 20px;\r\n  text-align: center;\r\n\r\n}\r\n\r\nbutton {\r\n  float: right;\r\n  width: 20%;\r\n  height: 40px;\r\n  border: none;\r\n  background: #2ecc71;\r\n  font-size: 16px;\r\n  color: white;\r\n}\r\n\r\n.review {\r\n  width: 100%;\r\n  display: inline-block;\r\n  margin: 10px 0;\r\n}\r\n\r\n.review-photo {\r\n  height: 80px;\r\n  width: 80px;\r\n  display: inline-block;\r\n  float: left;\r\n  margin-right: 3em;\r\n}\r\n\r\n.review-box {\r\n  float: left;\r\n  display: inline-block;\r\n  width: 87.5%;\r\n  background: #F6F6F6;\r\n  padding: 1.5em;\r\n  position: relative;\r\n}\r\n\r\n.review-box:after, .review-box:before {\r\n  right: 100%;\r\n  top: 10%;\r\n  border: solid transparent;\r\n  content: \" \";\r\n  height: 0;\r\n  width: 0;\r\n  position: absolute;\r\n  pointer-events: none;\r\n}\r\n\r\n.review-box:after {\r\n  border-right-color: #F6F6F6;\r\n  border-width: 25px;\r\n}\r\n\r\n.review-comment {\r\n  color: #9A9999;\r\n}\r\n\r\n.review-date {\r\n  color: #C7C7C7;\r\n}\r\n\r\n.review-author {\r\n  color: #C7C7C7;\r\n}\r\n\r\n.review-author strong {\r\n  color: black;\r\n}\r\n</style>"],"mappings":";;gEACEA,mBAAA,CAAuB,gBAAf,QAAM;;EACTC,EAAE,EAAC,iBAAiB;EAACC,KAAK,EAAC,WAAW;EAACC,KAAyB,EAAzB;IAAA;EAAA;;gEAExCH,mBAAA,CAAe;gEAMfA,mBAAA,CAAiC;EAAzBI,IAAI,EAAC;AAAQ,GAAC,IAAE;;;;EAMnBF,KAAK,EAAC;AAAc;;;EAIpBA,KAAK,EAAC;AAAY;;EAEhBA,KAAK,EAAC;AAAe;;EAGrBA,KAAK,EAAC;AAAgB;;;EAMyFE,IAAI,EAAC;;;;;6DA9B/HC,UAAuB,EACvBL,mBAAA,CAkCM,OAlCNM,UAkCM,GAjCJN,mBAAA,CAQO;IARAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;MAC9BG,UAAe,E,gBACfb,mBAAA,CACiH;IADvGc,IAAI,EAAC,SAAS;+DAAUC,KAAA,CAAAC,SAAS,CAACC,OAAO,GAAAC,MAAA;IACzCC,WAAW,EAAC;iDADYJ,KAAA,CAAAC,SAAS,CAACC,OAAO,E,GAGnDG,mBAAA,oDAAqD,EACrDpB,mBAAA,CAAwG;IAAjGqB,GAAG,EAAC,OAAO;IAAEC,QAAM,EAAAd,MAAA,QAAAA,MAAA,MAAAU,MAAA,IAAEP,QAAA,CAAAY,SAAS;IAAInB,IAAI,EAAC,MAAM;IAACH,EAAE,EAAC,YAAY;IAACa,IAAI,EAAC,YAAY;IAACU,MAAM,EAAC;kDAC9FC,UAAiC,C,+CAEnCC,mBAAA,CAsBMC,SAAA,QAAAC,WAAA,CAtBgBb,KAAA,CAAAc,OAAO,EAAjBC,MAAM;yBAAlBJ,mBAAA,CAsBM;MAtB0BK,GAAG,EAAED,MAAM,CAACE,GAAG;MAAE9B,KAAK,EAAC;wBACrDF,mBAAA,CAA2C;MAApCI,IAAI,EAAC,QAAQ;uCAAU0B,MAAM,CAACE,GAAG,GAAAd;wDAAVY,MAAM,CAACE,GAAG,E,mBACxChC,mBAAA,CAA+C;MAAxCI,IAAI,EAAC,QAAQ;uCAAU0B,MAAM,CAACG,OAAO,GAAAf;wDAAdY,MAAM,CAACG,OAAO,E,GAE5CjC,mBAAA,CAEM,OAFNkC,UAEM,GADJlC,mBAAA,CAA+B;MAAnBmC,GAAG,EAAEL,MAAM,CAACM;2CAG1BpC,mBAAA,CAQM,OARNqC,UAQM,GANJrC,mBAAA,CAEM,OAFNsC,WAEM,GADJtC,mBAAA,CAA2C,YAAxCA,mBAAA,CAAoC,gBAAAuC,gBAAA,CAAzBT,MAAM,CAACU,MAAM,iB,KAE7BxC,mBAAA,CAEM,OAFNyC,WAEM,GADJzC,mBAAA,CAA2B,WAAAuC,gBAAA,CAArBT,MAAM,CAACb,OAAO,iB,KAGxBG,mBAAA,yHAAsH,EACtHA,mBAAA,kIAA+H,EAC/HsB,YAAA,CAA6JC,sBAAA;MAA/IC,EAAE;QAAA9B,IAAA;QAAA+B,MAAA;UAAAC,KAAA,EAA4ChB,MAAM,CAACE;QAAG;MAAA;;wBAAM,MAAmE,CAArDF,MAAM,CAACU,MAAM,KAAKzB,KAAA,CAAAgC,QAAQ,I,cAAxCrB,mBAAA,CAAmE,UAAnEsB,WAAmE,EAAX,IAAE,K;;iDAExHlB,MAAM,CAACU,MAAM,KAAKzB,KAAA,CAAAgC,QAAQ,I,cAAxCrB,mBAAA,CAAiG;;MAAvDtB,IAAI,EAAC,QAAQ;MAAE6C,OAAK,EAAA/B,MAAA,IAAEP,QAAA,CAAAuC,YAAY,CAACpB,MAAM;OAAG,IAAE,iBAAAqB,WAAA,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}