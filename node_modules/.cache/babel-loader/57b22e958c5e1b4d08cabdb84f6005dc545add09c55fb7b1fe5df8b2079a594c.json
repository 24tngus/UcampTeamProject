{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" data 객체 내용을 출력 \"), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createElementVNode(\"p\", null, \"Payment ID : \" + _toDisplayString($data.paymentData.paymentid), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_createElementVNode(\"p\", null, \"StoreName : \" + _toDisplayString($data.paymentData.storename), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_createElementVNode(\"p\", null, \"User ID : \" + _toDisplayString($data.paymentData.userid), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_createElementVNode(\"p\", null, \"Price : \" + _toDisplayString($data.paymentData.price), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_createElementVNode(\"p\", null, \"Status : \" + _toDisplayString($data.paymentData.status), 1 /* TEXT */)]), _createElementVNode(\"li\", null, [_createElementVNode(\"p\", null, \"formatTime : \" + _toDisplayString($options.formattedDate), 1 /* TEXT */)])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createElementVNode","_toDisplayString","$data","paymentData","paymentid","storename","userid","price","status","$options","formattedDate"],"sources":["/Users/soohykim/Desktop/front/src/components/payment/PaymentSuccess.vue"],"sourcesContent":["<template>\n  <!-- data 객체 내용을 출력 -->\n  <ul>\n    <li><p>Payment ID : {{ paymentData.paymentid }}</p></li>\n    <li><p>StoreName : {{ paymentData.storename }}</p></li>\n    <li><p>User ID : {{ paymentData.userid }}</p></li>\n    <li><p>Price : {{ paymentData.price }}</p></li>\n    <li><p>Status : {{ paymentData.status }}</p></li>\n    <li><p>formatTime : {{ formattedDate }}</p></li>\n  </ul>\n</template>\n\n<script>\nimport router from \"@/scripts/router\";\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      currentTime: new Date(),\n      paymentid : null,\n      paymentData : {},\n      timeArr : [],\n      createdAt : '',\n\n    };\n  },\n  async mounted() {\n    this.paymentid = router.currentRoute.value.params.value;\n\n    try {\n      const response = await axios.get(`/api/paymentSuccess/${this.paymentid}`, this.paymentid);\n\n\n      this.paymentData = response.data;\n\n      let combined_date = '';\n\n      for(let i=0; i<this.paymentData.created_at.length; i++) {\n        combined_date += this.paymentData.created_at[i];\n      }\n      console.log(\"combined => \" + combined_date);\n      this.createdAt = combined_date;\n      this.timeArr = this.paymentData.created_at;\n\n    } catch (error) {\n      console.error('Error while fetching data:', error);\n    }\n  },\n  computed: {\n    formattedDate() {\n      const [year, month, day, hour, minute, second] = this.timeArr;\n      const date = new Date(year, month - 1, day, hour, minute, second);\n      return this.formatDate(date);\n    }\n  },\n  methods: {\n    formatDate(date) {\n      const year = date.getFullYear();\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const day = date.getDate().toString().padStart(2, '0');\n      const hours = date.getHours().toString().padStart(2, '0');\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      const seconds = date.getSeconds().toString().padStart(2, '0');\n\n      return `${year}년 ${month}월 ${day}일 ${hours}:${minutes}:${seconds}`;\n    }\n  },\n};\n</script>"],"mappings":";;6DACEA,mBAAA,oBAAuB,EACvBC,mBAAA,CAOK,aANHA,mBAAA,CAAwD,aAApDA,mBAAA,CAA+C,WAA5C,eAAa,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,WAAW,CAACC,SAAS,iB,GAC5CJ,mBAAA,CAAuD,aAAnDA,mBAAA,CAA8C,WAA3C,cAAY,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,WAAW,CAACE,SAAS,iB,GAC3CL,mBAAA,CAAkD,aAA9CA,mBAAA,CAAyC,WAAtC,YAAU,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,WAAW,CAACG,MAAM,iB,GACtCN,mBAAA,CAA+C,aAA3CA,mBAAA,CAAsC,WAAnC,UAAQ,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,WAAW,CAACI,KAAK,iB,GACnCP,mBAAA,CAAiD,aAA7CA,mBAAA,CAAwC,WAArC,WAAS,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,WAAW,CAACK,MAAM,iB,GACrCR,mBAAA,CAAgD,aAA5CA,mBAAA,CAAuC,WAApC,eAAa,GAAAC,gBAAA,CAAGQ,QAAA,CAAAC,aAAa,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}