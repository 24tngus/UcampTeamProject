{"ast":null,"code":"import Header from \"@/components/header/Header.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"ReserveTest\",\n  components: {\n    Header\n  },\n  data() {\n    return {\n      item: Object,\n      newdate: null,\n      reserves: []\n    };\n  },\n  created() {\n    this.load();\n    this.fetchReserve();\n  },\n  methods: {\n    load() {\n      axios.get(\"/api/user/mypage\").then(({\n        data\n      }) => {\n        this.item = data;\n      });\n    },\n    isFutureDate(date) {\n      const today = new Date();\n      const newDate = new Date(date);\n      return newDate < today;\n    },\n    fetchReserve() {\n      axios.get(\"/api/myreserve\").then(response => {\n        this.reserves = response.data.map(reserve => {\n          const timestamp = reserve.date;\n          const formattedDate = new Date(timestamp).toISOString().split('T')[0];\n          return {\n            ...reserve,\n            newdate: formattedDate\n          };\n        });\n      }).catch(error => {\n        console.error(\"리뷰 업데이트 중 오류 발생\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Header","axios","name","components","data","item","Object","newdate","reserves","created","load","fetchReserve","methods","get","then","isFutureDate","date","today","Date","newDate","response","map","reserve","timestamp","formattedDate","toISOString","split","catch","error","console"],"sources":["/Users/soohykim/Desktop/front/src/pages/test.vue"],"sourcesContent":["<template>\n  <div id=\"form-div\">\n    <div v-for=\"reserve in reserves\" :key=\"reserve.seq\">\n      <form class=\"form\" id=\"form1\">\n        식당 이름 : {{ reserve.storename }}\n        <p class=\"text\">\n          예약자 : <input name=\"name\" type=\"text\" v-model=\"reserve.reserver\" class=\"validate[required,custom[onlyLetter],length[0,100]] feedback-input\" id=\"name\" readonly/>\n        </p>\n        <p class=\"text\">\n          예약 인원 : <input name=\"name\" type=\"text\" v-model=\"reserve.people\" class=\"validate[required,custom[onlyLetter],length[0,100]] feedback-input\" id=\"name\" readonly/>\n        </p>\n        <p class=\"text\">\n          예약 날짜 : <input name=\"name\" type=\"text\" :value=\"reserve.newdate\" class=\"validate[required,custom[onlyLetter],length[0,100]] feedback-input\" id=\"name\" readonly/>\n        </p>\n        <p v-if=\"reserve.time0810 === 1\" class=\"text\">\n          예약 시간 : <input name=\"name\" type=\"text\" value=\"08:00 - 10:00\" class=\"validate[required,custom[onlyLetter],length[0,100]] feedback-input\" id=\"name\" readonly/>\n        </p>\n        <p v-else-if=\"reserve.time1012 === 1\" class=\"text\">\n          예약 시간 : <input name=\"name\" type=\"text\" value=\"10:00 - 12:00\" class=\"validate[required,custom[onlyLetter],length[0,100]] feedback-input\" id=\"name\" readonly/>\n        </p>\n        <p v-else-if=\"reserve.time1214 === 1\" class=\"text\">\n          예약 시간 : <input name=\"name\" type=\"text\" value=\"12:00 - 14:00\" class=\"validate[required,custom[onlyLetter],length[0,100]] feedback-input\" id=\"name\" readonly/>\n        </p>\n        <p v-else-if=\"reserve.time1416 === 1\" class=\"text\">\n          예약 시간 : <input name=\"name\" type=\"text\" value=\"14:00 - 16:00\" class=\"validate[required,custom[onlyLetter],length[0,100]] feedback-input\" id=\"name\" readonly/>\n        </p>\n        <p v-else-if=\"reserve.time1618 === 1\" class=\"text\">\n          예약 시간 : <input name=\"name\" type=\"text\" value=\"16:00 - 18:00\" class=\"validate[required,custom[onlyLetter],length[0,100]] feedback-input\" id=\"name\" readonly/>\n        </p>\n        <p v-else-if=\"reserve.time1820 === 1\" class=\"text\">\n          예약 시간 : <input name=\"name\" type=\"text\" value=\"18:00 - 20:00\" class=\"validate[required,custom[onlyLetter],length[0,100]] feedback-input\" id=\"name\" readonly/>\n        </p>\n        <p v-else-if=\"reserve.time2022 === 1\" class=\"text\">\n          예약 시간 : <input name=\"name\" type=\"text\" value=\"20:00 - 22:00\" class=\"validate[required,custom[onlyLetter],length[0,100]] feedback-input\" id=\"name\" readonly/>\n        </p>\n        <p class=\"text\">\n          추가 내용 : <input name=\"name\" type=\"text\" v-model=\"reserve.comment\" class=\"validate[required,custom[onlyLetter],length[0,100]] feedback-input\" id=\"name\" readonly/>\n        </p>\n\n\n        <div v-if=\"isFutureDate(reserve.newdate)\" class=\"submit\">\n          <!--           <button type=\"submit\">리뷰 쓰기</button>-->\n          <router-link :to=\"{ name: 'review_insert', params: { value: reserve.storename} }\">\n            <button type=\"submit\">리뷰 쓰기</button>\n          </router-link>\n\n          <div class=\"ease\"></div>\n        </div>\n      </form>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport Header from \"@/components/header/Header.vue\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"ReserveTest\",\n  components: {Header},\n  data(){\n    return {\n      item: Object,\n      newdate: null,\n      reserves: [],\n    };\n  },\n  created(){\n    this.load();\n    this.fetchReserve();\n  },\n  methods:{\n    load() {\n      axios.get(\"/api/user/mypage\").then(({ data }) => {\n        this.item = data;\n      });\n    },\n    isFutureDate(date) {\n      const today = new Date();\n      const newDate = new Date(date);\n      return newDate < today;\n    },\n    fetchReserve() {\n      axios\n          .get(\"/api/myreserve\")\n          .then((response) => {\n            this.reserves = response.data.map((reserve) => {\n              const timestamp = reserve.date;\n              const formattedDate = new Date(timestamp).toISOString().split('T')[0];\n              return {\n                ...reserve,\n                newdate: formattedDate,\n              };\n            });\n          })\n          .catch((error) => {\n            console.error(\"리뷰 업데이트 중 오류 발생\", error);\n          });\n    }\n\n\n  }\n}\n</script>"],"mappings":"AAuDA,OAAOA,MAAK,MAAO,gCAAgC;AACnD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IAACH;EAAM,CAAC;EACpBI,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAE;IACP,IAAI,CAACC,IAAI,CAAC,CAAC;IACX,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAC;IACNF,IAAIA,CAAA,EAAG;MACLT,KAAK,CAACY,GAAG,CAAC,kBAAkB,CAAC,CAACC,IAAI,CAAC,CAAC;QAAEV;MAAK,CAAC,KAAK;QAC/C,IAAI,CAACC,IAAG,GAAID,IAAI;MAClB,CAAC,CAAC;IACJ,CAAC;IACDW,YAAYA,CAACC,IAAI,EAAE;MACjB,MAAMC,KAAI,GAAI,IAAIC,IAAI,CAAC,CAAC;MACxB,MAAMC,OAAM,GAAI,IAAID,IAAI,CAACF,IAAI,CAAC;MAC9B,OAAOG,OAAM,GAAIF,KAAK;IACxB,CAAC;IACDN,YAAYA,CAAA,EAAG;MACbV,KAAI,CACCY,GAAG,CAAC,gBAAgB,EACpBC,IAAI,CAAEM,QAAQ,IAAK;QAClB,IAAI,CAACZ,QAAO,GAAIY,QAAQ,CAAChB,IAAI,CAACiB,GAAG,CAAEC,OAAO,IAAK;UAC7C,MAAMC,SAAQ,GAAID,OAAO,CAACN,IAAI;UAC9B,MAAMQ,aAAY,GAAI,IAAIN,IAAI,CAACK,SAAS,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACrE,OAAO;YACL,GAAGJ,OAAO;YACVf,OAAO,EAAEiB;UACX,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,EACAG,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACzC,CAAC,CAAC;IACR;EAGF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}