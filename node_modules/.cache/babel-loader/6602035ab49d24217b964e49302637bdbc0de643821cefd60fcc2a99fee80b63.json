{"ast":null,"code":"import Header from \"@/components/header/Header.vue\";\nexport default {\n  components: {\n    Header\n  },\n  data() {\n    return {\n      googleAuth: null\n    };\n  },\n  methods: {\n    GoogleLoginBtn() {\n      const self = this;\n      this.googleAuth = gapi.auth2.getAuthInstance();\n      if (!this.googleAuth) {\n        gapi.load('auth2', function () {\n          gapi.auth2.init({\n            client_id: 'YOUR_CLIENT_ID' // 여기에 클라이언트 ID를 설정\n          }).then(() => {\n            self.googleAuth = gapi.auth2.getAuthInstance();\n            self.googleAuth.signIn().then(self.onGoogleLoginSuccess, self.onGoogleLoginFailure);\n          });\n        });\n      } else {\n        this.googleAuth.signIn().then(this.onGoogleLoginSuccess, this.onGoogleLoginFailure);\n      }\n    },\n    GoogleLogoutBtn() {\n      if (this.googleAuth) {\n        this.googleAuth.signOut();\n      }\n    },\n    onGoogleLoginSuccess(googleUser) {\n      const googleEmail = googleUser.getBasicProfile().getEmail();\n      console.log('Google 로그인 성공:', googleEmail);\n    },\n    onGoogleLoginFailure(error) {\n      console.error('Google 로그인 실패:', error);\n    }\n  },\n  mounted() {\n    gapi.load('auth2', () => {\n      gapi.auth2.init({\n        client_id: 'YOUR_CLIENT_ID' // 여기에 클라이언트 ID를 설정\n      }).then(() => {\n        this.googleAuth = gapi.auth2.getAuthInstance();\n      });\n    });\n  }\n};","map":{"version":3,"names":["Header","components","data","googleAuth","methods","GoogleLoginBtn","self","gapi","auth2","getAuthInstance","load","init","client_id","then","signIn","onGoogleLoginSuccess","onGoogleLoginFailure","GoogleLogoutBtn","signOut","googleUser","googleEmail","getBasicProfile","getEmail","console","log","error","mounted"],"sources":["C:\\VeganLoadMap\\src\\pages\\User.vue"],"sourcesContent":["<template>\r\n  <Header/>\r\n  <div class=\"form-signin w-100 m-auto\">\r\n    <button class=\"btn\" @click=\"$router.push('/login')\">사용자 로그인</button> &nbsp;\r\n    <button class=\"btn\" @click=\"$router.push('/login2')\">판매자 로그인</button>\r\n    <!-- 구글 로그인 -->\r\n    <div>\r\n      <button @click=\"GoogleLoginBtn\">Google 로그인</button>\r\n      <button @click=\"GoogleLogoutBtn\">Google 로그아웃</button>\r\n      <div id=\"my-signin2\" style=\"display: none;\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"@/components/header/Header.vue\";\r\nexport default {\r\n  components: {Header},\r\n\r\n  data() {\r\n    return {\r\n      googleAuth: null,\r\n    };\r\n  },\r\n  methods: {\r\n    GoogleLoginBtn() {\r\n      const self = this;\r\n      this.googleAuth = gapi.auth2.getAuthInstance();\r\n\r\n      if (!this.googleAuth) {\r\n        gapi.load('auth2', function () {\r\n          gapi.auth2.init({\r\n            client_id: 'YOUR_CLIENT_ID', // 여기에 클라이언트 ID를 설정\r\n          }).then(() => {\r\n            self.googleAuth = gapi.auth2.getAuthInstance();\r\n            self.googleAuth.signIn().then(self.onGoogleLoginSuccess, self.onGoogleLoginFailure);\r\n          });\r\n        });\r\n      } else {\r\n        this.googleAuth.signIn().then(this.onGoogleLoginSuccess, this.onGoogleLoginFailure);\r\n      }\r\n    },\r\n    GoogleLogoutBtn() {\r\n      if (this.googleAuth) {\r\n        this.googleAuth.signOut();\r\n      }\r\n    },\r\n    onGoogleLoginSuccess(googleUser) {\r\n      const googleEmail = googleUser.getBasicProfile().getEmail();\r\n      console.log('Google 로그인 성공:', googleEmail);\r\n    },\r\n    onGoogleLoginFailure(error) {\r\n      console.error('Google 로그인 실패:', error);\r\n    },\r\n  },\r\n  mounted() {\r\n    gapi.load('auth2', () => {\r\n      gapi.auth2.init({\r\n        client_id: 'YOUR_CLIENT_ID', // 여기에 클라이언트 ID를 설정\r\n      }).then(() => {\r\n        this.googleAuth = gapi.auth2.getAuthInstance();\r\n      });\r\n    });\r\n  },\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form-signin {\r\n  max-width: 330px;\r\n  padding: 1rem;\r\n}\r\n\r\n.btn {\r\n  background-color: #24855b;\r\n  color: #ffffff;\r\n}\r\n\r\n.form-signin .form-floating:focus-within {\r\n  z-index: 2;\r\n}\r\n\r\n</style>"],"mappings":"AAeA,OAAOA,MAAK,MAAO,gCAAgC;AACnD,eAAe;EACbC,UAAU,EAAE;IAACD;EAAM,CAAC;EAEpBE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,MAAMC,IAAG,GAAI,IAAI;MACjB,IAAI,CAACH,UAAS,GAAII,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,CAAC;MAE9C,IAAI,CAAC,IAAI,CAACN,UAAU,EAAE;QACpBI,IAAI,CAACG,IAAI,CAAC,OAAO,EAAE,YAAY;UAC7BH,IAAI,CAACC,KAAK,CAACG,IAAI,CAAC;YACdC,SAAS,EAAE,gBAAgB,CAAE;UAC/B,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;YACZP,IAAI,CAACH,UAAS,GAAII,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,CAAC;YAC9CH,IAAI,CAACH,UAAU,CAACW,MAAM,CAAC,CAAC,CAACD,IAAI,CAACP,IAAI,CAACS,oBAAoB,EAAET,IAAI,CAACU,oBAAoB,CAAC;UACrF,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,OAAO;QACL,IAAI,CAACb,UAAU,CAACW,MAAM,CAAC,CAAC,CAACD,IAAI,CAAC,IAAI,CAACE,oBAAoB,EAAE,IAAI,CAACC,oBAAoB,CAAC;MACrF;IACF,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACd,UAAU,EAAE;QACnB,IAAI,CAACA,UAAU,CAACe,OAAO,CAAC,CAAC;MAC3B;IACF,CAAC;IACDH,oBAAoBA,CAACI,UAAU,EAAE;MAC/B,MAAMC,WAAU,GAAID,UAAU,CAACE,eAAe,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAC3DC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,WAAW,CAAC;IAC5C,CAAC;IACDJ,oBAAoBA,CAACS,KAAK,EAAE;MAC1BF,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRnB,IAAI,CAACG,IAAI,CAAC,OAAO,EAAE,MAAM;MACvBH,IAAI,CAACC,KAAK,CAACG,IAAI,CAAC;QACdC,SAAS,EAAE,gBAAgB,CAAE;MAC/B,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QACZ,IAAI,CAACV,UAAS,GAAII,IAAI,CAACC,KAAK,CAACC,eAAe,CAAC,CAAC;MAChD,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AAGF"},"metadata":{},"sourceType":"module","externalDependencies":[]}