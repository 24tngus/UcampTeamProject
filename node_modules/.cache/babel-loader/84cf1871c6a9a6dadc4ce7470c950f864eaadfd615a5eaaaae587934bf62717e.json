{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, onMounted } from 'vue';\nimport axios from 'axios';\nimport store from \"@/scripts/store\";\nimport router from \"@/scripts/router\";\nimport Header from \"@/components/header/Header.vue\";\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nexport default {\n  components: {\n    Header\n  },\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const store = useStore();\n    const state = reactive({\n      naverClientId: 'a4TEdRYQwTEos4Ljj4RU',\n      clientSecret: 'kXL5Qazlnp',\n      callbackUrl: 'http://localhost:9090/naver_callback',\n      code: route.query.code,\n      states: route.query.state,\n      access_token: \"\",\n      refresh_token: \"\",\n      userid: '',\n      userpw: '',\n      role: 'CUSTOMER',\n      birth: '',\n      birthday: '',\n      birthyear: '',\n      nickname: '',\n      phone: '',\n      apiimageurl: ''\n    });\n    const naverCallback = async () => {\n      console.log('route.query.code => ', route.query.code);\n      console.log('route.query.states => ', route.query.state);\n      const url = `/oauth2.0/token?grant_type=authorization_code&client_id=${state.naverClientId}&client_secret=${state.clientSecret}&code=${state.code}&state=${state.states}`;\n      const headers = {\n        \"X-Naver-Client-Id\": state.naverClientId,\n        \"X-Naver-Client-Secret\": state.clientSecret\n      };\n      const {\n        data\n      } = await axios.get(url, {\n        headers\n      });\n      console.log(\"data => \", data);\n      state.access_token = data.access_token;\n      state.refresh_token = data.refresh_token;\n      naverUserInfo();\n    };\n    const naverUserInfo = async () => {\n      const url = `/v1/nid/me`;\n      let header = \"Bearer \" + state.access_token;\n      const headers = {\n        \"Authorization\": header\n      };\n      console.log(\"headers => \", headers);\n      const {\n        data\n      } = await axios.get(url, {\n        headers\n      });\n      console.log(\"*****naverUserInfo data***** => \", data);\n      state.userid = data.response.email;\n      state.nickname = data.response.nickname;\n      state.apiimageurl = data.response.profile_image;\n      let birtharr = data.response.birthday.split('-');\n      state.birthday = birtharr.join('');\n      state.birthyear = data.response.birthyear.substring(2);\n      state.birth = state.birthyear + state.birthday;\n      let phonearr = data.response.mobile.split('-');\n      state.phone = phonearr.join('');\n      naverUseridCheck(data);\n    };\n    const naverUseridCheck = async () => {\n      const url = `/ROOT/api/member/idcheck.json?userid=${state.userid}`;\n      const headers = {\n        \"Content-Type\": \"application/json\"\n      };\n      const {\n        data\n      } = await axios.get(url, {\n        headers\n      });\n      console.log('이메일중복확인 data=>', data);\n      if (data.result === true) {\n        naverUserLogin();\n      } else {\n        naverUserJoin();\n      }\n    };\n    const naverUserJoin = async () => {\n      const url = `/ROOT/api/member/join.json`;\n      const headers = {\n        \"Content-Type\": \"application/json\"\n      };\n      const body = {\n        userid: state.userid,\n        userpw: state.userpw,\n        role: state.role,\n        birth: state.birth,\n        nickname: state.nickname,\n        phone: state.phone\n      };\n      const {\n        data\n      } = await axios.post(url, body, {\n        headers\n      });\n      console.log(data);\n      if (data.status === 200) {\n        alert('회원가입완료');\n      }\n      naverUserJoinImg();\n    };\n    const naverUserJoinImg = async () => {\n      const url = `/ROOT/api/memberimage/apiinsert.json`;\n      const headers = {\n        \"Content-Type\": \"application/json\"\n      };\n      const member1 = {\n        userid: state.userid\n      };\n      const body = {\n        member: member1,\n        apiimageurl: state.apiimageurl\n      };\n      const response = await axios.post(url, body, {\n        headers\n      });\n      console.log(response);\n      naverUserLogin();\n    };\n    const naverUserLogin = async () => {\n      const url = `/ROOT/api/member/login.json`;\n      const headers = {\n        \"Content-Type\": \"application/json\"\n      };\n      const body = {\n        userid: state.userid,\n        userpw: state.userpw,\n        role: 'CUSTOMER'\n      };\n      const {\n        data\n      } = await axios.post(url, body, {\n        headers\n      });\n      console.log(data);\n      if (data.status === 200) {\n        sessionStorage.setItem(\"token\", data.result);\n        store.commit('setLogged', true);\n        store.commit('setCounter');\n        router.push({\n          path: '/'\n        });\n      }\n    };\n    onMounted(() => {\n      naverCallback();\n    });\n    return {\n      state,\n      naverCallback\n    };\n  }\n};","map":{"version":3,"names":["reactive","onMounted","axios","store","router","Header","useRoute","useRouter","useStore","components","setup","route","state","naverClientId","clientSecret","callbackUrl","code","query","states","access_token","refresh_token","userid","userpw","role","birth","birthday","birthyear","nickname","phone","apiimageurl","naverCallback","console","log","url","headers","data","get","naverUserInfo","header","response","email","profile_image","birtharr","split","join","substring","phonearr","mobile","naverUseridCheck","result","naverUserLogin","naverUserJoin","body","post","status","alert","naverUserJoinImg","member1","member","sessionStorage","setItem","commit","push","path"],"sources":["C:\\TeamProject\\VeganLoadMap\\src\\components\\user\\Login.vue"],"sourcesContent":["<template>\r\n  <Header/>\r\n  <br><br>\r\n  <div className=\"container\" id=\"container\">\r\n    <div className=\"form-container sign-in-container\">\r\n      <form action=\"#\">\r\n        <h1>Sign In</h1>\r\n        <div className=\"social-container\">\r\n          <a href=\"#\" className=\"social\">\r\n            <img src=\"../../assets/images/naver_login.png\" @click=\"naverLogin\" />\r\n          </a>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <a href=\"#\" className=\"social\"><i className=\"fa fa-google-plus\" aria-hidden=\"true\"\r\n                                            @click=\"googleLoginBtn\"></i></a>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <a href=\"#\" className=\"social\"><i className=\"fa fa-comments\" aria-hidden=\"true\"\r\n                                            id=\"custom-login-btn\" @click=\"kakaoLogin()\"></i></a>\r\n\r\n        </div>\r\n        <span>or use your account</span>\r\n        <input type=\"email\" placeholder=\"Email\" v-model=\"state.form.email\">\r\n        <input type=\"password\" placeholder=\"Password\" v-model=\"state.form.password\"/><br>\r\n        <button @click=\"submit()\">로그인</button>\r\n      </form>\r\n    </div>\r\n    <div className=\"overlay-container\">\r\n      <div className=\"overlay\">\r\n        <div className=\"overlay-panel overlay-right\">\r\n          <h1>Welcome to VeganRoadMap!</h1>\r\n          <p>로그인 및 회원가입 후에 비건로드맵을 즐겨보세요!</p>\r\n          <button className=\"ghost\" id=\"signUp\" @click=\"$router.push('/join')\">회원가입</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport store from \"@/scripts/store\";\r\nimport router from \"@/scripts/router\";\r\nimport Header from \"@/components/header/Header.vue\";\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { useStore } from 'vuex';\r\n\r\nexport default {\r\n  components: { Header },\r\n  setup() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    const store = useStore();\r\n\r\n    const state = reactive({\r\n      naverClientId: 'a4TEdRYQwTEos4Ljj4RU',\r\n      clientSecret: 'kXL5Qazlnp',\r\n      callbackUrl: 'http://localhost:9090/naver_callback',\r\n      code: route.query.code,\r\n      states: route.query.state,\r\n      access_token: \"\",\r\n      refresh_token: \"\",\r\n      userid: '',\r\n      userpw: '',\r\n      role: 'CUSTOMER',\r\n      birth: '',\r\n      birthday: '',\r\n      birthyear: '',\r\n      nickname: '',\r\n      phone: '',\r\n      apiimageurl: ''\r\n    })\r\n\r\n    const naverCallback = async () => {\r\n      console.log('route.query.code => ', route.query.code);\r\n      console.log('route.query.states => ', route.query.state);\r\n\r\n      const url = `/oauth2.0/token?grant_type=authorization_code&client_id=${state.naverClientId}&client_secret=${state.clientSecret}&code=${state.code}&state=${state.states}`;\r\n      const headers = { \"X-Naver-Client-Id\": state.naverClientId, \"X-Naver-Client-Secret\": state.clientSecret };\r\n      const { data } = await axios.get(url, { headers });\r\n\r\n      console.log(\"data => \", data);\r\n\r\n      state.access_token = data.access_token\r\n\r\n      state.refresh_token = data.refresh_token\r\n\r\n      naverUserInfo();\r\n    }\r\n\r\n    const naverUserInfo = async () => {\r\n      const url = `/v1/nid/me`;\r\n      let header = \"Bearer \" + state.access_token;\r\n      const headers = { \"Authorization\": header };\r\n      console.log(\"headers => \", headers);\r\n      const { data } = await axios.get(url, { headers });\r\n      console.log(\"*****naverUserInfo data***** => \", data);\r\n\r\n      state.userid = data.response.email;\r\n      state.nickname = data.response.nickname;\r\n      state.apiimageurl = data.response.profile_image;\r\n\r\n      let birtharr = data.response.birthday.split('-');\r\n      state.birthday = birtharr.join('');\r\n      state.birthyear = data.response.birthyear.substring(2);\r\n      state.birth = state.birthyear + state.birthday;\r\n\r\n      let phonearr = data.response.mobile.split('-');\r\n      state.phone = phonearr.join('');\r\n\r\n      naverUseridCheck(data);\r\n    }\r\n\r\n    const naverUseridCheck = async () => {\r\n      const url = `/ROOT/api/member/idcheck.json?userid=${state.userid}`;\r\n      const headers = { \"Content-Type\": \"application/json\" };\r\n      const { data } = await axios.get(url, { headers });\r\n      console.log('이메일중복확인 data=>', data);\r\n\r\n      if (data.result === true) {\r\n        naverUserLogin();\r\n      } else {\r\n        naverUserJoin();\r\n      }\r\n    }\r\n\r\n    const naverUserJoin = async () => {\r\n      const url = `/ROOT/api/member/join.json`;\r\n      const headers = { \"Content-Type\": \"application/json\" };\r\n      const body = {\r\n        userid: state.userid,\r\n        userpw: state.userpw,\r\n        role: state.role,\r\n        birth: state.birth,\r\n        nickname: state.nickname,\r\n        phone: state.phone\r\n      }\r\n      const { data } = await axios.post(url, body, { headers });\r\n      console.log(data);\r\n      if (data.status === 200) {\r\n        alert('회원가입완료');\r\n      }\r\n      naverUserJoinImg();\r\n    }\r\n\r\n    const naverUserJoinImg = async () => {\r\n      const url = `/ROOT/api/memberimage/apiinsert.json`;\r\n      const headers = { \"Content-Type\": \"application/json\" };\r\n\r\n      const member1 = {\r\n        userid: state.userid\r\n      }\r\n      const body = {\r\n        member: member1,\r\n        apiimageurl: state.apiimageurl\r\n      }\r\n      const response = await axios.post(url, body, { headers });\r\n      console.log(response);\r\n      naverUserLogin();\r\n    }\r\n\r\n    const naverUserLogin = async () => {\r\n      const url = `/ROOT/api/member/login.json`;\r\n      const headers = { \"Content-Type\": \"application/json\" };\r\n      const body = {\r\n        userid: state.userid,\r\n        userpw: state.userpw,\r\n        role: 'CUSTOMER'\r\n      }\r\n      const { data } = await axios.post(url, body, { headers });\r\n      console.log(data);\r\n      if (data.status === 200) {\r\n        sessionStorage.setItem(\"token\", data.result);\r\n\r\n        store.commit('setLogged', true);\r\n        store.commit('setCounter');\r\n\r\n        router.push({ path: '/' });\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      naverCallback();\r\n    })\r\n\r\n    return { state, naverCallback }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:400,800');\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background: #f6f5f7;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  font-family: 'Montserrat', sans-serif;\r\n  height: 100vh;\r\n  margin: -20px 0 50px;\r\n}\r\n\r\nh1 {\r\n  font-weight: bold;\r\n  margin: 0;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n  font-weight: 100;\r\n  line-height: 20px;\r\n  letter-spacing: 0.5px;\r\n  margin: 20px 0 30px;\r\n}\r\n\r\nspan {\r\n  font-size: 12px;\r\n}\r\n\r\na {\r\n  color: #333;\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  margin: 15px 0;\r\n}\r\n\r\nbutton {\r\n  border-radius: 20px;\r\n  border: 1px solid darkolivegreen;\r\n  background-color: darkolivegreen;\r\n  color: #FFFFFF;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 12px 45px;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  transition: transform 80ms ease-in;\r\n}\r\n\r\nbutton:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\nbutton:focus {\r\n  outline: none;\r\n}\r\n\r\nbutton.ghost {\r\n  background-color: transparent;\r\n  border-color: #FFFFFF;\r\n}\r\n\r\nform {\r\n  background-color: #FFFFFF;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 50px;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n\r\ninput {\r\n  background-color: #eee;\r\n  border: none;\r\n  padding: 12px 15px;\r\n  margin: 8px 0;\r\n  width: 100%;\r\n}\r\n\r\n.container {\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\r\n  0 10px 10px rgba(0, 0, 0, 0.22);\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 768px;\r\n  max-width: 100%;\r\n  min-height: 480px;\r\n}\r\n\r\n.form-container {\r\n  position: absolute;\r\n  top: 0;\r\n  height: 100%;\r\n  transition: all 0.6s ease-in-out;\r\n}\r\n\r\n.sign-in-container {\r\n  left: 0;\r\n  width: 50%;\r\n  z-index: 2;\r\n}\r\n\r\n.container.right-panel-active .sign-in-container {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.sign-up-container {\r\n  left: 0;\r\n  width: 50%;\r\n  opacity: 0;\r\n  z-index: 1;\r\n}\r\n\r\n.container.right-panel-active .sign-up-container {\r\n  transform: translateX(100%);\r\n  opacity: 1;\r\n  z-index: 5;\r\n  animation: show 0.6s;\r\n}\r\n\r\n@keyframes show {\r\n  0%, 49.99% {\r\n    opacity: 0;\r\n    z-index: 1;\r\n  }\r\n\r\n  50%, 100% {\r\n    opacity: 1;\r\n    z-index: 5;\r\n  }\r\n}\r\n\r\n.overlay-container {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  width: 50%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  transition: transform 0.6s ease-in-out;\r\n  z-index: 100;\r\n}\r\n\r\n.container.right-panel-active .overlay-container {\r\n  transform: translateX(-100%);\r\n}\r\n\r\n.overlay {\r\n  background: #749a5b;\r\n  background: -webkit-linear-gradient(to right, #7b814e, #58723f);\r\n  background: linear-gradient(to right, #0a3627, #545d32);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: 0 0;\r\n  color: #FFFFFF;\r\n  position: relative;\r\n  left: -100%;\r\n  height: 100%;\r\n  width: 200%;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n}\r\n\r\n.container.right-panel-active .overlay {\r\n  transform: translateX(50%);\r\n}\r\n\r\n.overlay-panel {\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 40px;\r\n  text-align: center;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 50%;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n}\r\n\r\n.overlay-left {\r\n  transform: translateX(-20%);\r\n}\r\n\r\n.container.right-panel-active .overlay-left {\r\n  transform: translateX(0);\r\n}\r\n\r\n.overlay-right {\r\n  right: 0;\r\n  transform: translateX(0);\r\n}\r\n\r\n.container.right-panel-active .overlay-right {\r\n  transform: translateX(20%);\r\n}\r\n\r\n.social-container {\r\n  margin: 20px 0;\r\n}\r\n\r\n.social-container a {\r\n  border: 1px solid #DDDDDD;\r\n  border-radius: 50%;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 5px;\r\n  height: 40px;\r\n  width: 40px;\r\n}\r\n\r\nfooter {\r\n  background-color: #222;\r\n  color: #fff;\r\n  font-size: 14px;\r\n  bottom: 0;\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: center;\r\n  z-index: 999;\r\n}\r\n\r\nfooter p {\r\n  margin: 10px 0;\r\n}\r\n\r\nfooter i {\r\n  color: red;\r\n}\r\n\r\nfooter a {\r\n  color: #3c97bf;\r\n  text-decoration: none;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}