{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-67a98cef\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"form-signin w-100 m-auto\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"my-signin2\",\n  style: {\n    \"display\": \"none\"\n  }\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    class: \"btn\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/login'))\n  }, \"사용자 로그인\"), _createTextVNode(\"   \"), _createElementVNode(\"button\", {\n    class: \"btn\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$router.push('/login2'))\n  }, \"판매자 로그인\"), _createCommentVNode(\" 구글 로그인 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.GoogleLoginBtn && $options.GoogleLoginBtn(...args))\n  }, \"Google 로그인\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.GoogleLogoutBtn && $options.GoogleLogoutBtn(...args))\n  }, \"Google 로그아웃\"), _hoisted_2])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","id","style","_createVNode","_component_Header","_hoisted_1","onClick","_cache","$event","_ctx","$router","push","_createCommentVNode","args","$options","GoogleLoginBtn","GoogleLogoutBtn","_hoisted_2"],"sources":["C:\\VeganLoadMap\\src\\pages\\User.vue"],"sourcesContent":["<template>\r\n  <Header/>\r\n  <div class=\"form-signin w-100 m-auto\">\r\n    <button class=\"btn\" @click=\"$router.push('/login')\">사용자 로그인</button> &nbsp;\r\n    <button class=\"btn\" @click=\"$router.push('/login2')\">판매자 로그인</button>\r\n    <!-- 구글 로그인 -->\r\n    <div>\r\n      <button @click=\"GoogleLoginBtn\">Google 로그인</button>\r\n      <button @click=\"GoogleLogoutBtn\">Google 로그아웃</button>\r\n      <div id=\"my-signin2\" style=\"display: none;\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"@/components/header/Header.vue\";\r\nexport default {\r\n  components: {Header},\r\n\r\n  data() {\r\n    return {\r\n      googleAuth: null,\r\n    };\r\n  },\r\n  methods: {\r\n    GoogleLoginBtn() {\r\n      const self = this;\r\n      this.googleAuth = gapi.auth2.getAuthInstance();\r\n\r\n      if (!this.googleAuth) {\r\n        gapi.load('auth2', function () {\r\n          gapi.auth2.init({\r\n            client_id: 'YOUR_CLIENT_ID', // 여기에 클라이언트 ID를 설정\r\n          }).then(() => {\r\n            self.googleAuth = gapi.auth2.getAuthInstance();\r\n            self.googleAuth.signIn().then(self.onGoogleLoginSuccess, self.onGoogleLoginFailure);\r\n          });\r\n        });\r\n      } else {\r\n        this.googleAuth.signIn().then(this.onGoogleLoginSuccess, this.onGoogleLoginFailure);\r\n      }\r\n    },\r\n    GoogleLogoutBtn() {\r\n      if (this.googleAuth) {\r\n        this.googleAuth.signOut();\r\n      }\r\n    },\r\n    onGoogleLoginSuccess(googleUser) {\r\n      const googleEmail = googleUser.getBasicProfile().getEmail();\r\n      console.log('Google 로그인 성공:', googleEmail);\r\n    },\r\n    onGoogleLoginFailure(error) {\r\n      console.error('Google 로그인 실패:', error);\r\n    },\r\n  },\r\n  mounted() {\r\n    gapi.load('auth2', () => {\r\n      gapi.auth2.init({\r\n        client_id: 'YOUR_CLIENT_ID', // 여기에 클라이언트 ID를 설정\r\n      }).then(() => {\r\n        this.googleAuth = gapi.auth2.getAuthInstance();\r\n      });\r\n    });\r\n  },\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form-signin {\r\n  max-width: 330px;\r\n  padding: 1rem;\r\n}\r\n\r\n.btn {\r\n  background-color: #24855b;\r\n  color: #ffffff;\r\n}\r\n\r\n.form-signin .form-floating:focus-within {\r\n  z-index: 2;\r\n}\r\n\r\n</style>"],"mappings":";;;;EAEOA,KAAK,EAAC;AAA0B;gEAOjCC,mBAAA,CAAkD;EAA7CC,EAAE,EAAC,YAAY;EAACC,KAAsB,EAAtB;IAAA;EAAA;;;;;6DARzBC,YAAA,CAASC,iBAAA,GACTJ,mBAAA,CASM,OATNK,UASM,GARJL,mBAAA,CAAoE;IAA5DD,KAAK,EAAC,KAAK;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;KAAY,SAAO,G,iBAAS,KACpE,GAAAX,mBAAA,CAAqE;IAA7DD,KAAK,EAAC,KAAK;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;KAAa,SAAO,GAC5DC,mBAAA,YAAe,EACfZ,mBAAA,CAIM,cAHJA,mBAAA,CAAmD;IAA1CM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,YAAU,GAC1Cb,mBAAA,CAAqD;IAA5CM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAE,eAAA,IAAAF,QAAA,CAAAE,eAAA,IAAAH,IAAA,CAAe;KAAE,aAAW,GAC5CI,UAAkD,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}