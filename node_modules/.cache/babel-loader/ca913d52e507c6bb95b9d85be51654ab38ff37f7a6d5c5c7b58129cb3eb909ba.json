{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive } from \"vue\";\nimport axios from \"axios\";\nimport store from \"@/scripts/store\";\nimport router from \"@/scripts/router\";\nimport Header from \"@/components/header/Header.vue\";\nexport default {\n  components: {\n    Header\n  },\n  mounted() {\n    const naver_id_login = new window.naver_id_login(\"a4TEdRYQwTEos4Ljj4RU\", \"http://localhost:3000/naver_callback\");\n    const state = naver_id_login.getUniqState();\n    naver_id_login.setButton(\"white\", 2, 40); // 버튼 설정\n    naver_id_login.setState(state);\n    naver_id_login.init_naver_id_login();\n  },\n  setup() {\n    const state = reactive({\n      form: {\n        email: \"\",\n        password: \"\"\n      }\n    });\n    const submit = () => {\n      axios.post(\"/api/user/login\", state.form).then(res => {\n        store.commit(\"setAccount\", res.data); // store 저장\n        if (res.data == 0) {\n          if (state.form.email == \"\") {\n            window.alert(\"이메일을 입력해주세요\");\n          } else if (state.form.password == \"\") {\n            window.alert(\"비밀번호를 입력해주세요\");\n          } else {\n            window.alert(\"이메일이나 비밀번호가 틀립니다\");\n            router.push({\n              path: \"/login\"\n            });\n          }\n        } else {\n          // console.log(res.data);\n          window.alert(\"로그인 하였습니다\");\n          router.push({\n            path: \"/\"\n          });\n        }\n      });\n      const kakaoLogin = async () => {\n        window.Kakao.Auth.login({\n          scope: 'profile_nickname, profile_image, account_email',\n          success: async authObj => {\n            const naverToken = authObj.access_token;\n\n            // 서버로 토큰 전송 및 로그인 처리\n            try {\n              const response = await axios.post('/api/user/kakao-login', {\n                kakaoToken: naverToken\n              });\n              if (response.data > 0) {\n                // 로그인 성공\n                console.log('로그인 성공');\n                // 다음 로직 수행 (예: 페이지 리디렉션)\n              } else {\n                // 로그인 실패\n                console.log('로그인 실패');\n              }\n            } catch (error) {\n              console.error('로그인 요청 실패:', error);\n            }\n          },\n          fail: error => {\n            console.log(error);\n          }\n        });\n      };\n    };\n    return {\n      state,\n      submit,\n      kakaoLogin\n    };\n  },\n  methods: {\n    kakaoLogin() {\n      window.Kakao.Auth.login({\n        scope: \"profile_image, account_email\",\n        success: this.getKakaoAccount\n      });\n    },\n    getKakaoAccount() {\n      window.Kakao.API.request({\n        url: \"/v2/user/me\",\n        success: res => {\n          const kakao_account = res.kakao_account;\n          const ninkname = kakao_account.profile.ninkname;\n          const email = kakao_account.email;\n          console.log(\"ninkname\", ninkname);\n          console.log(\"email\", email);\n\n          //로그인처리구현\n\n          alert(\"로그인 성공!\");\n        },\n        fail: error => {\n          console.log(error);\n        }\n      });\n    },\n    kakaoLogout() {\n      window.Kakao.Auth.logout(res => {\n        console.log(res);\n      });\n    }\n  }\n};","map":{"version":3,"names":["reactive","axios","store","router","Header","components","mounted","naver_id_login","window","state","getUniqState","setButton","setState","init_naver_id_login","setup","form","email","password","submit","post","then","res","commit","data","alert","push","path","kakaoLogin","Kakao","Auth","login","scope","success","authObj","naverToken","access_token","response","kakaoToken","console","log","error","fail","methods","getKakaoAccount","API","request","url","kakao_account","ninkname","profile","kakaoLogout","logout"],"sources":["C:\\TeamProject\\VeganLoadMap\\src\\components\\user\\Login.vue"],"sourcesContent":["<template>\r\n  <Header/>\r\n  <br><br>\r\n  <div className=\"container\" id=\"container\">\r\n    <div className=\"form-container sign-in-container\">\r\n      <form action=\"#\">\r\n        <h1>Sign In</h1>\r\n        <div className=\"social-container\">\r\n          <a href=\"#\" className=\"social\">\r\n            <div id=\"naver_id_login\" @click=\"naverLogin\"></div>\r\n          </a>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <a href=\"#\" className=\"social\"><i className=\"fa fa-google-plus\" aria-hidden=\"true\"\r\n                                            @click=\"googleLoginBtn\"></i></a>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <a href=\"#\" className=\"social\"><i className=\"fa fa-comments\" aria-hidden=\"true\"\r\n                                            id=\"custom-login-btn\" @click=\"kakaoLogin()\"></i></a>\r\n\r\n        </div>\r\n        <span>or use your account</span>\r\n        <input type=\"email\" placeholder=\"Email\" v-model=\"state.form.email\">\r\n        <input type=\"password\" placeholder=\"Password\" v-model=\"state.form.password\"/><br>\r\n        <button @click=\"submit()\">로그인</button>\r\n      </form>\r\n    </div>\r\n    <div className=\"overlay-container\">\r\n      <div className=\"overlay\">\r\n        <div className=\"overlay-panel overlay-right\">\r\n          <h1>Welcome to VeganRoadMap!</h1>\r\n          <p>로그인 및 회원가입 후에 비건로드맵을 즐겨보세요!</p>\r\n          <button className=\"ghost\" id=\"signUp\" @click=\"$router.push('/join')\">회원가입</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {reactive} from \"vue\";\r\nimport axios from \"axios\";\r\nimport store from \"@/scripts/store\";\r\nimport router from \"@/scripts/router\";\r\nimport Header from \"@/components/header/Header.vue\";\r\n\r\nexport default {\r\n  components: {Header},\r\n  mounted() {\r\n    const naver_id_login = new window.naver_id_login(\"a4TEdRYQwTEos4Ljj4RU\", \"http://localhost:3000/naver_callback\");\r\n    const state = naver_id_login.getUniqState();\r\n    naver_id_login.setButton(\"white\", 2, 40); // 버튼 설정\r\n    naver_id_login.setState(state);\r\n    naver_id_login.init_naver_id_login();\r\n  },\r\n  setup() {\r\n    const state = reactive({\r\n      form: {\r\n        email: \"\",\r\n        password: \"\"\r\n      }\r\n    })\r\n    const submit = () => {\r\n      axios.post(\"/api/user/login\", state.form).then((res) => {\r\n        store.commit(\"setAccount\", res.data); // store 저장\r\n        if (res.data == 0) {\r\n          if (state.form.email == \"\") {\r\n            window.alert(\"이메일을 입력해주세요\");\r\n          } else if (state.form.password == \"\") {\r\n            window.alert(\"비밀번호를 입력해주세요\");\r\n          } else {\r\n            window.alert(\"이메일이나 비밀번호가 틀립니다\");\r\n            router.push({path: \"/login\"});\r\n          }\r\n        } else {\r\n          // console.log(res.data);\r\n          window.alert(\"로그인 하였습니다\");\r\n          router.push({path: \"/\"});\r\n        }\r\n      })\r\n\r\n      const kakaoLogin = async () => {\r\n        window.Kakao.Auth.login({\r\n          scope: 'profile_nickname, profile_image, account_email',\r\n          success: async (authObj) => {\r\n            const naverToken = authObj.access_token;\r\n\r\n            // 서버로 토큰 전송 및 로그인 처리\r\n            try {\r\n              const response = await axios.post('/api/user/kakao-login', { kakaoToken: naverToken });\r\n              if (response.data > 0) {\r\n                // 로그인 성공\r\n                console.log('로그인 성공');\r\n                // 다음 로직 수행 (예: 페이지 리디렉션)\r\n              } else {\r\n                // 로그인 실패\r\n                console.log('로그인 실패');\r\n              }\r\n            } catch (error) {\r\n              console.error('로그인 요청 실패:', error);\r\n            }\r\n          },\r\n          fail: (error) => {\r\n            console.log(error);\r\n          },\r\n        });\r\n      };\r\n\r\n    }\r\n    return {state, submit, kakaoLogin}\r\n  },\r\n\r\n  methods: {\r\n    kakaoLogin() {\r\n      window.Kakao.Auth.login({\r\n        scope: \"profile_image, account_email\",\r\n        success: this.getKakaoAccount,\r\n      });\r\n    },\r\n    getKakaoAccount() {\r\n      window.Kakao.API.request({\r\n        url: \"/v2/user/me\",\r\n        success: (res) => {\r\n          const kakao_account = res.kakao_account;\r\n          const ninkname = kakao_account.profile.ninkname;\r\n          const email = kakao_account.email;\r\n          console.log(\"ninkname\", ninkname);\r\n          console.log(\"email\", email);\r\n\r\n          //로그인처리구현\r\n\r\n          alert(\"로그인 성공!\");\r\n        },\r\n        fail: (error) => {\r\n          console.log(error);\r\n        },\r\n      });\r\n    },\r\n    kakaoLogout() {\r\n      window.Kakao.Auth.logout((res) => {\r\n        console.log(res);\r\n      });\r\n    },\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:400,800');\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background: #f6f5f7;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  font-family: 'Montserrat', sans-serif;\r\n  height: 100vh;\r\n  margin: -20px 0 50px;\r\n}\r\n\r\nh1 {\r\n  font-weight: bold;\r\n  margin: 0;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n  font-weight: 100;\r\n  line-height: 20px;\r\n  letter-spacing: 0.5px;\r\n  margin: 20px 0 30px;\r\n}\r\n\r\nspan {\r\n  font-size: 12px;\r\n}\r\n\r\na {\r\n  color: #333;\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  margin: 15px 0;\r\n}\r\n\r\nbutton {\r\n  border-radius: 20px;\r\n  border: 1px solid darkolivegreen;\r\n  background-color: darkolivegreen;\r\n  color: #FFFFFF;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 12px 45px;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  transition: transform 80ms ease-in;\r\n}\r\n\r\nbutton:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\nbutton:focus {\r\n  outline: none;\r\n}\r\n\r\nbutton.ghost {\r\n  background-color: transparent;\r\n  border-color: #FFFFFF;\r\n}\r\n\r\nform {\r\n  background-color: #FFFFFF;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 50px;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n\r\ninput {\r\n  background-color: #eee;\r\n  border: none;\r\n  padding: 12px 15px;\r\n  margin: 8px 0;\r\n  width: 100%;\r\n}\r\n\r\n.container {\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\r\n  0 10px 10px rgba(0, 0, 0, 0.22);\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 768px;\r\n  max-width: 100%;\r\n  min-height: 480px;\r\n}\r\n\r\n.form-container {\r\n  position: absolute;\r\n  top: 0;\r\n  height: 100%;\r\n  transition: all 0.6s ease-in-out;\r\n}\r\n\r\n.sign-in-container {\r\n  left: 0;\r\n  width: 50%;\r\n  z-index: 2;\r\n}\r\n\r\n.container.right-panel-active .sign-in-container {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.sign-up-container {\r\n  left: 0;\r\n  width: 50%;\r\n  opacity: 0;\r\n  z-index: 1;\r\n}\r\n\r\n.container.right-panel-active .sign-up-container {\r\n  transform: translateX(100%);\r\n  opacity: 1;\r\n  z-index: 5;\r\n  animation: show 0.6s;\r\n}\r\n\r\n@keyframes show {\r\n  0%, 49.99% {\r\n    opacity: 0;\r\n    z-index: 1;\r\n  }\r\n\r\n  50%, 100% {\r\n    opacity: 1;\r\n    z-index: 5;\r\n  }\r\n}\r\n\r\n.overlay-container {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  width: 50%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  transition: transform 0.6s ease-in-out;\r\n  z-index: 100;\r\n}\r\n\r\n.container.right-panel-active .overlay-container {\r\n  transform: translateX(-100%);\r\n}\r\n\r\n.overlay {\r\n  background: #749a5b;\r\n  background: -webkit-linear-gradient(to right, #7b814e, #58723f);\r\n  background: linear-gradient(to right, #0a3627, #545d32);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: 0 0;\r\n  color: #FFFFFF;\r\n  position: relative;\r\n  left: -100%;\r\n  height: 100%;\r\n  width: 200%;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n}\r\n\r\n.container.right-panel-active .overlay {\r\n  transform: translateX(50%);\r\n}\r\n\r\n.overlay-panel {\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 40px;\r\n  text-align: center;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 50%;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n}\r\n\r\n.overlay-left {\r\n  transform: translateX(-20%);\r\n}\r\n\r\n.container.right-panel-active .overlay-left {\r\n  transform: translateX(0);\r\n}\r\n\r\n.overlay-right {\r\n  right: 0;\r\n  transform: translateX(0);\r\n}\r\n\r\n.container.right-panel-active .overlay-right {\r\n  transform: translateX(20%);\r\n}\r\n\r\n.social-container {\r\n  margin: 20px 0;\r\n}\r\n\r\n.social-container a {\r\n  border: 1px solid #DDDDDD;\r\n  border-radius: 50%;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 5px;\r\n  height: 40px;\r\n  width: 40px;\r\n}\r\n\r\nfooter {\r\n  background-color: #222;\r\n  color: #fff;\r\n  font-size: 14px;\r\n  bottom: 0;\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: center;\r\n  z-index: 999;\r\n}\r\n\r\nfooter p {\r\n  margin: 10px 0;\r\n}\r\n\r\nfooter i {\r\n  color: red;\r\n}\r\n\r\nfooter a {\r\n  color: #3c97bf;\r\n  text-decoration: none;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}