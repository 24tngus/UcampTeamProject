{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport Header from \"@/components/header/Header.vue\";\nimport router from \"@/scripts/router\";\nexport default {\n  components: {\n    Header\n  },\n  data() {\n    return {\n      userid: \"\",\n      nickname: \"\",\n      reserveGetData: {\n        time0810: 0,\n        time1012: 0,\n        time1214: 0,\n        time1416: 0,\n        time1618: 0,\n        time1820: 0,\n        time2022: 0\n      },\n      storename: '',\n      shopseq: 0,\n      reserver: '',\n      team: 0,\n      people: 0,\n      date: \"\",\n      time0810: 0,\n      time1012: 0,\n      time1214: 0,\n      time1416: 0,\n      time1618: 0,\n      time1820: 0,\n      time2022: 0,\n      comment: \"\",\n      reverse: [],\n      isDataLoaded: true,\n      reserveData: null,\n      currentTime: new Date(),\n      mUidDate: ''\n    };\n  },\n  mounted() {\n    this.storename = this.$route.query.storename;\n    this.load();\n  },\n  methods: {\n    load() {\n      axios.get(\"/api/user/mypage\").then(({\n        data\n      }) => {\n        this.userid = data.id;\n        this.nickname = data.nickname;\n      });\n    },\n    toggleTime(reserve, time) {\n      if (this.isDataLoaded) {\n        // Check if data is loaded\n        if (reserve[time] === 1) {\n          reserve[time] = 0;\n        } else {\n          for (let key in reserve) {\n            if (key.includes('time') && key !== time) {\n              reserve[key] = 0;\n            }\n          }\n          reserve[time] = 1;\n        }\n      }\n    },\n    handleInsert(time) {\n      this.time0810 = time === \"time0810\" ? 1 : this.time0810;\n      this.time1012 = time === \"time1012\" ? 1 : this.time1012;\n      this.time1214 = time === \"time1214\" ? 1 : this.time1214;\n      this.time1416 = time === \"time1416\" ? 1 : this.time1416;\n      this.time1618 = time === \"time1618\" ? 1 : this.time1618;\n      this.time1820 = time === \"time1820\" ? 1 : this.time1820;\n      this.time2022 = time === \"time2022\" ? 1 : this.time2022;\n    },\n    insertReserve() {\n      const data = {\n        team: this.team,\n        people: this.people,\n        date: this.date,\n        time0810: this.reserveData.time0810,\n        time1012: this.reserveData.time1012,\n        time1214: this.reserveData.time1214,\n        time1416: this.reserveData.time1416,\n        time1618: this.reserveData.time1618,\n        time1820: this.reserveData.time1820,\n        time2022: this.reserveData.time2022,\n        comment: this.comment\n      };\n      axios.post(`/api/reserve/insert`, data, {\n        params: {\n          storename: this.storename\n        }\n      }).then(response => {\n        console.log(\"Data inserted successfully\", response.data);\n        alert(\"예약이 완료되었습니다.\");\n        router.push({\n          path: \"/reserve_usercheck\"\n        });\n      }).catch(error => {\n        console.error(\"Error inserting data\", error);\n        // Handle error as needed\n        alert(\"현재 예약 인원이 가득찼습니다.\");\n        window.location.reload();\n      });\n      this.requestPay();\n    },\n    // 결제\n    requestPay() {\n      const {\n        IMP\n      } = window;\n      IMP.init('imp70364071');\n      // https://developers.portone.io/docs/ko/sdk/javascript-sdk/payrq >> 파라미터 정리 되어있음.\n      IMP.request_pay({\n        // param\n        pg: \"kcp.INIBillTst_inicis\",\n        // pg사 구분코드\n        pay_method: \"card\",\n        // 결제수단 구분코드\n        merchant_uid: \"vrm_wando_\" + this.mUidDate,\n        // 가맹점 주문번호. 40bytes 이하. 매 거래시 다 달라야함. 거래고유코드라고 생각해도 될듯?\n        name: this.storename,\n        // 결제대상 제품명 (상품명) > 상점명(storename + 예약)\n        amount: 50,\n        // 결제 금액@@@@\n        buyer_email: '',\n        // 주문자 이메일  > default로 저게 박힘\n        buyer_name: this.nickname\n      }, rsp => {\n        // callback\n        if (rsp.success) {\n          // 결제 성공\n          console.log(\"rsp.success => \" + rsp);\n          const paymentData = {\n            paymentid: rsp.merchant_uid,\n            // 포트원 고유 결제번호. success가 false이고 사전 validation에 실패한 경우, imp_uid는 null일 수 있음\n            storename: rsp.merchant_uid,\n            userid: this.userid,\n            price: rsp.paid_amount,\n            status: rsp.status // 결제 성공 시에는 status\n            /* 결제상태\n                ready(브라우저 창 이탈, 가상계좌 발급 완료 등 미결제 상태)\n                paid(결제완료)\n                failed(신용카드 한도 초과, 체크카드 잔액 부족, 브라우저 창 종료 또는 취소 버튼 클릭 등 결제실패 상태) */\n          };\n\n          axios.post(\"/api/payment\", paymentData).then(data => {\n            // 서버 결제 API 성공시 로직\n            console.log(data);\n            alert(\"결제 성공!\");\n            router.push({\n              name: \"PaymentSuccess\",\n              params: {\n                value: paymentData.paymentid\n              }\n            });\n          }).catch(error => {\n            // 서버 결제 API 실패 시 로직\n            console.log(error);\n            alert(\"DB 입력 API 요청 실패\");\n          });\n        } else {\n          // 결제 실패\n          const paymentData = {\n            paymentid: \"wando_\" + rsp.imp_uid,\n            // 포트원 고유 결제번호. success가 false이고 사전 validation에 실패한 경우, imp_uid는 null일 수 있음\n            storename: rsp.merchant_uid,\n            userid: this.userid,\n            price: \"1\",\n            status: rsp.success // 결제 실패 시에는 status가 할당되지 않아서 success.\n          };\n\n          axios.post(\"/api/payment\", paymentData).then(data => {\n            // 서버 결제 API 실패 시 로직\n            console.log(data);\n            alert(\"결제에 실패했습니다. 에러 내용 : \" + rsp.error_msg);\n          }).catch(error => {\n            // 서버 결제 API 실패시 로직\n            console.log(error);\n            alert(\"DB 입력 API 요청 실패\");\n          });\n        }\n      });\n    },\n    fetchData() {\n      axios.get(`/api/reservesetting/${this.date}`, {\n        params: {\n          storename: this.storename\n        }\n      }).then(response => {\n        this.reserveData = response.data[0];\n        this.isDataLoaded = true;\n        if (this.reserveData) {\n          for (let key in this.reserveData) {\n            if (this.reserveData[key] === 1) {\n              this.reserveGetData[key] = 1;\n            }\n          }\n        } else {\n          this.reserveData = null;\n          this.isDataLoaded = false;\n        }\n        if (this.reserveData.time0810 === 0 && this.reserveData.time1012 === 0 && this.reserveData.time1214 === 0 && this.reserveData.time1416 === 0 && this.reserveData.time1618 === 0 && this.reserveData.time1820 === 0 && this.reserveData.time2022 === 0) {\n          console.log(this.isDataLoaded);\n          this.isDataLoaded = false;\n        }\n      }).catch(error => {\n        console.error(\"Error fetching reserve data\", error);\n        this.reserveData = null;\n        this.isDataLoaded = false;\n      });\n    }\n  },\n  computed: {\n    // yyMMdd_HHmmss 변환 후 merchant_uid에 붙임 ex)231031_224258\n    formattedCurrentTime() {\n      const date = this.currentTime;\n      const year = String(date.getFullYear()).slice(-2);\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      const hours = String(date.getHours()).padStart(2, '0');\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      const seconds = String(date.getSeconds()).padStart(2, '0');\n      return `${year}${month}${day}_${hours}${minutes}${seconds}`;\n    }\n  },\n  created() {\n    this.fetchData();\n    this.mUidDate = this.formattedCurrentTime;\n  },\n  watch: {\n    date: function () {\n      this.fetchData();\n    }\n  }\n};","map":{"version":3,"names":["axios","Header","router","components","data","userid","nickname","reserveGetData","time0810","time1012","time1214","time1416","time1618","time1820","time2022","storename","shopseq","reserver","team","people","date","comment","reverse","isDataLoaded","reserveData","currentTime","Date","mUidDate","mounted","$route","query","load","methods","get","then","id","toggleTime","reserve","time","key","includes","handleInsert","insertReserve","post","params","response","console","log","alert","push","path","catch","error","window","location","reload","requestPay","IMP","init","request_pay","pg","pay_method","merchant_uid","name","amount","buyer_email","buyer_name","rsp","success","paymentData","paymentid","price","paid_amount","status","value","imp_uid","error_msg","fetchData","computed","formattedCurrentTime","year","String","getFullYear","slice","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","created","watch"],"sources":["/Users/soohykim/Desktop/front/src/components/user/ReserveUser.vue"],"sourcesContent":["<template>\n  <Header />\n  <section class=\"showcase-area\" id=\"showcase\">\n    <div class=\"background-image\" :style=\"'background-image: url(/aaa1.png)'\"></div>\n    <div class=\"showcase-container\"><br><br><br><br>\n      <h1 class=\"main-title\" id=\"home\">Recommendation</h1><br>\n    </div>\n  </section>\n  <br><br>\n  <div class=\"card shadow-sm\" id=\"cat\">\n    <div class=\"card-body\" >\n      <div><h2 class=\"cattitle\">Book Here!</h2></div>\n      <div>\n        <ul>\n          <hr>\n          <div class=\"memberform\">\n            <div class=\"member\">\n              <div class=\"userbookinfo\">\n                <div class=\"field1\">\n                  <b class=\"rname\">가게명 : {{ storename }}</b><br><br>\n                  <b class=\"rname\">예약자 닉네임 : {{ this.nickname }}</b>\n                </div>\n              </div><hr>\n              <div class=\"fieldbook\">\n                <div class=\"field\">\n                  <b>예약 인원</b>\n                  <input type=\"number\" v-model=\"people\" class=\"ruser\" style=\"width: 200%\">\n                  <br>\n                </div>\n              </div>\n              <div class=\"fieldbook\">\n                <div class=\"field\">\n                  <b>예약 시간</b>\n                  <span v-if=\"reserveData && reserveData.time0810 === 1\">\n                    <input type=\"text\" class=\"ruser\" value=\"08:00 ~ 10:00\">\n                  </span>\n                  <span v-else-if=\"reserveData && reserveData.time1012 === 1\">\n                    <input type=\"text\" class=\"ruser\" value=\"10:00 ~ 12:00\">\n                  </span>\n                  <span v-else-if=\"reserveData && reserveData.time1214 === 1\">\n                    <input type=\"text\" class=\"ruser\" value=\"12:00 ~ 14:00\">\n                  </span>\n                  <span v-else-if=\"reserveData && reserveData.time1416 === 1\">\n                    <input type=\"text\" class=\"ruser\" value=\"14:00 ~ 16:00\">\n                  </span>\n                  <span v-else-if=\"reserveData && reserveData.time1618 === 1\">\n                    <input type=\"text\" class=\"ruser\" value=\"16:00 ~ 18:00\">\n                  </span>\n                  <span v-else-if=\"reserveData && reserveData.time1820 === 1\">\n                    <input type=\"text\" class=\"ruser\" value=\"18:00 ~ 20:00\">\n                  </span>\n                  <span v-else-if=\"reserveData && reserveData.time2022 === 1\">\n                    <input type=\"text\" class=\"ruser\" value=\"20:00 ~ 22:00\">\n                  </span>\n                  <span v-else>\n                    <input type=\"text\" class=\"ruser\" value=\"\">\n                  </span>\n\n                  <br>\n                </div>\n\n                <div class=\"field\">\n                  <b>예약 날짜</b>\n                  <input type=\"date\" v-model=\"date\" class=\"ruser\" >\n                  <!--                {{ date }}-->\n                  <br>\n                  <div class=\"time-section\">\n                    <div class=\"timebtn\" v-if=\"isDataLoaded\">\n                      <template v-if=\"reserveData\">\n                        08:00 - 10:00\n                        <button @click=\"toggleTime(reserveData, 'time0810')\" :disabled=\"reserveGetData.time0810 !== 1\">\n                          <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                        </button>\n                        <!-- {{ reserveData.time0810 }}-->\n                        &nbsp;&nbsp;\n                        10:00 - 12:00\n                        <button @click=\"toggleTime(reserveData, 'time1012')\" :disabled=\"reserveGetData.time1012 !== 1\">\n                          <i class=\"fa fa-check\" aria-hidden=\"true\"></i>                </button>\n                        <!-- {{ reserveData.time1012 }}-->\n                        <br>\n                        12:00 - 14:00\n                        <button @click=\"toggleTime(reserveData, 'time1214')\" :disabled=\"reserveGetData.time1214 !== 1\">\n                          <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                        </button>\n                        <!-- {{ reserveData.time1214 }}-->\n                        &nbsp;&nbsp;\n                        14:00 - 16:00\n                        <button @click=\"toggleTime(reserveData, 'time1416')\" :disabled=\"reserveGetData.time1416 !== 1\">\n                          <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                        </button>\n                        <!-- {{ reserveData.time1416 }}-->\n                        <br>\n                        16:00 - 18:00\n                        <button @click=\"toggleTime(reserveData, 'time1618')\" :disabled=\"reserveGetData.time1618 !== 1\">\n                          <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                        </button>\n                        <!--{{ reserveData.time1618 }}-->\n                        &nbsp;&nbsp;\n                        18:00 - 20:00\n                        <button @click=\"toggleTime(reserveData, 'time1820')\" :disabled=\"reserveGetData.time1820 !== 1\">\n                          <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                        </button>\n                        <!--{{ reserveData.time1820 }}-->\n                        <br>\n                        20:00 - 22:00\n                        <button @click=\"toggleTime(reserveData, 'time2022')\" :disabled=\"reserveGetData.time2022 !== 1\">\n                          <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                        </button>\n                        <!--{{ reserveData.time2022 }}-->\n                        <br>\n\n\n                      </template>\n                      <template v-else>\n                        해당 날짜에 대한 정보가 없습니다. 다른 날짜를 선택해주세요.<br>\n                      </template>\n                    </div>\n                  </div>\n                </div>\n\n\n              </div></div><hr>\n            <div class=\"request-section\">\n              <div><b>요청사항</b> <input type=\"text\" placeholder=\"알레르기 정보나 가게에 전달하고 싶은 사항을 작성해주세요.\" v-model=\"comment\" class=\"com\" style=\"height:200px\"></div>\n              <!--  {{ comment }} -->\n            </div><br><br>\n            <button @click=\"insertReserve\" class=\"bookbtn\">예약금 결제</button>\n          </div>\n        </ul>\n      </div>\n    </div>\n  </div>\n  <br><br><br><br><br><br><br><br>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Header from \"@/components/header/Header.vue\";\nimport router from \"@/scripts/router\";\n\nexport default {\n  components: {Header},\n  data() {\n    return {\n      userid: \"\",\n      nickname: \"\",\n      reserveGetData: {\n        time0810: 0,\n        time1012: 0,\n        time1214: 0,\n        time1416: 0,\n        time1618: 0,\n        time1820: 0,\n        time2022: 0,\n      },\n      storename: '',\n      shopseq: 0,\n      reserver: '',\n      team: 0,\n      people: 0,\n      date: \"\",\n      time0810: 0,\n      time1012: 0,\n      time1214: 0,\n      time1416: 0,\n      time1618: 0,\n      time1820: 0,\n      time2022: 0,\n      comment: \"\",\n      reverse: [],\n      isDataLoaded: true,\n      reserveData: null,\n      currentTime : new Date(),\n      mUidDate : '',\n    };\n  },\n  mounted() {\n    this.storename = this.$route.query.storename;\n    this.load();\n  },\n  methods: {\n    load () {\n      axios.get(\"/api/user/mypage\").then(({data}) => {\n        this.userid = data.id;\n        this.nickname = data.nickname;\n      })\n    },\n    toggleTime(reserve, time) {\n      if (this.isDataLoaded) { // Check if data is loaded\n        if (reserve[time] === 1) {\n          reserve[time] = 0;\n        } else {\n          for (let key in reserve) {\n            if (key.includes('time') && key !== time) {\n              reserve[key] = 0;\n            }\n          }\n          reserve[time] = 1;\n        }\n      }\n    }\n    ,\n\n    handleInsert(time) {\n      this.time0810 = time === \"time0810\" ? 1 : this.time0810;\n      this.time1012 = time === \"time1012\" ? 1 : this.time1012;\n      this.time1214 = time === \"time1214\" ? 1 : this.time1214;\n      this.time1416 = time === \"time1416\" ? 1 : this.time1416;\n      this.time1618 = time === \"time1618\" ? 1 : this.time1618;\n      this.time1820 = time === \"time1820\" ? 1 : this.time1820;\n      this.time2022 = time === \"time2022\" ? 1 : this.time2022;\n    },\n    insertReserve() {\n      const data = {\n        team: this.team,\n        people: this.people,\n        date: this.date,\n        time0810: this.reserveData.time0810,\n        time1012: this.reserveData.time1012,\n        time1214: this.reserveData.time1214,\n        time1416: this.reserveData.time1416,\n        time1618: this.reserveData.time1618,\n        time1820: this.reserveData.time1820,\n        time2022: this.reserveData.time2022,\n        comment: this.comment,\n      };\n      axios\n          .post(`/api/reserve/insert`, data, {params: {\n              storename: this.storename\n            }})\n          .then((response) => {\n            console.log(\"Data inserted successfully\", response.data);\n            alert(\"예약이 완료되었습니다.\")\n            router.push({path: \"/reserve_usercheck\"});\n          })\n          .catch((error) => {\n            console.error(\"Error inserting data\", error);\n            // Handle error as needed\n            alert(\"현재 예약 인원이 가득찼습니다.\");\n            window.location.reload();\n          });\n      this.requestPay();\n    },\n    // 결제\n    requestPay() {\n      const { IMP } = window;\n\n      IMP.init('imp70364071');\n      // https://developers.portone.io/docs/ko/sdk/javascript-sdk/payrq >> 파라미터 정리 되어있음.\n      IMP.request_pay({ // param\n        pg: \"kcp.INIBillTst_inicis\",  // pg사 구분코드\n        pay_method: \"card\", // 결제수단 구분코드\n        merchant_uid: \"vrm_wando_\" + this.mUidDate,  // 가맹점 주문번호. 40bytes 이하. 매 거래시 다 달라야함. 거래고유코드라고 생각해도 될듯?\n        name: this.storename,  // 결제대상 제품명 (상품명) > 상점명(storename + 예약)\n        amount: 50, // 결제 금액@@@@\n        buyer_email: '', // 주문자 이메일  > default로 저게 박힘\n        buyer_name: this.nickname\n      }, rsp => { // callback\n        if (rsp.success) {  // 결제 성공\n          console.log(\"rsp.success => \" + rsp)\n\n          const paymentData = {\n            paymentid: rsp.merchant_uid,  // 포트원 고유 결제번호. success가 false이고 사전 validation에 실패한 경우, imp_uid는 null일 수 있음\n            storename: rsp.merchant_uid,\n            userid: this.userid,\n            price: rsp.paid_amount,\n            status: rsp.status, // 결제 성공 시에는 status\n            /* 결제상태\n                ready(브라우저 창 이탈, 가상계좌 발급 완료 등 미결제 상태)\n                paid(결제완료)\n                failed(신용카드 한도 초과, 체크카드 잔액 부족, 브라우저 창 종료 또는 취소 버튼 클릭 등 결제실패 상태) */\n          };\n\n          axios.post(\"/api/payment\", paymentData)\n              .then((data) => {\n                // 서버 결제 API 성공시 로직\n                console.log(data)\n                alert(\"결제 성공!\");\n\n                router.push({ name: \"PaymentSuccess\", params: { value : paymentData.paymentid } })\n              })\n              .catch((error) => {\n                // 서버 결제 API 실패 시 로직\n                console.log(error)\n                alert(\"DB 입력 API 요청 실패\");\n              });\n\n        } else {  // 결제 실패\n          const paymentData = {\n            paymentid: \"wando_\" + rsp.imp_uid,  // 포트원 고유 결제번호. success가 false이고 사전 validation에 실패한 경우, imp_uid는 null일 수 있음\n            storename: rsp.merchant_uid,\n            userid: this.userid,\n            price: \"1\",\n            status: rsp.success,  // 결제 실패 시에는 status가 할당되지 않아서 success.\n          };\n\n          axios.post(\"/api/payment\", paymentData)\n              .then((data) => {\n                // 서버 결제 API 실패 시 로직\n                console.log(data);\n                alert(\"결제에 실패했습니다. 에러 내용 : \" + rsp.error_msg)\n              })\n              .catch((error) => {\n                // 서버 결제 API 실패시 로직\n                console.log(error)\n                alert(\"DB 입력 API 요청 실패\");\n              });\n\n        }\n      });\n    },\n    fetchData() {\n      axios\n          .get(`/api/reservesetting/${this.date}`, {params:{\n              storename: this.storename\n            }})\n          .then((response) => {\n            this.reserveData = response.data[0];\n            this.isDataLoaded = true;\n            if (this.reserveData) {\n              for (let key in this.reserveData) {\n                if (this.reserveData[key] === 1) {\n                  this.reserveGetData[key] = 1;\n                }\n              }\n            } else {\n              this.reserveData = null;\n              this.isDataLoaded = false;\n            }\n\n            if (\n                this.reserveData.time0810 === 0 &&\n                this.reserveData.time1012 === 0 &&\n                this.reserveData.time1214 === 0 &&\n                this.reserveData.time1416 === 0 &&\n                this.reserveData.time1618 === 0 &&\n                this.reserveData.time1820 === 0 &&\n                this.reserveData.time2022 === 0\n            ) {\n              console.log(this.isDataLoaded);\n              this.isDataLoaded = false;\n            }\n          })\n          .catch((error) => {\n            console.error(\"Error fetching reserve data\", error);\n            this.reserveData = null;\n            this.isDataLoaded = false;\n          });\n    },\n  },\n  computed: {\n    // yyMMdd_HHmmss 변환 후 merchant_uid에 붙임 ex)231031_224258\n    formattedCurrentTime() {\n      const date = this.currentTime;\n      const year = String(date.getFullYear()).slice(-2);\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      const hours = String(date.getHours()).padStart(2, '0');\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      const seconds = String(date.getSeconds()).padStart(2, '0');\n\n      return `${year}${month}${day}_${hours}${minutes}${seconds}`;\n    },\n  },\n  created() {\n    this.fetchData();\n    this.mUidDate = this.formattedCurrentTime\n  },\n  watch: {\n    date: function () {\n      this.fetchData();\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url(\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n\n\nbody {\n  font-family: \"Poppins\", sans-serif;\n}\n.showcase-area {\n  height: 50vh;\n  background: linear-gradient(\n      rgba(240, 240, 240, 0.144),\n      rgba(255, 255, 255, 0.336)\n  ),\n  url(\"https://i.postimg.cc/C5dkH0H6/BUCA-HEADERS-IMAGES-2-Reservations.png\");\n  background-size: cover;\n  background-position: 30% 30%;\n  background-repeat: no-repeat;\n}\n.showcase-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  font-size: 1.6rem;\n}\n.main-title {\n  font-size: 180%;\n  color: #545d32;\n}\n\nbtn {\n  display: inline-block;\n  padding: 0.5em 1.5em;\n  text-decoration: none;\n  border-radius: 50px;\n  cursor: pointer;\n  outline: none;\n  margin-top: 1em;\n  text-transform: uppercase;\n}\n.btn-primary {\n  color: #fff;\n  background: darkolivegreen;\n  width: 15%;\n  opacity: 0.7; /* 투명도를 조정합니다. 0.0에서 1.0까지 가능합니다. */\n  transition: opacity 0.3s ease-in-out;\n}\n.btn-primary:hover {\n  background: darkolivegreen;\n  transition: background 0.3s ease-in-out;\n  opacity: 1.0;\n}\n\n/* 클릭된 버튼 스타일 */\nbutton:active {\n  background-color: darkolivegreen; /* 클릭 시 배경색 변경 */\n  color: #fff; /* 클릭 시 텍스트 색상 변경 */\n}\n.timebtn{\n  float : right;\n  margin-right : 20px;\n}\n.timebtn button input[type=\"checkbox\"]:checked {\n  background-color: #4CAF50; /* Change the background color when checked */\n  color: #fff; /* Change the text color when checked */\n}\nbutton i {\n  margin-right: 5px; /* 아이콘과 텍스트 사이의 간격 조절 */\n  font-size: 20px; /* 아이콘 크기 조절 */\n}\n\n/* 다른 버튼 스타일은 이전 답변의 CSS를 그대로 사용 */\nbutton {\n  padding: 10px 10px;\n  font-size: 16px;\n  color: #283827;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-right: 10px;\n  margin-bottom: 10px;\n}\n\nbutton:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\nbutton:hover {\n  color: #beefbe;\n}\n.field b {\n  display: block; /* 제목을 블록 요소로 변경하여 제목 아래 공백 제거 */\n}\n.ruser{\n  width : 60%;\n}\n.field{\n  width : 50%;\n  text-align: center;\n  display: inline-block; /* div 요소를 가로로 정렬 */\n}\n.field1{\n  margin-left : 20px;\n  margin-top : 20px;\n}\n.rname{\n  color : #4f4e4e;\n}\n.userbookinfo{\n  border-radius: 7px;\n  background : #eeeeee;\n  padding : 20px 10px;\n}\n\n.memberform{\n  padding : 0 30px 30px 30px;\n}\n.fieldbook{\n  white-space: nowrap;\n}\n.member input:not(input[type=radio]), .com{\n  border: 1px solid #dadada;\n  padding: 15px;\n  width: 100%;\n  margin-bottom: 5px;\n  border-radius: 6px;\n}\n.bookbtn{\n  background-color: darkolivegreen;\n  color: white;\n  padding: 15px;\n  width: 100%;\n  margin-bottom: 5px;\n  border-radius: 6px;\n  font-weight: 700;\n  font-size: 15px;\n  border : 1px solid white;\n}\n.field{\n  margin :10px 0; /*상하로 좀 띄워주기*/\n  gap:10px;\n}\n\n.member b{\n  /* border: 1px solid #000; */\n  display: block; /*수직 정렬하기 */\n  margin-bottom: 5px;\n}\n#cat{\n  width : 60%;\n  height : auto;\n  margin : auto;\n  text-align: left;\n}\n.cattitle{\n  padding : 20px;\n  font-weight: 700;\n}\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}