{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive } from \"vue\";\nimport axios from \"axios\";\nimport store from \"@/scripts/store\";\nimport router from \"@/scripts/router\";\nimport Header from \"@/components/header/Header.vue\";\nexport default {\n  components: {\n    Header\n  },\n  // mounted(){\n  //   const naver_id_login = new window.naver_id_login(\"a4TEdRYQwTEos4Ljj4RU\", \"http://localhost:3000\");\n  //   const state = naver_id_login.getUniqState();\n  //   naver_id_login.setButton(\"white\", 2,40); // 버튼 설정\n  //   naver_id_login.setState(state);\n  //   naver_id_login.init_naver_id_login();\n  // },\n  methods: {\n    loginWithNaver() {\n      const naverLogin = new naver.LoginWithNaverId({\n        clientId: 'a4TEdRYQwTEos4Ljj4RU',\n        callbackUrl: 'http://localhost:3000',\n        isPopup: false,\n        callbackHandle: true\n      });\n      naverLogin.init();\n      naverLogin.getLoginStatus(status => {\n        if (status) {\n          // 사용자가 이미 로그인되어 있음; 여기에서 액세스 토큰을 가져올 수 있습니다\n          const accessToken = naverLogin.getAccessToken();\n          // 액세스 토큰을 확인 및 인증하기 위해 서버로 보냅니다\n          this.sendAccessTokenToServer(accessToken);\n        } else {\n          // 사용자가 로그인되어 있지 않음; 로그인 프로세스를 시작합니다\n          naverLogin.login();\n        }\n      });\n    },\n    sendAccessTokenToServer(accessToken) {\n      // 서버에 액세스 토큰을 보내기 위해 HTTP 요청을 수행합니다\n      // Axios 또는 다른 라이브러리를 사용하여 요청을 만들 수 있습니다\n      axios.post('/api/user/loginWithNaver', {\n        accessToken\n      }).then(response => {\n        // 서버의 응답을 처리합니다\n      }).catch(error => {\n        // 오류를 처리합니다\n      });\n    }\n  },\n  setup() {\n    const state = reactive({\n      form: {\n        email: \"\",\n        password: \"\"\n      }\n    });\n    const submit = () => {\n      axios.post(\"/api/user/login\", state.form).then(res => {\n        store.commit(\"setAccount\", res.data); // store 저장\n        if (res.data == 0) {\n          if (state.form.email == \"\") {\n            window.alert(\"이메일을 입력해주세요\");\n          } else if (state.form.password == \"\") {\n            window.alert(\"비밀번호를 입력해주세요\");\n          } else {\n            window.alert(\"이메일이나 비밀번호가 틀립니다\");\n            router.push({\n              path: \"/login\"\n            });\n          }\n        } else {\n          // console.log(res.data);\n          window.alert(\"로그인 하였습니다\");\n          router.push({\n            path: \"/\"\n          });\n        }\n      });\n    };\n    return {\n      state,\n      submit\n    };\n  }\n};","map":{"version":3,"names":["reactive","axios","store","router","Header","components","methods","loginWithNaver","naverLogin","naver","LoginWithNaverId","clientId","callbackUrl","isPopup","callbackHandle","init","getLoginStatus","status","accessToken","getAccessToken","sendAccessTokenToServer","login","post","then","response","catch","error","setup","state","form","email","password","submit","res","commit","data","window","alert","push","path"],"sources":["C:\\TeamProject\\VeganLoadMap\\src\\components\\user\\Login.vue"],"sourcesContent":["<template>\r\n  <Header/>\r\n  <br><br>\r\n  <div class=\"container\" id=\"container\">\r\n    <div class=\"form-container sign-in-container\">\r\n      <form action=\"#\">\r\n        <h1>Sign In</h1>\r\n        <div class=\"social-container\">\r\n          <a href=\"#\" class=\"social\"><div @click=\"loginWithNaver\" id=\"naver_id_login\"></div></a>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <a href=\"#\" class=\"social\"><i class=\"fa fa-google-plus\" aria-hidden=\"true\" @click=\"googleLoginBtn\"></i></a>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <a href=\"#\" class=\"social\"><i class=\"fa fa-comments\" aria-hidden=\"true\"></i></a>\r\n        </div>\r\n        <span>or use your account</span>\r\n        <input type=\"email\" placeholder=\"Email\" v-model=\"state.form.email\">\r\n        <input type=\"password\" placeholder=\"Password\" v-model=\"state.form.password\" /><br>\r\n        <button @click=\"submit()\">로그인</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"overlay-container\">\r\n      <div class=\"overlay\">\r\n        <div class=\"overlay-panel overlay-right\">\r\n          <h1>Welcome to VeganRoadMap!</h1>\r\n          <p>로그인 및 회원가입 후에 비건로드맵을 즐겨보세요!</p>\r\n          <button class=\"ghost\" id=\"signUp\" @click=\"$router.push('/join')\">회원가입</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {reactive} from \"vue\";\r\nimport axios from \"axios\";\r\nimport store from \"@/scripts/store\";\r\nimport router from \"@/scripts/router\";\r\nimport Header from \"@/components/header/Header.vue\";\r\n\r\nexport default {\r\n  components: {Header},\r\n  // mounted(){\r\n  //   const naver_id_login = new window.naver_id_login(\"a4TEdRYQwTEos4Ljj4RU\", \"http://localhost:3000\");\r\n  //   const state = naver_id_login.getUniqState();\r\n  //   naver_id_login.setButton(\"white\", 2,40); // 버튼 설정\r\n  //   naver_id_login.setState(state);\r\n  //   naver_id_login.init_naver_id_login();\r\n  // },\r\n  methods: {\r\n    loginWithNaver() {\r\n      const naverLogin = new naver.LoginWithNaverId({\r\n        clientId: 'a4TEdRYQwTEos4Ljj4RU',\r\n        callbackUrl: 'http://localhost:3000',\r\n        isPopup: false,\r\n        callbackHandle: true,\r\n      });\r\n\r\n      naverLogin.init();\r\n\r\n      naverLogin.getLoginStatus((status) => {\r\n        if (status) {\r\n          // 사용자가 이미 로그인되어 있음; 여기에서 액세스 토큰을 가져올 수 있습니다\r\n          const accessToken = naverLogin.getAccessToken();\r\n          // 액세스 토큰을 확인 및 인증하기 위해 서버로 보냅니다\r\n          this.sendAccessTokenToServer(accessToken);\r\n        } else {\r\n          // 사용자가 로그인되어 있지 않음; 로그인 프로세스를 시작합니다\r\n          naverLogin.login();\r\n        }\r\n      });\r\n    },\r\n\r\n    sendAccessTokenToServer(accessToken) {\r\n      // 서버에 액세스 토큰을 보내기 위해 HTTP 요청을 수행합니다\r\n      // Axios 또는 다른 라이브러리를 사용하여 요청을 만들 수 있습니다\r\n      axios\r\n          .post('/api/user/loginWithNaver', { accessToken })\r\n          .then((response) => {\r\n            // 서버의 응답을 처리합니다\r\n          })\r\n          .catch((error) => {\r\n            // 오류를 처리합니다\r\n          });\r\n    },\r\n  },\r\n  setup() {\r\n    const state = reactive({\r\n      form :{\r\n        email: \"\",\r\n        password: \"\"\r\n      }\r\n    })\r\n    const submit = () => {\r\n        axios.post(\"/api/user/login\", state.form).then((res)=> {\r\n          store.commit(\"setAccount\", res.data); // store 저장\r\n          if (res.data == 0) {\r\n            if (state.form.email == \"\") {\r\n              window.alert(\"이메일을 입력해주세요\");\r\n            } else if (state.form.password == \"\") {\r\n              window.alert(\"비밀번호를 입력해주세요\");\r\n            } else {\r\n              window.alert(\"이메일이나 비밀번호가 틀립니다\");\r\n              router.push({path: \"/login\"});\r\n            }\r\n          }else {\r\n            // console.log(res.data);\r\n            window.alert(\"로그인 하였습니다\");\r\n            router.push({path: \"/\"});\r\n          }\r\n        })\r\n    }\r\n    return {state, submit}\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:400,800');\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  background: #f6f5f7;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  font-family: 'Montserrat', sans-serif;\r\n  height: 100vh;\r\n  margin: -20px 0 50px;\r\n}\r\n\r\nh1 {\r\n  font-weight: bold;\r\n  margin: 0;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n  font-weight: 100;\r\n  line-height: 20px;\r\n  letter-spacing: 0.5px;\r\n  margin: 20px 0 30px;\r\n}\r\n\r\nspan {\r\n  font-size: 12px;\r\n}\r\n\r\na {\r\n  color: #333;\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  margin: 15px 0;\r\n}\r\n\r\nbutton {\r\n  border-radius: 20px;\r\n  border: 1px solid darkolivegreen;\r\n  background-color: darkolivegreen;\r\n  color: #FFFFFF;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  padding: 12px 45px;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  transition: transform 80ms ease-in;\r\n}\r\n\r\nbutton:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\nbutton:focus {\r\n  outline: none;\r\n}\r\n\r\nbutton.ghost {\r\n  background-color: transparent;\r\n  border-color: #FFFFFF;\r\n}\r\n\r\nform {\r\n  background-color: #FFFFFF;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 50px;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n\r\ninput {\r\n  background-color: #eee;\r\n  border: none;\r\n  padding: 12px 15px;\r\n  margin: 8px 0;\r\n  width: 100%;\r\n}\r\n\r\n.container {\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 14px 28px rgba(0,0,0,0.25),\r\n  0 10px 10px rgba(0,0,0,0.22);\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 768px;\r\n  max-width: 100%;\r\n  min-height: 480px;\r\n}\r\n\r\n.form-container {\r\n  position: absolute;\r\n  top: 0;\r\n  height: 100%;\r\n  transition: all 0.6s ease-in-out;\r\n}\r\n\r\n.sign-in-container {\r\n  left: 0;\r\n  width: 50%;\r\n  z-index: 2;\r\n}\r\n\r\n.container.right-panel-active .sign-in-container {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.sign-up-container {\r\n  left: 0;\r\n  width: 50%;\r\n  opacity: 0;\r\n  z-index: 1;\r\n}\r\n\r\n.container.right-panel-active .sign-up-container {\r\n  transform: translateX(100%);\r\n  opacity: 1;\r\n  z-index: 5;\r\n  animation: show 0.6s;\r\n}\r\n\r\n@keyframes show {\r\n  0%, 49.99% {\r\n    opacity: 0;\r\n    z-index: 1;\r\n  }\r\n\r\n  50%, 100% {\r\n    opacity: 1;\r\n    z-index: 5;\r\n  }\r\n}\r\n\r\n.overlay-container {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 50%;\r\n  width: 50%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  transition: transform 0.6s ease-in-out;\r\n  z-index: 100;\r\n}\r\n\r\n.container.right-panel-active .overlay-container{\r\n  transform: translateX(-100%);\r\n}\r\n\r\n.overlay {\r\n  background: #749a5b;\r\n  background: -webkit-linear-gradient(to right, #7b814e, #58723f);\r\n  background: linear-gradient(to right, #0a3627, #545d32);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: 0 0;\r\n  color: #FFFFFF;\r\n  position: relative;\r\n  left: -100%;\r\n  height: 100%;\r\n  width: 200%;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n}\r\n\r\n.container.right-panel-active .overlay {\r\n  transform: translateX(50%);\r\n}\r\n\r\n.overlay-panel {\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 40px;\r\n  text-align: center;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 50%;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n}\r\n\r\n.overlay-left {\r\n  transform: translateX(-20%);\r\n}\r\n\r\n.container.right-panel-active .overlay-left {\r\n  transform: translateX(0);\r\n}\r\n\r\n.overlay-right {\r\n  right: 0;\r\n  transform: translateX(0);\r\n}\r\n\r\n.container.right-panel-active .overlay-right {\r\n  transform: translateX(20%);\r\n}\r\n\r\n.social-container {\r\n  margin: 20px 0;\r\n}\r\n\r\n.social-container a {\r\n  border: 1px solid #DDDDDD;\r\n  border-radius: 50%;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 5px;\r\n  height: 40px;\r\n  width: 40px;\r\n}\r\n\r\nfooter {\r\n  background-color: #222;\r\n  color: #fff;\r\n  font-size: 14px;\r\n  bottom: 0;\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  text-align: center;\r\n  z-index: 999;\r\n}\r\n\r\nfooter p {\r\n  margin: 10px 0;\r\n}\r\n\r\nfooter i {\r\n  color: red;\r\n}\r\n\r\nfooter a {\r\n  color: #3c97bf;\r\n  text-decoration: none;\r\n}\r\n</style>"],"mappings":";AAiCA,SAAQA,QAAQ,QAAO,KAAK;AAC5B,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,KAAI,MAAO,iBAAiB;AACnC,OAAOC,MAAK,MAAO,kBAAkB;AACrC,OAAOC,MAAK,MAAO,gCAAgC;AAEnD,eAAe;EACbC,UAAU,EAAE;IAACD;EAAM,CAAC;EACpB;EACA;EACA;EACA;EACA;EACA;EACA;EACAE,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,MAAMC,UAAS,GAAI,IAAIC,KAAK,CAACC,gBAAgB,CAAC;QAC5CC,QAAQ,EAAE,sBAAsB;QAChCC,WAAW,EAAE,uBAAuB;QACpCC,OAAO,EAAE,KAAK;QACdC,cAAc,EAAE;MAClB,CAAC,CAAC;MAEFN,UAAU,CAACO,IAAI,CAAC,CAAC;MAEjBP,UAAU,CAACQ,cAAc,CAAEC,MAAM,IAAK;QACpC,IAAIA,MAAM,EAAE;UACV;UACA,MAAMC,WAAU,GAAIV,UAAU,CAACW,cAAc,CAAC,CAAC;UAC/C;UACA,IAAI,CAACC,uBAAuB,CAACF,WAAW,CAAC;QAC3C,OAAO;UACL;UACAV,UAAU,CAACa,KAAK,CAAC,CAAC;QACpB;MACF,CAAC,CAAC;IACJ,CAAC;IAEDD,uBAAuBA,CAACF,WAAW,EAAE;MACnC;MACA;MACAjB,KAAI,CACCqB,IAAI,CAAC,0BAA0B,EAAE;QAAEJ;MAAY,CAAC,EAChDK,IAAI,CAAEC,QAAQ,IAAK;QAClB;MAAA,CACD,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChB;MAAA,CACD,CAAC;IACR;EACF,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAI5B,QAAQ,CAAC;MACrB6B,IAAG,EAAG;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ;IACF,CAAC;IACD,MAAMC,MAAK,GAAIA,CAAA,KAAM;MACjB/B,KAAK,CAACqB,IAAI,CAAC,iBAAiB,EAAEM,KAAK,CAACC,IAAI,CAAC,CAACN,IAAI,CAAEU,GAAG,IAAI;QACrD/B,KAAK,CAACgC,MAAM,CAAC,YAAY,EAAED,GAAG,CAACE,IAAI,CAAC,EAAE;QACtC,IAAIF,GAAG,CAACE,IAAG,IAAK,CAAC,EAAE;UACjB,IAAIP,KAAK,CAACC,IAAI,CAACC,KAAI,IAAK,EAAE,EAAE;YAC1BM,MAAM,CAACC,KAAK,CAAC,aAAa,CAAC;UAC7B,OAAO,IAAIT,KAAK,CAACC,IAAI,CAACE,QAAO,IAAK,EAAE,EAAE;YACpCK,MAAM,CAACC,KAAK,CAAC,cAAc,CAAC;UAC9B,OAAO;YACLD,MAAM,CAACC,KAAK,CAAC,kBAAkB,CAAC;YAChClC,MAAM,CAACmC,IAAI,CAAC;cAACC,IAAI,EAAE;YAAQ,CAAC,CAAC;UAC/B;QACF,CAAC,MAAK;UACJ;UACAH,MAAM,CAACC,KAAK,CAAC,WAAW,CAAC;UACzBlC,MAAM,CAACmC,IAAI,CAAC;YAACC,IAAI,EAAE;UAAG,CAAC,CAAC;QAC1B;MACF,CAAC;IACL;IACA,OAAO;MAACX,KAAK;MAAEI;IAAM;EACvB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}