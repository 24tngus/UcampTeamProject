{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header2 = _resolveComponent(\"Header2\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header2), _createElementVNode(\"div\", null, [this.selectedReserve.seq === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \" 예약 등록 정보가 없습니다. \")) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" max 테이블 개수 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => this.selectedReserve.team = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, this.selectedReserve.team]]), _hoisted_2, _createTextVNode(\" max 인원 수 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => this.selectedReserve.people = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, this.selectedReserve.people]]), _hoisted_3, _createTextVNode(\" 예약 날짜 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.reserve.date = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.reserve.date]]), _hoisted_4, _hoisted_5, _createTextVNode(\" 08:00 ~ 10:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.toggleTime($data.reserve, 'time0810'))\n  }, _toDisplayString($data.reserve.time0810 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.reserve.time0810), 1 /* TEXT */), _hoisted_6, _createTextVNode(\" 10:00 ~ 12:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $options.toggleTime($data.reserve, 'time1012'))\n  }, _toDisplayString($data.reserve.time1012 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.reserve.time1012), 1 /* TEXT */), _hoisted_7, _createTextVNode(\" 12:00 ~ 14:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.toggleTime($data.reserve, 'time1214'))\n  }, _toDisplayString($data.reserve.time1214 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.reserve.time1214), 1 /* TEXT */), _hoisted_8, _createTextVNode(\" 14:00 ~ 16:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.toggleTime($data.reserve, 'time1416'))\n  }, _toDisplayString($data.reserve.time1416 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.reserve.time1416), 1 /* TEXT */), _hoisted_9, _createTextVNode(\" 16:00 ~ 18:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = $event => $options.toggleTime($data.reserve, 'time1618'))\n  }, _toDisplayString($data.reserve.time1618 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.reserve.time1618), 1 /* TEXT */), _hoisted_10, _createTextVNode(\" 18:00 ~ 20:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = $event => $options.toggleTime($data.reserve, 'time1820'))\n  }, _toDisplayString($data.reserve.time1820 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.reserve.time1820), 1 /* TEXT */), _hoisted_11, _createTextVNode(\" 20:00 ~ 22:00 \"), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = $event => $options.toggleTime($data.reserve, 'time2022'))\n  }, _toDisplayString($data.reserve.time2022 === 1 ? '해제' : '선택'), 1 /* TEXT */), _createTextVNode(_toDisplayString($data.reserve.time2022), 1 /* TEXT */), _hoisted_12, _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = $event => $options.updateReserve($data.reserve))\n  }, \"수정하기\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createVNode","_component_Header2","selectedReserve","seq","_createElementBlock","_hoisted_1","type","team","$event","_hoisted_2","people","_hoisted_3","$data","reserve","date","_hoisted_4","_hoisted_5","onClick","_cache","$options","toggleTime","time0810","_hoisted_6","time1012","_hoisted_7","time1214","_hoisted_8","time1416","_hoisted_9","time1618","_hoisted_10","time1820","_hoisted_11","time2022","_hoisted_12","updateReserve"],"sources":["/Users/soohykim/Desktop/front/src/pages/test.vue"],"sourcesContent":["<template>\n  <Header2/>\n  <div>\n\n    <div v-if=\"this.selectedReserve.seq === 0\">\n      예약 등록 정보가 없습니다.\n    </div>\n    max 테이블 개수 <input type=\"number\" v-model=\"this.selectedReserve.team\"><br>\n    max 인원 수 <input type=\"number\" v-model=\"this.selectedReserve.people\"><br>\n    예약 날짜 <input type=\"date\" v-model=\"reserve.date\"><br><br>\n    08:00 ~ 10:00 <button @click=\"toggleTime(reserve, 'time0810')\">{{ reserve.time0810 === 1 ? '해제' : '선택' }}</button>{{ reserve.time0810 }}<br>\n    10:00 ~ 12:00 <button @click=\"toggleTime(reserve, 'time1012')\">{{ reserve.time1012 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1012 }}<br>\n    12:00 ~ 14:00 <button @click=\"toggleTime(reserve, 'time1214')\">{{ reserve.time1214 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1214 }}<br>\n    14:00 ~ 16:00 <button @click=\"toggleTime(reserve, 'time1416')\">{{ reserve.time1416 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1416 }}<br>\n    16:00 ~ 18:00 <button @click=\"toggleTime(reserve, 'time1618')\">{{ reserve.time1618 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1618 }}<br>\n    18:00 ~ 20:00 <button @click=\"toggleTime(reserve, 'time1820')\">{{ reserve.time1820 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1820 }}<br>\n    20:00 ~ 22:00 <button @click=\"toggleTime(reserve, 'time2022')\">{{ reserve.time2022 === 1 ? '해제' : '선택' }}</button>{{ reserve.time2022 }}<br>\n    <button @click=\"updateReserve(reserve)\">수정하기</button>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Header2 from \"@/components/header/Header2.vue\";\nimport router from \"@/scripts/router\";\n\nexport default {\n  components: { Header2 },\n  data() {\n    return {\n      reserves: [],\n      reserve: {\n        seq: 0,\n        team: \"\",\n        people: \"\",\n        date: \"\",\n        time0810: 0,\n        time1012: 0,\n        time1214: 0,\n        time1416: 0,\n        time1618: 0,\n        time1820: 0,\n        time2022: 0,\n      },\n      selectedReserve: {},\n      selectedTeam: 0,\n      selectedPeople: 0,\n      selectedSeq: 0\n    };\n  },\n  created() {\n    this.reserve.date = new Date().toISOString().split('T')[0]; // 현재 날짜로 설정\n    this.fetchReserves(this.reserve.date);\n  },\n  methods: {\n    formatDate(date) {\n      const formattedDate = new Date(date).toISOString().split(\"T\")[0];\n      return formattedDate;\n    },\n    toggleTime(reserve, time) {\n      if (reserve[time] === 1) {\n        reserve[time] = 0;\n      } else {\n        for (let key in reserve) {\n          if (key.includes(\"time\") && key !== time) {\n            reserve[key] = 0;\n          }\n        }\n        reserve[time] = 1;\n      }\n      const selectedReserve = this.reserves.find((r) => r.seq === reserve.seq);\n      if (selectedReserve) {\n\n        this.selectedTeam = selectedReserve.team;\n        this.selectedPeople = selectedReserve.people;\n        this.selectedSeq = selectedReserve.seq;\n      }\n      this.fetchReserves(this.reserve.date);\n    },\n    updateReserve(reserve) {\n      reserve.seq = this.selectedReserve.seq;\n      reserve.team = this.selectedReserve.team;\n      reserve.people = this.selectedReserve.people;\n      axios\n          .put(`/api/reserve/set/update/${reserve.seq}`, reserve)\n          .then((response) => {\n            console.log(\"Reserve updated successfully\", response.data);\n            this.fetchReserves();\n          })\n          .catch((error) => {\n            console.error(\"Error updating reserve\", error);\n          });\n      alert(\"수정되었습니다.\");\n      router.push({path: \"/\"});\n    },\n    fetchReserves(date) {\n      const formattedDate = new Date(date).toISOString().split(\"T\")[0];\n      const checksetting = {\n        date: formattedDate,\n        time0810: this.reserve.time0810,\n        time1012: this.reserve.time1012,\n        time1214: this.reserve.time1214,\n        time1416: this.reserve.time1416,\n        time1618: this.reserve.time1618,\n        time1820: this.reserve.time1820,\n        time2022: this.reserve.time2022,\n        team: this.reserve.team,\n        people: this.reserve.people\n      };\n      console.log(\"예약\", JSON.stringify(checksetting));\n\n      axios\n          .get(\"/api/reservecheck\", {\n            params: checksetting,\n          })\n          .then((response) => {\n            this.selectedReserve = response.data;\n            console.log(\"팀\" + this.selectedReserve.team);\n            console.log(\"사람\" + this.selectedReserve.people);\n          })\n          .catch((error) => {\n            console.error(\"Error fetching reserves\", error);\n          });\n    },\n\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}