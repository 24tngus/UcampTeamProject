{"ast":null,"code":"import axios from \"axios\";\nimport Header2 from \"@/components/header/Header2.vue\";\n// import {reactive} from \"vue\";\n\nexport default {\n  components: {\n    Header2\n  },\n  data() {\n    return {\n      reserves: []\n    };\n  },\n  created() {\n    this.fetchReserves();\n  },\n  methods: {\n    formatDate(date) {\n      const formattedDate = new Date(date).toISOString().split('T')[0];\n      return formattedDate;\n    },\n    checkOtherTime(reserve, time) {\n      for (let key in reserve) {\n        if (key.includes('time') && key !== time && reserve[key] === 1) {\n          return true;\n        }\n      }\n      return false;\n    },\n    toggleTime(reserve, time) {\n      if (reserve[time] === 1) {\n        reserve[time] = 0;\n      } else {\n        for (let key in reserve) {\n          if (key.includes('time') && key !== time) {\n            reserve[key] = 0;\n          }\n        }\n        reserve[time] = 1;\n      }\n      const selectedReserve = this.reserves.find(r => r.seq === reserve.seq);\n      if (selectedReserve) {\n        // 선택된 예약의 team과 people 값을 즉시 불러옴\n        this.selectedTeam = selectedReserve.team;\n        this.selectedPeople = selectedReserve.people;\n      }\n    },\n    updateReserve(reserve) {\n      axios.put(`/api/reserve/set/update/${reserve.seq}`, reserve).then(response => {\n        console.log(\"Reserve updated successfully\", response.data);\n        this.fetchReserves();\n      }).catch(error => {\n        console.error(\"Error updating reserve\", error);\n      });\n    },\n    fetchReserves() {\n      axios.get(\"/api/reserve\").then(response => {\n        this.reserves = response.data;\n        this.reserves.forEach(reserve => {\n          reserve.date = new Date(reserve.date).toISOString().split('T')[0];\n        });\n      }).catch(error => {\n        console.error(\"Error fetching reserves\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Header2","components","data","reserves","created","fetchReserves","methods","formatDate","date","formattedDate","Date","toISOString","split","checkOtherTime","reserve","time","key","includes","toggleTime","selectedReserve","find","r","seq","selectedTeam","team","selectedPeople","people","updateReserve","put","then","response","console","log","catch","error","get","forEach"],"sources":["C:\\TeamProject\\VeganLoadMap\\src\\components\\reserve\\ReserveUpdate.vue"],"sourcesContent":["<template>\r\n  <Header2/>\r\n  <div>\r\n    <ul>\r\n      <li v-for=\"reserve in reserves\" :key=\"reserve.seq\">\r\n        예약 세팅 고유 번호 {{reserve.seq}}<br>\r\n        가게고유번호 {{ reserve.shopseq }}<br>\r\n        max 테이블 개수 <input type=\"number\" v-model=\"selectedTeam\"><br>\r\n        max 인원 수 <input type=\"number\" v-model=\"selectedPeople\"><br>\r\n        예약 날짜 <input type=\"date\" v-model=\"reserve.date\"><br><br>\r\n        08:00 ~ 10:00 <button @click=\"toggleTime(reserve, 'time0810')\">{{ reserve.time0810 === 1 ? '해제' : '선택' }}</button>{{ reserve.time0810 }}<br>\r\n        10:00 ~ 12:00 <button @click=\"toggleTime(reserve, 'time1012')\">{{ reserve.time1012 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1012 }}<br>\r\n        12:00 ~ 14:00 <button @click=\"toggleTime(reserve, 'time1214')\">{{ reserve.time1214 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1214 }}<br>\r\n        14:00 ~ 16:00 <button @click=\"toggleTime(reserve, 'time1416')\">{{ reserve.time1416 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1416 }}<br>\r\n        16:00 ~ 18:00 <button @click=\"toggleTime(reserve, 'time1618')\">{{ reserve.time1618 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1618 }}<br>\r\n        18:00 ~ 20:00 <button @click=\"toggleTime(reserve, 'time1820')\">{{ reserve.time1820 === 1 ? '해제' : '선택' }}</button>{{ reserve.time1820 }}<br>\r\n        20:00 ~ 22:00 <button @click=\"toggleTime(reserve, 'time2022')\">{{ reserve.time2022 === 1 ? '해제' : '선택' }}</button>{{ reserve.time2022 }}<br>\r\n        <button @click=\"updateReserve(reserve)\">수정하기</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Header2 from \"@/components/header/Header2.vue\";\r\n// import {reactive} from \"vue\";\r\n\r\nexport default {\r\n  components: {Header2},\r\n  data() {\r\n    return {\r\n      reserves: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchReserves();\r\n  },\r\n  methods: {\r\n    formatDate(date) {\r\n      const formattedDate = new Date(date).toISOString().split('T')[0];\r\n      return formattedDate;\r\n    },\r\n    checkOtherTime(reserve, time) {\r\n      for (let key in reserve) {\r\n        if (key.includes('time') && key !== time && reserve[key] === 1) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    toggleTime(reserve, time) {\r\n      if (reserve[time] === 1) {\r\n        reserve[time] = 0;\r\n      } else {\r\n        for (let key in reserve) {\r\n          if (key.includes('time') && key !== time) {\r\n            reserve[key] = 0;\r\n          }\r\n        }\r\n        reserve[time] = 1;\r\n      }\r\n      const selectedReserve = this.reserves.find((r) => r.seq === reserve.seq);\r\n      if (selectedReserve) {\r\n        // 선택된 예약의 team과 people 값을 즉시 불러옴\r\n        this.selectedTeam = selectedReserve.team;\r\n        this.selectedPeople = selectedReserve.people;\r\n      }\r\n    },\r\n\r\n    updateReserve(reserve) {\r\n      axios\r\n          .put(`/api/reserve/set/update/${reserve.seq}`, reserve)\r\n          .then((response) => {\r\n            console.log(\"Reserve updated successfully\", response.data);\r\n            this.fetchReserves();\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error updating reserve\", error);\r\n          });\r\n    },\r\n\r\n    fetchReserves() {\r\n      axios\r\n          .get(\"/api/reserve\")\r\n          .then((response) => {\r\n            this.reserves = response.data;\r\n            this.reserves.forEach(reserve => {\r\n              reserve.date = new Date(reserve.date).toISOString().split('T')[0];\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching reserves\", error);\r\n          });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css?family=Nanum+Gothic:700,800&subset=korean');\r\n\r\n*,html,body{\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  color: #333;\r\n  font-size: 13px;\r\n  font-family: 'Nanum Gothic', sans-serif, '굴림', 'gulim'\r\n}\r\n\r\n#wrapper {\r\n  background: #f1f1f1;\r\n}\r\n#container{\r\n  position: relative;\r\n  max-width: 90%;\r\n  min-width: 60%;\r\n  margin: 0 0 0 10%;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  align-items: center; /* 세로 중앙 정렬 */\r\n}\r\n\r\n.input-button-container {\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center; /* 세로 중앙 정렬 */\r\n}\r\n\r\n.double {\r\n  background-color: darkolivegreen;\r\n  color: white;\r\n  padding: 15px;\r\n  width: 30%;\r\n  margin-left: 10px;\r\n  margin-bottom: 5px;\r\n  border-radius: 6px;\r\n  font-weight: 700;\r\n  font-size: 15px;\r\n  border : 1px solid white;\r\n}\r\n\r\n.datepicker-container {\r\n  width: 40%;\r\n  padding: 30px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.datepicker {\r\n  padding : 20px 5px;\r\n}\r\n\r\n.formatDate {\r\n  margin-top: 10px;\r\n}\r\n.fieldbook div{\r\n  display: flex;\r\n  gap:10px;\r\n}\r\n.field{\r\n  gap:10px;\r\n}\r\n.utime {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n}\r\n\r\n.time {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.time button {\r\n  margin: 0;\r\n}\r\n#timebtn{\r\n  padding : 10px;\r\n  border-radius: 8px;\r\n  border : 3px solid lightgray;\r\n}\r\n.memberform input:not(input[type=radio]){\r\n  border: 1px solid #dadada;\r\n  padding: 15px;\r\n  width: 100%;\r\n  margin-bottom: 5px;\r\n  border-radius: 6px;\r\n}\r\n.memberform{\r\n  padding : 0 30px 30px 30px;\r\n}\r\n.bookbtn{\r\n  background-color: darkolivegreen;\r\n  color: white;\r\n  padding: 15px;\r\n  width: 100%;\r\n  margin-bottom: 5px;\r\n  border-radius: 6px;\r\n  font-weight: 700;\r\n  font-size: 15px;\r\n  border : 1px solid white;\r\n}\r\n#cat{\r\n  width : 60%;\r\n  height : auto;\r\n  margin : auto;\r\n  text-align: left;\r\n}\r\n.cattitle{\r\n  padding : 20px;\r\n  font-weight: 700;\r\n}\r\n</style>"],"mappings":"AAwBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,OAAM,MAAO,iCAAiC;AACrD;;AAEA,eAAe;EACbC,UAAU,EAAE;IAACD;EAAO,CAAC;EACrBE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,MAAMC,aAAY,GAAI,IAAIC,IAAI,CAACF,IAAI,CAAC,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAChE,OAAOH,aAAa;IACtB,CAAC;IACDI,cAAcA,CAACC,OAAO,EAAEC,IAAI,EAAE;MAC5B,KAAK,IAAIC,GAAE,IAAKF,OAAO,EAAE;QACvB,IAAIE,GAAG,CAACC,QAAQ,CAAC,MAAM,KAAKD,GAAE,KAAMD,IAAG,IAAKD,OAAO,CAACE,GAAG,MAAM,CAAC,EAAE;UAC9D,OAAO,IAAI;QACb;MACF;MACA,OAAO,KAAK;IACd,CAAC;IACDE,UAAUA,CAACJ,OAAO,EAAEC,IAAI,EAAE;MACxB,IAAID,OAAO,CAACC,IAAI,MAAM,CAAC,EAAE;QACvBD,OAAO,CAACC,IAAI,IAAI,CAAC;MACnB,OAAO;QACL,KAAK,IAAIC,GAAE,IAAKF,OAAO,EAAE;UACvB,IAAIE,GAAG,CAACC,QAAQ,CAAC,MAAM,KAAKD,GAAE,KAAMD,IAAI,EAAE;YACxCD,OAAO,CAACE,GAAG,IAAI,CAAC;UAClB;QACF;QACAF,OAAO,CAACC,IAAI,IAAI,CAAC;MACnB;MACA,MAAMI,eAAc,GAAI,IAAI,CAAChB,QAAQ,CAACiB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAE,KAAMR,OAAO,CAACQ,GAAG,CAAC;MACxE,IAAIH,eAAe,EAAE;QACnB;QACA,IAAI,CAACI,YAAW,GAAIJ,eAAe,CAACK,IAAI;QACxC,IAAI,CAACC,cAAa,GAAIN,eAAe,CAACO,MAAM;MAC9C;IACF,CAAC;IAEDC,aAAaA,CAACb,OAAO,EAAE;MACrBf,KAAI,CACC6B,GAAG,CAAE,2BAA0Bd,OAAO,CAACQ,GAAI,EAAC,EAAER,OAAO,EACrDe,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC5B,IAAI,CAAC;QAC1D,IAAI,CAACG,aAAa,CAAC,CAAC;MACtB,CAAC,EACA4B,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACR,CAAC;IAED7B,aAAaA,CAAA,EAAG;MACdN,KAAI,CACCoC,GAAG,CAAC,cAAc,EAClBN,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAAC3B,QAAO,GAAI2B,QAAQ,CAAC5B,IAAI;QAC7B,IAAI,CAACC,QAAQ,CAACiC,OAAO,CAACtB,OAAM,IAAK;UAC/BA,OAAO,CAACN,IAAG,GAAI,IAAIE,IAAI,CAACI,OAAO,CAACN,IAAI,CAAC,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC;MACJ,CAAC,EACAqB,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACR;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}