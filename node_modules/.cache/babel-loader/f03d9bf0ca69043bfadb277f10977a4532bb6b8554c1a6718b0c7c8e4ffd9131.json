{"ast":null,"code":"import Header from \"@/components/header/Header.vue\";\nimport { initializeApp } from 'firebase/app';\nimport { onAuthStateChanged, signInWithEmailAndPassword, getAuth } from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD8_47eYq7NsRyXvPORMDy3Fi2trcJop0M\",\n  authDomain: \"veganLoadMap.firebaseapp.com\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app, {/* extra options */});\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      document.getElementById(\"message\").innerHTML = \"Welcome, \" + user.email;\n    } else {\n      document.getElementById(\"message\").innerHTML = \"No user signed in.\";\n    }\n  });\n  signIn();\n});\nfunction signIn() {\n  const email = \"greenby4328@gmail.com\";\n  const password = \"arisue02!\";\n  signInWithEmailAndPassword(auth, email, password).catch(error => {\n    document.getElementById(\"message\").innerHTML = error.message;\n  });\n}\nexport default {\n  components: {\n    Header\n  },\n  name: \"googole\",\n  methods: {\n    googleLoginBtn() {\n      window.gapi.signin2.render('my-signin2', {\n        scope: 'profile email',\n        width: 240,\n        height: 50,\n        longtitle: true,\n        theme: 'dark',\n        onsuccess: this.onSuccess,\n        onfailure: this.onFailure\n      });\n      setTimeout(function () {\n        document.querySelector('.abcRioButton').click();\n      }, 1500);\n    },\n    async onSuccess(googleUser) {\n      const user_join_type = \"g\";\n      const googleEmail = googleUser.getBasicProfile().getEmail();\n      console.log(googleEmail);\n      const res = await fetch('https://123.121.123.1/api/sns_signup_check', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: `${googleEmail}`,\n          user_join_type: user_join_type\n        })\n      });\n      const data = await res.json();\n      this.checkSnSLogin(data, googleEmail, user_join_type);\n    },\n    onFailure(error) {\n      console.log(error);\n    }\n  }\n};","map":{"version":3,"names":["Header","initializeApp","onAuthStateChanged","signInWithEmailAndPassword","getAuth","firebaseConfig","apiKey","authDomain","app","auth","document","addEventListener","user","getElementById","innerHTML","email","signIn","password","catch","error","message","components","name","methods","googleLoginBtn","window","gapi","signin2","render","scope","width","height","longtitle","theme","onsuccess","onSuccess","onfailure","onFailure","setTimeout","querySelector","click","googleUser","user_join_type","googleEmail","getBasicProfile","getEmail","console","log","res","fetch","method","headers","body","JSON","stringify","data","json","checkSnSLogin"],"sources":["C:\\VeganLoadMap\\src\\pages\\User.vue"],"sourcesContent":["<template>\r\n  <Header/>\r\n  <div class=\"form-signin w-100 m-auto\">\r\n    <button class=\"btn\" @click=\"$router.push('/login')\">사용자 로그인</button> &nbsp;\r\n    <button class=\"btn\" @click=\"$router.push('/login2')\">판매자 로그인</button>\r\n    <!-- 구글 로그인 -->\r\n    <section class=\"googole\">\r\n      <button class=\"btn test\" @click=\"googleLoginBtn\">구글 로그인</button>\r\n      <div id=\"my-signin2\" style=\"display: none\"></div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"@/components/header/Header.vue\";\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  onAuthStateChanged,\r\n  signInWithEmailAndPassword,\r\n  getAuth\r\n} from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD8_47eYq7NsRyXvPORMDy3Fi2trcJop0M\",\r\n  authDomain: \"veganLoadMap.firebaseapp.com\"\r\n};\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app, {/* extra options */ });\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  onAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n      document.getElementById(\"message\").innerHTML = \"Welcome, \" + user.email;\r\n    }\r\n    else {\r\n      document.getElementById(\"message\").innerHTML = \"No user signed in.\";\r\n    }\r\n  });\r\n  signIn();\r\n});\r\n\r\nfunction signIn() {\r\n  const email = \"greenby4328@gmail.com\";\r\n  const password = \"arisue02!\";\r\n  signInWithEmailAndPassword(auth, email, password)\r\n      .catch((error) => {\r\n        document.getElementById(\"message\").innerHTML = error.message;\r\n      });\r\n}\r\nexport default {\r\n  components: {Header},\r\n\r\n  name: \"googole\",\r\n  methods: {\r\n    googleLoginBtn() {\r\n      window.gapi.signin2.render('my-signin2', {\r\n        scope: 'profile email',\r\n        width: 240,\r\n        height: 50,\r\n        longtitle: true,\r\n        theme: 'dark',\r\n        onsuccess: this.onSuccess,\r\n        onfailure: this.onFailure,\r\n      });\r\n      setTimeout(function () {\r\n        document.querySelector('.abcRioButton').click();\r\n      }, 1500)\r\n    },\r\n    async onSuccess(googleUser) {\r\n      const user_join_type = \"g\"\r\n      const googleEmail = googleUser.getBasicProfile().getEmail();\r\n      console.log(googleEmail)\r\n\r\n      const res = await fetch('https://123.121.123.1/api/sns_signup_check', {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: `${googleEmail}`,\r\n          user_join_type: user_join_type\r\n        }),\r\n      })\r\n\r\n      const data = await res.json();\r\n      this.checkSnSLogin(data, googleEmail, user_join_type);\r\n    },\r\n    onFailure(error) {\r\n      console.log(error);\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form-signin {\r\n  max-width: 330px;\r\n  padding: 1rem;\r\n}\r\n\r\n.btn {\r\n  background-color: #24855b;\r\n  color: #ffffff;\r\n}\r\n\r\n.form-signin .form-floating:focus-within {\r\n  z-index: 2;\r\n}\r\n\r\n</style>"],"mappings":"AAcA,OAAOA,MAAK,MAAO,gCAAgC;AACnD,SAASC,aAAY,QAAS,cAAc;AAC5C,SACEC,kBAAkB,EAClBC,0BAA0B,EAC1BC,OAAM,QACD,eAAe;AAEtB,MAAMC,cAAa,GAAI;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE;AACd,CAAC;AACD,MAAMC,GAAE,GAAIP,aAAa,CAACI,cAAc,CAAC;AACzC,MAAMI,IAAG,GAAIL,OAAO,CAACI,GAAG,EAAE,CAAC,oBAAqB,CAAC;AAEjDE,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClDT,kBAAkB,CAACO,IAAI,EAAGG,IAAI,IAAK;IACjC,IAAIA,IAAI,EAAE;MACRF,QAAQ,CAACG,cAAc,CAAC,SAAS,CAAC,CAACC,SAAQ,GAAI,WAAU,GAAIF,IAAI,CAACG,KAAK;IACzE,OACK;MACHL,QAAQ,CAACG,cAAc,CAAC,SAAS,CAAC,CAACC,SAAQ,GAAI,oBAAoB;IACrE;EACF,CAAC,CAAC;EACFE,MAAM,CAAC,CAAC;AACV,CAAC,CAAC;AAEF,SAASA,MAAMA,CAAA,EAAG;EAChB,MAAMD,KAAI,GAAI,uBAAuB;EACrC,MAAME,QAAO,GAAI,WAAW;EAC5Bd,0BAA0B,CAACM,IAAI,EAAEM,KAAK,EAAEE,QAAQ,EAC3CC,KAAK,CAAEC,KAAK,IAAK;IAChBT,QAAQ,CAACG,cAAc,CAAC,SAAS,CAAC,CAACC,SAAQ,GAAIK,KAAK,CAACC,OAAO;EAC9D,CAAC,CAAC;AACR;AACA,eAAe;EACbC,UAAU,EAAE;IAACrB;EAAM,CAAC;EAEpBsB,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACfC,MAAM,CAACC,IAAI,CAACC,OAAO,CAACC,MAAM,CAAC,YAAY,EAAE;QACvCC,KAAK,EAAE,eAAe;QACtBC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE,IAAI;QACfC,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE,IAAI,CAACC,SAAS;QACzBC,SAAS,EAAE,IAAI,CAACC;MAClB,CAAC,CAAC;MACFC,UAAU,CAAC,YAAY;QACrB5B,QAAQ,CAAC6B,aAAa,CAAC,eAAe,CAAC,CAACC,KAAK,CAAC,CAAC;MACjD,CAAC,EAAE,IAAI;IACT,CAAC;IACD,MAAML,SAASA,CAACM,UAAU,EAAE;MAC1B,MAAMC,cAAa,GAAI,GAAE;MACzB,MAAMC,WAAU,GAAIF,UAAU,CAACG,eAAe,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAC3DC,OAAO,CAACC,GAAG,CAACJ,WAAW;MAEvB,MAAMK,GAAE,GAAI,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBvC,KAAK,EAAG,GAAE4B,WAAY,EAAC;UACvBD,cAAc,EAAEA;QAClB,CAAC;MACH,CAAC;MAED,MAAMa,IAAG,GAAI,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7B,IAAI,CAACC,aAAa,CAACF,IAAI,EAAEZ,WAAW,EAAED,cAAc,CAAC;IACvD,CAAC;IACDL,SAASA,CAAClB,KAAK,EAAE;MACf2B,OAAO,CAACC,GAAG,CAAC5B,KAAK,CAAC;IACpB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}