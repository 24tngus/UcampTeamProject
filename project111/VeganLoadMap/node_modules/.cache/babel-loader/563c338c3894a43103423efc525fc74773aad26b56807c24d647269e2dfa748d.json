{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      reviews: [],\n      nickname: '',\n      newReview: {\n        seq: '',\n        storeid: '',\n        content: '',\n        image: ''\n      }\n    };\n  },\n  created() {\n    this.storename = router.currentRoute.value.params.valu2;\n    this.fetchReview();\n  },\n  methods: {\n    fetchReview() {\n      const storename = this.$route.query.storename;\n      const seq = this.$route.query.seq;\n      console.log(\"seq : \" + seq);\n      axios.get(\"/api/review/list\", {\n        params: {\n          storename: storename // 이 부분에서 해당 데이터를 전달합니다.\n        }\n      }).then(response => {\n        this.reviews = response.data.reviewList;\n        this.nickname = response.data.nickname;\n      }).catch(error => {\n        console.error(\"Error fetching reviews\", error);\n      });\n    },\n    uploadImg() {\n      var image = this.$refs['image'].files[0];\n      const url = URL.createObjectURL(image);\n      this.image = url;\n      this.newReview.image = this.image;\n      console.log(url);\n      console.log(this.image);\n    },\n    addReview() {\n      axios.post(\"/api/review/insert\", this.newReview).then(response => {\n        console.log(\"Review added successfully\", response);\n        this.fetchReview(); // Fetch reviews again to get the updated list\n        this.newReview = {\n          storeid: '',\n          content: '',\n          image: ''\n        };\n        alert(\"리뷰가 등록되었습니다.\");\n      }).catch(error => {\n        console.error(\"Error adding review\", error);\n      });\n    },\n    deleteReview(review) {\n      axios.delete(`/api/review/delete/${review.seq}`) // Assuming seq is the identifier for the review\n      .then(() => {\n        this.fetchReview();\n      }).catch(error => {\n        console.error(\"Error delete review\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","reviews","nickname","newReview","seq","storeid","content","image","created","storename","router","currentRoute","value","params","valu2","fetchReview","methods","$route","query","console","log","get","then","response","reviewList","catch","error","uploadImg","$refs","files","url","URL","createObjectURL","addReview","post","alert","deleteReview","review","delete"],"sources":["C:\\Users\\seokhyeon\\Desktop\\project111\\VeganLoadMap\\src\\components\\review\\Review.vue"],"sourcesContent":["<template>\n  <header>Review</header>\n  <div id=\"reviewContainer\" class=\"container\" style=\"margin-left: -3px\">\n    <div v-for=\"review in reviews\" :key=\"review.seq\" class=\"review\">\n      <input type=\"hidden\" v-model=\"review.seq\"/>\n      <input type=\"hidden\" v-model=\"review.storeid\"/>\n\n      <div class=\"review-photo\">\n        <img v-bind:src=\"review.image\">\n      </div>\n\n      <div class=\"review-box\">\n\n        <div class=\"review-author\">\n          <p><strong>{{ review.writer }} &nbsp;</strong>\n            <template v-if=\"review.star === 1\">\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n            </template>\n            <template v-else-if=\"review.star === 2\">\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n            </template>\n            <template v-else-if=\"review.star === 3\">\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n            </template>\n            <template v-else-if=\"review.star === 4\">\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n            </template>\n            <template v-else-if=\"review.star === 5\">\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n              <i class=\"fa fa-star\" aria-hidden=\"true\"></i>\n            </template>\n          </p>\n        </div>\n\n        <div class=\"review-comment\">\n          <p>{{ review.content }}</p>\n        </div>\n      </div>\n      <router-link :to=\"{ name: 'review_update', params: { value: review.seq } }\"><button v-if=\"review.writer === nickname\" type=\"button\">수정</button></router-link>\n\n      <button v-if=\"review.writer === nickname\" type=\"button\" @click=\"deleteReview(review)\">삭제</button>\n    </div>\n\n  </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      reviews: [],\n      nickname: '',\n      newReview: {\n        seq: '',\n        storeid: '',\n        content: '',\n        image: '',\n      },\n\n    };\n  },\n  created() {\n    this.storename = router.currentRoute.value.params.valu2;\n    this.fetchReview();\n  },\n  methods: {\n    fetchReview() {\n      const storename = this.$route.query.storename;\n      const seq = this.$route.query.seq;\n      console.log(\"seq : \"+seq);\n      axios\n          .get(\"/api/review/list\", {\n            params: {\n              storename: storename // 이 부분에서 해당 데이터를 전달합니다.\n            }\n          })\n          .then((response) => {\n            this.reviews = response.data.reviewList;\n            this.nickname = response.data.nickname;\n          })\n          .catch((error) => {\n            console.error(\"Error fetching reviews\", error);\n          });\n    },uploadImg() {\n      var image = this.$refs['image'].files[0]\n      const url = URL.createObjectURL(image)\n      this.image = url\n      this.newReview.image = this.image;\n      console.log(url)\n      console.log(this.image)\n    },\n    addReview() {\n      axios\n          .post(\"/api/review/insert\", this.newReview)\n          .then((response) => {\n            console.log(\"Review added successfully\", response);\n            this.fetchReview(); // Fetch reviews again to get the updated list\n            this.newReview = {\n              storeid: '',\n              content: '',\n              image: '',\n            };\n            alert(\"리뷰가 등록되었습니다.\");\n          })\n          .catch((error) => {\n            console.error(\"Error adding review\", error);\n          });\n    },\n    deleteReview(review) {\n      axios\n          .delete(`/api/review/delete/${review.seq}`) // Assuming seq is the identifier for the review\n          .then(() => {\n            this.fetchReview();\n          })\n          .catch((error) => {\n            console.error(\"Error delete review\", error);\n          });\n    },\n  },\n};\n</script>\n<style scoped>\n* {\n  box-sizing: border-box;\n}\n.fa.fa-star{\n  color:#FEC902;\n}\nheader {\n  width: 80%;\n  font-size: 2em;\n  text-align: center;\n  background: #2ecc71;\n  color: #fff;\n  margin: 0 auto;\n  padding: 0.5em;\n}\n\nbody {\n  max-width: 1024px;\n  margin: 20px auto;\n  font-size: 16px;\n  font-family: 'Poppins', sans-serif;\n}\n\nimg {\n  max-width: 100%;\n  display: block;\n}\n\np {\n  margin: 0;\n}\n\nlabel {\n  width: 15%;\n  margin: 10px 1% 0 0;\n  display: inline-block;\n  float: left;\n}\n\ninput[type=\"text\"] {\n  width: 84%;\n  margin: 10px 0;\n  height: 40px;\n  border: none;\n  background: #F6F6F6;\n  padding: 1em;\n}\n\ntextarea {\n  width: 84%;\n  border: none;\n  background: #F6F6F6;\n  margin: 10px auto;\n  height: 100px;\n  padding: 1em;\n  border-radius: 20px;\n  text-align: center;\n\n}\n\nbutton {\n  float: right;\n  width: 20%;\n  height: 40px;\n  border: none;\n  background: #2ecc71;\n  font-size: 16px;\n  color: white;\n}\n\n.review {\n  width: 100%;\n  display: inline-block;\n  margin: 10px 0;\n}\n\n.review-photo {\n  height: 80px;\n  width: 80px;\n  display: inline-block;\n  float: left;\n  margin-right: 3em;\n}\n\n.review-box {\n  float: left;\n  display: inline-block;\n  width: 87.5%;\n  background: #F6F6F6;\n  padding: 1.5em;\n  position: relative;\n}\n\n.review-box:after, .review-box:before {\n  right: 100%;\n  top: 10%;\n  border: solid transparent;\n  content: \" \";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.review-box:after {\n  border-right-color: #F6F6F6;\n  border-width: 25px;\n}\n\n.review-comment {\n  color: #9A9999;\n}\n\n.review-date {\n  color: #C7C7C7;\n}\n\n.review-author {\n  color: #C7C7C7;\n}\n\n.review-author strong {\n  color: black;\n}\n</style>"],"mappings":";;;AAuDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE;QACTC,GAAG,EAAE,EAAE;QACPC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,EAAE;QACXC,KAAK,EAAE;MACT;IAEF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAQ,GAAIC,MAAM,CAACC,YAAY,CAACC,KAAK,CAACC,MAAM,CAACC,KAAK;IACvD,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACPD,WAAWA,CAAA,EAAG;MACZ,MAAMN,SAAQ,GAAI,IAAI,CAACQ,MAAM,CAACC,KAAK,CAACT,SAAS;MAC7C,MAAML,GAAE,GAAI,IAAI,CAACa,MAAM,CAACC,KAAK,CAACd,GAAG;MACjCe,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAChB,GAAG,CAAC;MACzBL,KAAI,CACCsB,GAAG,CAAC,kBAAkB,EAAE;QACvBR,MAAM,EAAE;UACNJ,SAAS,EAAEA,SAAQ,CAAE;QACvB;MACF,CAAC,EACAa,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACtB,OAAM,GAAIsB,QAAQ,CAACvB,IAAI,CAACwB,UAAU;QACvC,IAAI,CAACtB,QAAO,GAAIqB,QAAQ,CAACvB,IAAI,CAACE,QAAQ;MACxC,CAAC,EACAuB,KAAK,CAAEC,KAAK,IAAK;QAChBP,OAAO,CAACO,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACR,CAAC;IAACC,SAASA,CAAA,EAAG;MACZ,IAAIpB,KAAI,GAAI,IAAI,CAACqB,KAAK,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC,CAAC;MACvC,MAAMC,GAAE,GAAIC,GAAG,CAACC,eAAe,CAACzB,KAAK;MACrC,IAAI,CAACA,KAAI,GAAIuB,GAAE;MACf,IAAI,CAAC3B,SAAS,CAACI,KAAI,GAAI,IAAI,CAACA,KAAK;MACjCY,OAAO,CAACC,GAAG,CAACU,GAAG;MACfX,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,KAAK;IACxB,CAAC;IACD0B,SAASA,CAAA,EAAG;MACVlC,KAAI,CACCmC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC/B,SAAS,EACzCmB,IAAI,CAAEC,QAAQ,IAAK;QAClBJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEG,QAAQ,CAAC;QAClD,IAAI,CAACR,WAAW,CAAC,CAAC,EAAE;QACpB,IAAI,CAACZ,SAAQ,GAAI;UACfE,OAAO,EAAE,EAAE;UACXC,OAAO,EAAE,EAAE;UACXC,KAAK,EAAE;QACT,CAAC;QACD4B,KAAK,CAAC,cAAc,CAAC;MACvB,CAAC,EACAV,KAAK,CAAEC,KAAK,IAAK;QAChBP,OAAO,CAACO,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CAAC;IACR,CAAC;IACDU,YAAYA,CAACC,MAAM,EAAE;MACnBtC,KAAI,CACCuC,MAAM,CAAE,sBAAqBD,MAAM,CAACjC,GAAI,EAAC,EAAE;MAAA,CAC3CkB,IAAI,CAAC,MAAM;QACV,IAAI,CAACP,WAAW,CAAC,CAAC;MACpB,CAAC,EACAU,KAAK,CAAEC,KAAK,IAAK;QAChBP,OAAO,CAACO,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CAAC;IACR;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}