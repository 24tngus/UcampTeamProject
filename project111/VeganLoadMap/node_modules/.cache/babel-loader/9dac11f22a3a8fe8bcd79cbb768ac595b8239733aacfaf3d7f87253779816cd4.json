{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-903d02a2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, \"Review\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  id: \"reviewContainer\",\n  class: \"container\",\n  style: {\n    \"margin-left\": \"-3px\"\n  }\n};\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = {\n  class: \"review-photo\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"review-box\"\n};\nconst _hoisted_8 = {\n  class: \"review-author\"\n};\nconst _hoisted_9 = {\n  class: \"review-comment\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  type: \"button\"\n};\nconst _hoisted_11 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.reviews, review => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: review.seq,\n      class: \"review\"\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"hidden\",\n      \"onUpdate:modelValue\": $event => review.seq = $event\n    }, null, 8 /* PROPS */, _hoisted_3), [[_vModelText, review.seq]]), _withDirectives(_createElementVNode(\"input\", {\n      type: \"hidden\",\n      \"onUpdate:modelValue\": $event => review.storeid = $event\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelText, review.storeid]]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n      src: review.image\n    }, null, 8 /* PROPS */, _hoisted_6)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, [_createElementVNode(\"strong\", null, _toDisplayString(review.writer), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"p\", null, _toDisplayString(review.content), 1 /* TEXT */)])]), _createVNode(_component_router_link, {\n      to: {\n        name: 'review_update',\n        params: {\n          value: review.seq\n        }\n      }\n    }, {\n      default: _withCtx(() => [review.writer === $data.nickname ? (_openBlock(), _createElementBlock(\"button\", _hoisted_10, \"수정\")) : _createCommentVNode(\"v-if\", true)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), review.writer === $data.nickname ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      type: \"button\",\n      onClick: $event => $options.deleteReview(review)\n    }, \"삭제\", 8 /* PROPS */, _hoisted_11)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","id","class","style","type","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","_renderList","$data","reviews","review","key","seq","$event","storeid","_hoisted_5","src","image","_hoisted_7","_hoisted_8","_toDisplayString","writer","_hoisted_9","content","_createVNode","_component_router_link","to","name","params","value","nickname","_hoisted_10","onClick","$options","deleteReview","_hoisted_11"],"sources":["C:\\Users\\seokhyeon\\Desktop\\project111\\VeganLoadMap\\src\\components\\review\\Review.vue"],"sourcesContent":["<template>\n  <header>Review</header>\n  <div id=\"reviewContainer\" class=\"container\" style=\"margin-left: -3px\">\n    <div v-for=\"review in reviews\" :key=\"review.seq\" class=\"review\">\n      <input type=\"hidden\" v-model=\"review.seq\"/>\n      <input type=\"hidden\" v-model=\"review.storeid\"/>\n\n      <div class=\"review-photo\">\n        <img v-bind:src=\"review.image\">\n      </div>\n\n      <div class=\"review-box\">\n\n        <div class=\"review-author\">\n          <p><strong>{{ review.writer }}</strong></p>\n        </div>\n        <div class=\"review-comment\">\n          <p>{{ review.content }}</p>\n        </div>\n      </div>\n      <router-link :to=\"{ name: 'review_update', params: { value: review.seq } }\"><button v-if=\"review.writer === nickname\" type=\"button\">수정</button></router-link>\n\n      <button v-if=\"review.writer === nickname\" type=\"button\" @click=\"deleteReview(review)\">삭제</button>\n    </div>\n\n  </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      reviews: [],\n      nickname: '',\n      newReview: {\n        seq: '',\n        storeid: '',\n        content: '',\n        image: '',\n      },\n\n    };\n  },\n  created() {\n    this.fetchReview();\n  },\n  methods: {\n    fetchReview() {\n      const storename = this.$route.query.storename;\n      axios\n          .get(\"/api/review/list\", {\n            params: {\n              storename: storename // 이 부분에서 해당 데이터를 전달합니다.\n            }\n          })\n          .then((response) => {\n            this.reviews = response.data.reviewList;\n            this.nickname = response.data.nickname;\n          })\n          .catch((error) => {\n            console.error(\"Error fetching reviews\", error);\n          });\n    },uploadImg() {\n      var image = this.$refs['image'].files[0]\n      const url = URL.createObjectURL(image)\n      this.image = url\n      this.newReview.image = this.image;\n      console.log(url)\n      console.log(this.image)\n    },\n    addReview() {\n      axios\n          .post(\"/api/review/insert\", this.newReview)\n          .then((response) => {\n            console.log(\"Review added successfully\", response);\n            this.fetchReview(); // Fetch reviews again to get the updated list\n            this.newReview = {\n              storeid: '',\n              content: '',\n              image: '',\n            };\n            alert(\"리뷰가 등록되었습니다.\");\n          })\n          .catch((error) => {\n            console.error(\"Error adding review\", error);\n          });\n    },\n    deleteReview(review) {\n      axios\n          .delete(`/api/review/delete/${review.seq}`) // Assuming seq is the identifier for the review\n          .then(() => {\n            this.fetchReview();\n          })\n          .catch((error) => {\n            console.error(\"Error delete review\", error);\n          });\n    },\n  },\n};\n</script>\n<style scoped>\n* {\n  box-sizing: border-box;\n}\n\nheader {\n  width: 80%;\n  font-size: 2em;\n  text-align: center;\n  background: #2ecc71;\n  color: #fff;\n  margin: 0 auto;\n  padding: 0.5em;\n}\n\nbody {\n  max-width: 1024px;\n  margin: 20px auto;\n  font-size: 16px;\n  font-family: 'Poppins', sans-serif;\n}\n\nimg {\n  max-width: 100%;\n  display: block;\n}\n\np {\n  margin: 0;\n}\n\nlabel {\n  width: 15%;\n  margin: 10px 1% 0 0;\n  display: inline-block;\n  float: left;\n}\n\ninput[type=\"text\"] {\n  width: 84%;\n  margin: 10px 0;\n  height: 40px;\n  border: none;\n  background: #F6F6F6;\n  padding: 1em;\n}\n\ntextarea {\n  width: 84%;\n  border: none;\n  background: #F6F6F6;\n  margin: 10px auto;\n  height: 100px;\n  padding: 1em;\n  border-radius: 20px;\n  text-align: center;\n\n}\n\nbutton {\n  float: right;\n  width: 20%;\n  height: 40px;\n  border: none;\n  background: #2ecc71;\n  font-size: 16px;\n  color: white;\n}\n\n.review {\n  width: 100%;\n  display: inline-block;\n  margin: 10px 0;\n}\n\n.review-photo {\n  height: 80px;\n  width: 80px;\n  display: inline-block;\n  float: left;\n  margin-right: 3em;\n}\n\n.review-box {\n  float: left;\n  display: inline-block;\n  width: 87.5%;\n  background: #F6F6F6;\n  padding: 1.5em;\n  position: relative;\n}\n\n.review-box:after, .review-box:before {\n  right: 100%;\n  top: 10%;\n  border: solid transparent;\n  content: \" \";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.review-box:after {\n  border-right-color: #F6F6F6;\n  border-width: 25px;\n}\n\n.review-comment {\n  color: #9A9999;\n}\n\n.review-date {\n  color: #C7C7C7;\n}\n\n.review-author {\n  color: #C7C7C7;\n}\n\n.review-author strong {\n  color: black;\n}\n</style>"],"mappings":";;gEACEA,mBAAA,CAAuB,gBAAf,QAAM;;EACTC,EAAE,EAAC,iBAAiB;EAACC,KAAK,EAAC,WAAW;EAACC,KAAyB,EAAzB;IAAA;EAAA;;;;;EAKnCD,KAAK,EAAC;AAAc;;;EAIpBA,KAAK,EAAC;AAAY;;EAEhBA,KAAK,EAAC;AAAe;;EAGrBA,KAAK,EAAC;AAAgB;;;EAIyFE,IAAI,EAAC;;;;;6DAnB/HC,UAAuB,EACvBL,mBAAA,CAuBM,OAvBNM,UAuBM,I,kBAtBJC,mBAAA,CAoBMC,SAAA,QAAAC,WAAA,CApBgBC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAlBL,mBAAA,CAoBM;MApB0BM,GAAG,EAAED,MAAM,CAACE,GAAG;MAAEZ,KAAK,EAAC;wBACrDF,mBAAA,CAA2C;MAApCI,IAAI,EAAC,QAAQ;uCAAUQ,MAAM,CAACE,GAAG,GAAAC;wDAAVH,MAAM,CAACE,GAAG,E,mBACxCd,mBAAA,CAA+C;MAAxCI,IAAI,EAAC,QAAQ;uCAAUQ,MAAM,CAACI,OAAO,GAAAD;wDAAdH,MAAM,CAACI,OAAO,E,GAE5ChB,mBAAA,CAEM,OAFNiB,UAEM,GADJjB,mBAAA,CAA+B;MAAnBkB,GAAG,EAAEN,MAAM,CAACO;2CAG1BnB,mBAAA,CAQM,OARNoB,UAQM,GANJpB,mBAAA,CAEM,OAFNqB,UAEM,GADJrB,mBAAA,CAA2C,YAAxCA,mBAAA,CAAoC,gBAAAsB,gBAAA,CAAzBV,MAAM,CAACW,MAAM,iB,KAE7BvB,mBAAA,CAEM,OAFNwB,UAEM,GADJxB,mBAAA,CAA2B,WAAAsB,gBAAA,CAArBV,MAAM,CAACa,OAAO,iB,KAGxBC,YAAA,CAA6JC,sBAAA;MAA/IC,EAAE;QAAAC,IAAA;QAAAC,MAAA;UAAAC,KAAA,EAA4CnB,MAAM,CAACE;QAAG;MAAA;;wBAAM,MAAmE,CAArDF,MAAM,CAACW,MAAM,KAAKb,KAAA,CAAAsB,QAAQ,I,cAAxCzB,mBAAA,CAAmE,UAAnE0B,WAAmE,EAAX,IAAE,K;;iDAExHrB,MAAM,CAACW,MAAM,KAAKb,KAAA,CAAAsB,QAAQ,I,cAAxCzB,mBAAA,CAAiG;;MAAvDH,IAAI,EAAC,QAAQ;MAAE8B,OAAK,EAAAnB,MAAA,IAAEoB,QAAA,CAAAC,YAAY,CAACxB,MAAM;OAAG,IAAE,iBAAAyB,WAAA,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}